%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: qel_bar_dist_20Ne_9092Zr.pdf
%%Creator: Adobe Acrobat 9.5.2
%%For: yusa
%%CreationDate: 12/10/30, 14:27
%%BoundingBox: 0 0 250 322
%%HiResBoundingBox: 0 0 249.3425 321.4488
%%CropBox: 0 0 249.3425 321.4488
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 843 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:56:37        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2012-10-30T14:27:02+09:00"
   xmp:CreateDate="2012-10-30T14:25:34+09:00"
   xmp:MetadataDate="2012-10-30T14:27:02+09:00"
   xmp:CreatorTool="LaTeX with hyperref package"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:b87255ee-cb83-7e41-8db0-a58098bf6038"
   xmpMM:InstanceID="uuid:87e1d910-9575-4047-8fe5-3046c6bf43ce"
   pdf:Producer="Acrobat Distiller 6.0.1 (Windows)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -321.449 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
7.62939e-06 0 mo
7.62939e-06 321.449 li
249.343 321.449 li
249.343 0 li
cp
clp
[1 0 0 1 -39.685 0 ]ct
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /DQVAAA+Times-Roman def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Roman) def/ItalicAngle 0 def/BaseFontName (Times-Roman) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 57 /nine putdup 65 /A putdup 67 /C putdup 68 /D putdup 69 /E putdup 70 /F putdup 72 /H putdup 73 /I putdup 75 /K putdup 76 /L putdup 78 /N putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 84 /T putdup 85 /U putdup 86 /V putdup 87 /W putdup 89 /Y putdef/FontBBox {-168 -218 1000 898} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-14 -0 662 676 450 460 683 683] def/OtherBlues [262 270 -218 -217] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/StdHW [28] def/StdVW [84] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings31 dict dup begin/parenleft <1C60D8A8C9B81F2C34DD536D1360D89197E7FA43CD15762B1F48F10FBDCF9BC2C750CDE4A2E91649CF8859E337C2E166D3734F3568F45FDC414D6EEB6B611B8690C7C03C> |-/parenright <1C60D8A8C9B81F2C34DD536D5F91D4C3DAE454AEB0D09D2D77AB7A4947777BB664E613196BC679C0FA303967174C88DFCCFA0D154A8957EC684FC25A36D2507079F0D08A> |-/comma <1C60D8A8C9B8707CB516A860815AB2EC26918885F713E4ED7939803E0A8E0EE12DBD595F7B4FC46C96E99C7C244F8EE37F7C691D6FF966A57DBB357A175F54A977790792A86A701245F8E3A81974A3254E3CFE0117AA8FEF> |-/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A7463788209DFA6F2469A76A662ABDEC36022D07150EBCCB00EAFC3634E253FB48B765FB94D71E293B85E25BD0A9620E2BFB3082EA4BB23F9236A4694D2C3E9FC45E251B722> |-/one <1C60D8A8C9B7A73DC549024B406C76DEED7B46C1EF6EB5651B1F268C3787648C40DBF41CCAF519D06A13A3171180A36B4BF986E9264F6C74AFB62268E95BF4B0184D270E> |-/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B7460BBC2BE41737489572FD61CF5BD3DA796B955EB550353EDF2F8C07B4F5384131697035B0D3184C9331276BD170AD13B7E6187EA056B38F406A362F0A077FD8459EE186F67C0C> |-/three <1C60D8A8C9B7A73D33B7A780A4FB6D47887A89CCD14262CC5EAF9A44E4667C02E08E12C9FAA81B3FDF7544E6E75E5296452BF3839C72DB687B09DBAE283E004770052C2C40F3BE9D14CD88A743EF8BCC90D61B07BC93A5F254687A358EFD7C6A34DA02B99630F8F91E5B5B18682C41B5E27DFA84375DC950157D776BEF8B8244DE2CBD755506> |-/four <1C60D8A8C9B7A73DB91ED1D58B1534FC3DC9CE70FBEFFE64A020E69D305561F2E3159DBBBFB3075C8C37AD523FA4E6CA1C673946692CFDA34CFE2A635874507E6C9AACEA9BFCA866A31780314DE8CB239F7F84052FFAEAB4A857AB9E0A7D17979C9340343DBC60020EAB> |-/five <1C60D8A8C9B7A73D33A88FEA12959A734F76D056A6AD18616787F24D4694B06D2D404FC3FCA38087EA8162B81AF2DD5F722A8A8620829370F42A0D36AD232CF1AF8C5768FCC5070E4C1D383794DEEE463936008AA8B79C75171B0B56AEE44FCABBD4B348C68E82A7216D83E5CCC6E39493B5E64C831AA2> |-/six <1C60D8A8C9B7A73D33BF1B90A184398C344468AF20F393E1CDAE1A1BDF4B1EF29581C243D118AD9C2F9F3B85C649B4F94D8775B8245D414436A38469371891286E3E4F3F2C58114BE7041C63E1137F930DD38393462B124AC8D60E4109AAD485EEDD44016B3DCF2F116B050BDED76293F395802A2102> |-/nine <1C60D8A8C9B7A73DD0C741EDEE83FA306ACFF34B0F4BCBA36C21A7408C6F9BEB4A442B2F13237BF635FDFAB907B29059292DDAFF5DABCEDC6EC41C5F3C648AFBF12E0ECD4E60C870F065877946C9D47E8B9420F50B2720233BC04950F88E0C085E4CFFDC37232A1913DAF7D116A465520E3E0185527DFA5DEE32> |-/A <1C60D8A8C9B6079F1E48848039BAD53EF75083A15B245763DB78818AFF61A16A1320ECEE497C9F16C5A9970A7745608AF8FED49797B2C617F48878314ECB9388DC87C41E0CC6BE34027C1122095499F934B9D2E8FCDB060A9CB7A271807727C28B32415ED07DCC7001E6D3C85F5AEC7FFEE39DAFE67E7733CC865438> |-/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1BEC23C2AC3C7BB24FE587EAFC58752906FDF803B7EE08CC0EEA6D4DF528ED9A25AEB8763A1E0F3351E8367C0E0AF3723CBF0E47B6C61A46C0C9B9B14422A38EEC6A11432287BB1AAA047F2C2F93CA4A999D93CAB432079751D1C3EA> |-/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB054073985C252F108C147E5B894B74E8DD41D4B2907B2971BD6DBC1DA40B30BE321EFA5013A17A623A37E171056FA1C8F8EA833B84DA2D5777727CE57C35BBEBB84A1CD5B36C6FDD2EDF02AB75D6D59B40E8D867EAC2EF07C9A4EC98494859463D49D6F36907EE221091971F8FF4FEE> |-/E <1C60D8A8C9B7D8BE6A6EDEC7A42842EA4F0E34B06A7ADB9E9D606CC12DFCC58C499944486BC2E1461DA5CCC60C99E2409FC8400D8E867A3E518B76BC24BDD4E0EEB0CD902F7EAB97FABA7DA3C9FC37B399B0166CF4B1D4B61FEFF822440F5F4D8B0E5BB37984F9B56DB6714933760DC4DB6872720E4125AE0EB0FEDE661DAED0217CC0DEFD21A5F9B1C2564FF8D194AAF30E05D310042230EE67F24841F08AF905799BB463507C4C6D8F5CDA5A47F765531646F2A5624F53C5FE261955B6C1E2A87993AA> |-/F <1C60D8A8C9B7EF32570E39CCED07FE54E8B5118F3EFF07C7A79A2805A7241FA0611FB6DCB02F4798E0410DC1710B4F82A5B7BCC7865D64D2E2B0A30C294A77483F558D7052690E49D2377820A0E476D251BE7D8E7824AF8838D3AC4B16AB7150225F7733450A626EF63F06C118CB55A5AEB0457B0B46C175C6FAF26CA023804F63A0F8CB598EED6E4E1BE1C9B8155B5E2F3060102CB3B31CD1B056E0CC0202> |-/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090B6EA72F2CAD492799B13A490C22BB769448B5BE5145154E5257C346442332292571F1722B637B36F195964360C86F3C2FA20D5968E5EF117A87C5275E3CF4EDCBA851C9A2685EF777C52F37A9D6571C1FF8201E097F935E15B632A692C95A8A199E69FDF3449B5C7E7D9F966187E> |-/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7CEBA53BA35C0D63778365713E4937D45432C22967EB42DF6DA1495947FD682A87B83F3472A9AC53AFF202CED526C6E0626B1> |-/K <1C60D8A8C9B6079F1E48848E88AD51D875E18A757A1A6325AC362734879AAFAD42E2CFBAD5446AE147FD12A5E9A047AD123CE532F2C71974BDDAFED116F386DFBBD27BFD1FE6B32F3F98B336226EB8E9B9110925821FFD7841F8A8D3AB3912F803B84F359CF4C96FC59565AEDDE400BC329821CB75B63B2CAC9CAFFCE37E85F33708E8758BC2D160D6830730BB048B8C3A9E76619F> |-/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAF0D74F28161F1E96F93676A52EBF6FCEE0F833224946C62AB4825949DCD38F43112D2F78458FF85000573083054640F9BEF9D64C20B231AD48404F645607CB5F4CDB2A6BFD9D45ADC27D5BF358972E357CAF472CF1479518> |-/N <1C60D8A8C9B6079F1E48848E88AD51D864EC24104C6DD11D55A63CFF3E9C756106D0E97B2A535F11521FC421A87DB7AA1BB7E5E72F9C1F26749CEA60879128C49F034519E4F1E3D0B2668109027E7AE954A9FBCDB8C98F28D8FD5566696AFD7E7E86478C98CFD0142A5D34CA87950DF8C96F24696E1A4263A162D3B7D0318A42AFF3> |-/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D4082D7029995CDB5B363791EF40B5AF7B3843B9E472E4F50B8472BF0DFE33E4CD5D7DBCF3EB6D302111F8799A9C032144A0C9CB2E8226B631DA3032A3884790267BD00E4ECAADF3> |-/P <1C60D8A8C9B7EF32570E39CC82D8FC3971C64FFF40AB84806AE53A80D00359C85B6AFD0D4E4516E6F925E114CB5694CA3C3BB5BD1D3AACEA6F4D4E17877AA50A9AB3B90A72FF729470C063D06BEEAA5184A0D925F90DCE26119419701EB253AFCA84A1D0339652DC6259CB60A6C47C07B17E94492CCC7FA176E9C4175D61D356F93D23B513D5121081D0F8AD8E04BD4C29CCCFFE386A44> |-/R <1C60D8A8C9B64EDF88216CF039522D2CD16031C14F48AE18706656314B55A44D32F713967A5EF8844C033ACCF3957E344151100D1C83334794F24CBE3A1B9AF4A82F4D6C7CD452B51143B0C6F97C0FA861F03E4C420C96B9F0EC4B2245F8CD654119EBE887016A0D90A29861BC0C36838B5464E1DB93F15F4476DA9E07D597F3D2EA5732F6E8BF74573804D1C1542747A58851CA05BA5FA2416A905DAF1E03CC5FD0906576F6C98C075D633B8EC1BE9755F5EC40> |-/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87D04984A8> |-/T <1C60D8A8C9B7D8BE7EA0B64700DC8E438573301CAC4344B7D410E182F881F58CB0EE6C7200F45451BF195D6B4EC9CF9C8B176B767CF2064CDC4BF9C3DA0B6A6FF54C56F67DE1F05535B028AE5A1E7C736084EB09A8A00FEB9607E1E016> |-/U <1C60D8A8C9B6079FE80F64D637F1516D9E8985E20DE1E4A504B71DC250CC94F8454FA963469B35C9D4B7E46C018A2F3902FA466C96536C754E001D7B60F1C628148C766518D0DC4CFB4FCBBE135C4BE555811EB0F5DE32774AE040CA644920E9C9E4CEC38A967DCB11773942911928CF14258BA4> |-/V <1C60D8A8C9B6079F00D3839AD3AAE47C24C61BEF9550E6B3F54F328A2E722C97D7D2FBC5772073A5D2242D57568F9713676A9A112080E9C58F570910912489ED383248F2A72FF33DDFA4B7BB50F9DB818B39D67B1C90816C650F497C9BFE308B3A0ADE01210A> |-/W <1C60D8A8C9B5D6EF203CFD756D7886C6923F14CB2B145795133A4097CE2D5E96D3BF6D30AF147BE0DC50CEF0E4C43E37601F7D5B36C9EA62EB623CBDD7621F7CDC9591AD048D1D8A14C445CA02086468A3F68BFB4F34B84F197939306BCA26FB45C767C3471D697F21D9DB9B96CBD00D5CB38D9F6CA97F559147F568DB764BF9F72A1F66FAB764FDDF200F256A908BEC101F14CE4C8841DBE1467BFC364A4F282E1F5B95C9> |-/Y <1C60D8A8C9B6079F1E48848E88AD51D8AA3C768145CDCFEDAB6B83C487A69F31930A579C115CC8C7B6544BBBD866CC3DFFD379BB9B60E13ECCDC0F741A908D74DDE0F7C507AF7F488799737D8C65256B95AF5C7D5B4FFD0CAB79A3BC373F5C626243062B54DB0912782D7331A8EA0D3C3A5D6A6ADF4E004A15874BC55709> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BDEBBU+Times-Roman /DQVAAA+Times-Roman findfont ct_VMDictPut/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /.notdef /C /D /E /F /.notdef /H /I /.notdef /K /L /.notdef /N /O /P /.notdef /R /S /T /U /V /W /.notdef /Y 166{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf40.824 -16.9509 mo(EFFECTSOFWEAKLYCOUPLEDCHANNELSON)[5.4784 4.98532 4.98532 5.4784 5.98065 5.4784 7.21796 6.47105 7.22691 8.46069 5.47841 6.47374 6.47374 4.58087 8.72162 5.98514 6.47374 6.47374 4.98532 5.47841 5.47839 8.71266 5.98065 6.47375 6.47374 6.47374 6.47374 5.47841 5.47839 7.22691 6.47375 0 ]xsh%ADOBeginSubsetFont: RQYAAA+MTMI Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RQYAAA+MTMI def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation) def/Weight (Medium) def/ItalicAngle -14.0361 def/BaseFontName (MTMI) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 58 /period putdef/FontBBox {0 -213 987 680} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-18 -0 653 672 428 441] def/OtherBlues [268 271 -211 -192] def/BlueScale 0.0479599 def/StdHW [34] def/StdVW [73] def/StemSnapH [20 34] def/StemSnapV [55 73] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/period <1C60D8A8C9B859EB4CC3B80A0EF1567264FFADB77611645EA6395F9BB3FD093035B70BC8D098F94C1AE3> |-/.notdef <1C60D8A8C9B81F2CC3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BDEBBV+MTMI /RQYAAA+MTMI findfont ct_VMDictPut/BDEBBV+MTMI*1 [58{/.notdef}rp /period 197{/.notdef}rp]BDEBBV+MTMI nfBDEBBV+MTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf243.169 -16.9509 mo(:::)[3.9604 3.9604 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf391.03 -16.9509 mo(PHYSICALREVIEWC)[4.98621 6.47464 6.47464 4.98621 2.98666 5.98154 6.47464 7.7218 5.98154 5.47931 6.47464 2.98666 5.47928 10.6924 0 ]xsh%ADOBeginSubsetFont: CBPQMX+Times-Bold Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /CBPQMX+Times-Bold def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Bold) def/ItalicAngle 0 def/BaseFontName (Times-Bold) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 56 /eight putdef/FontBBox {-168 -218 1000 935} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 676 691 461 473] def/OtherBlues [268 275 -206 -203] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/BlueScale 0.0437916 def/StdVW [139] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/zero <1C60D8A8C9B7A73D300A56E04A82C9489CB10A8D5D8A1CE23AD355BCA1220794CD88E5D3319BCC1499097FDE125CAEBD81AFB7940E79A48AA8531CD25C3B7643897E934807122282BF4CFA3143D12F21270BAB87E8242C1D5865D04BF8356131B8B9526BE9306B> |-/eight <1C60D8A8C9B7A73D30061FAFE781A121F40E2C045ED20653EE77041581D97B3EB5A239D9DAF1FE5C1856FDBA60DAB647248B7519B8699E7B27CEA41A98F5375229EAAC330FA99E3D311DD7C841AB9E4CE13F980801AE8CF52935ED235B808125CA8E8D34B47F0183DA7878E7727504C3CF9767A3C870D7BE81E23692DA13EFF6C0923F456039982AAD716FE10C70E213B750D053170FE264D824965C6A4C5141D9F103852EAA0D8ADD9E454D7831D7B4A66F7246CF2901679178202C075F2E846D6625821B912343620363674C964059D4A024AFB75096766296> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BDEBBW+Times-Bold /CBPQMX+Times-Bold findfont ct_VMDictPut/BDEBBW+Times-Bold*1 [48{/.notdef}rp /zero 7{/.notdef}rp /eight 199{/.notdef}rp]BDEBBW+Times-Bold nfBDEBBW+Times-Bold*1 [8.9664 0 0 -8.9664 0 0 ]msf482.437 -16.9509 mo(80)[4.4823 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf491.402 -16.9509 mo(,054613\(2009\))[4.4823 4.4823 4.4823 4.4823 4.48233 4.4823 6.73199 2.9848 4.4823 4.4823 4.4823 4.4823 0 ]xsh86.931 146.076 mo
86.931 142.397 86.931 146.076 86.931 142.397 cv
84.376 146.076 86.931 142.397 84.376 146.076 cv
86.931 146.076 84.376 146.076 86.931 146.076 cv
cp
86.931 148.95 mo
86.931 146.996 86.931 148.95 86.931 146.996 cv
83.391 146.996 86.931 146.996 83.391 146.996 cv
83.391 146.076 83.391 146.996 83.391 146.076 cv
87.114 140.788 83.391 146.076 87.114 140.788 cv
87.933 140.788 87.114 140.788 87.933 140.788 cv
87.933 146.076 87.933 140.788 87.933 146.076 cv
89.034 146.076 87.933 146.076 89.034 146.076 cv
89.034 146.996 89.034 146.076 89.034 146.996 cv
87.933 146.996 89.034 146.996 87.933 146.996 cv
87.933 148.95 87.933 146.996 87.933 148.95 cv
86.931 148.95 87.933 148.95 86.931 148.95 cv
.694423 .677272 .637385 .738643 cmyk
f
93.263 146.076 mo
93.263 142.397 93.263 146.076 93.263 142.397 cv
90.709 146.076 93.263 142.397 90.709 146.076 cv
93.263 146.076 90.709 146.076 93.263 146.076 cv
cp
93.263 148.95 mo
93.263 146.996 93.263 148.95 93.263 146.996 cv
89.723 146.996 93.263 146.996 89.723 146.996 cv
89.723 146.076 89.723 146.996 89.723 146.076 cv
93.447 140.788 89.723 146.076 93.447 140.788 cv
94.266 140.788 93.447 140.788 94.266 140.788 cv
94.266 146.076 94.266 140.788 94.266 146.076 cv
95.368 146.076 94.266 146.076 95.368 146.076 cv
95.368 146.996 95.368 146.076 95.368 146.996 cv
94.266 146.996 95.368 146.996 94.266 146.996 cv
94.266 148.95 94.266 146.996 94.266 148.95 cv
93.263 148.95 94.266 148.95 93.263 148.95 cv
f
134.428 146.076 mo
134.428 142.397 134.428 146.076 134.428 142.397 cv
131.873 146.076 134.428 142.397 131.873 146.076 cv
134.428 146.076 131.873 146.076 134.428 146.076 cv
cp
134.428 148.95 mo
134.428 146.996 134.428 148.95 134.428 146.996 cv
130.888 146.996 134.428 146.996 130.888 146.996 cv
130.888 146.076 130.888 146.996 130.888 146.076 cv
134.612 140.788 130.888 146.076 134.612 140.788 cv
135.43 140.788 134.612 140.788 135.43 140.788 cv
135.43 146.076 135.43 140.788 135.43 146.076 cv
136.533 146.076 135.43 146.076 136.533 146.076 cv
136.533 146.996 136.533 146.076 136.533 146.996 cv
135.43 146.996 136.533 146.996 135.43 146.996 cv
135.43 148.95 135.43 146.996 135.43 148.95 cv
134.428 148.95 135.43 148.95 134.428 148.95 cv
f
138.568 146.594 mo
138.568 146.88 138.636 147.157 138.771 147.423 cv
138.908 147.691 139.109 147.898 139.375 148.045 cv
139.643 148.191 139.93 148.264 140.238 148.264 cv
140.716 148.264 141.112 148.11 141.424 147.803 cv
141.736 147.494 141.892 147.103 141.892 146.627 cv
141.892 146.145 141.731 145.747 141.41 145.43 cv
141.089 145.115 140.687 144.958 140.205 144.958 cv
139.734 144.958 139.343 145.114 139.033 145.425 cv
138.723 145.737 138.568 146.126 138.568 146.594 cv
cp
138.891 142.825 mo
138.891 143.211 139.015 143.527 139.263 143.771 cv
139.512 144.017 139.836 144.139 140.233 144.139 cv
140.618 144.139 140.935 144.018 141.182 143.774 cv
141.428 143.532 141.552 143.234 141.552 142.881 cv
141.552 142.513 141.425 142.205 141.171 141.954 cv
140.916 141.704 140.6 141.578 140.221 141.578 cv
139.839 141.578 139.522 141.702 139.269 141.946 cv
139.017 142.191 138.891 142.484 138.891 142.825 cv
cp
139.091 144.523 mo
138.675 144.371 138.368 144.154 138.168 143.872 cv
137.967 143.589 137.867 143.252 137.867 142.859 cv
137.867 142.265 138.08 141.766 138.507 141.361 cv
138.934 140.957 139.502 140.754 140.21 140.754 cv
140.923 140.754 141.496 140.961 141.93 141.375 cv
142.364 141.79 142.582 142.293 142.582 142.887 cv
142.582 143.265 142.483 143.594 142.284 143.875 cv
142.085 144.155 141.784 144.371 141.379 144.523 cv
141.88 144.686 142.261 144.95 142.523 145.314 cv
142.785 145.678 142.916 146.112 142.916 146.617 cv
142.916 147.314 142.669 147.901 142.175 148.376 cv
141.682 148.851 141.032 149.088 140.227 149.088 cv
139.422 149.088 138.772 148.85 138.279 148.373 cv
137.785 147.896 137.538 147.301 137.538 146.588 cv
137.538 146.058 137.674 145.614 137.942 145.255 cv
138.211 144.897 138.594 144.653 139.091 144.523 cv
f
178.715 146.811 mo
179.766 146.722 178.715 146.811 179.766 146.722 cv
179.843 147.234 180.025 147.619 180.309 147.877 cv
180.592 148.136 180.934 148.264 181.336 148.264 cv
181.818 148.264 182.226 148.082 182.562 147.719 cv
182.894 147.355 183.061 146.872 183.061 146.271 cv
183.061 145.7 182.9 145.249 182.58 144.918 cv
182.26 144.588 181.839 144.423 181.32 144.423 cv
180.996 144.423 180.706 144.497 180.446 144.643 cv
180.186 144.79 179.981 144.98 179.834 145.214 cv
178.894 145.091 179.834 145.214 178.894 145.091 cv
179.684 140.899 178.894 145.091 179.684 140.899 cv
183.742 140.899 179.684 140.899 183.742 140.899 cv
183.742 141.856 183.742 140.899 183.742 141.856 cv
180.484 141.856 183.742 141.856 180.484 141.856 cv
180.045 144.05 180.484 141.856 180.045 144.05 cv
180.534 143.708 181.049 143.538 181.587 143.538 cv
182.299 143.538 182.9 143.785 183.39 144.278 cv
183.88 144.772 184.125 145.407 184.125 146.182 cv
184.125 146.921 183.91 147.559 183.478 148.097 cv
182.957 148.758 182.242 149.088 181.336 149.088 cv
180.593 149.088 179.989 148.88 179.519 148.465 cv
179.049 148.049 178.782 147.498 178.715 146.811 cv
f
190.313 147.986 mo
190.313 148.95 190.313 147.986 190.313 148.95 cv
184.92 148.95 190.313 148.95 184.92 148.95 cv
184.913 148.707 184.951 148.476 185.037 148.254 cv
185.174 147.886 185.393 147.524 185.695 147.167 cv
185.999 146.811 186.436 146.399 187.008 145.932 cv
187.893 145.205 188.493 144.628 188.805 144.204 cv
189.117 143.778 189.271 143.376 189.271 142.998 cv
189.271 142.601 189.131 142.266 188.846 141.994 cv
188.563 141.72 188.192 141.584 187.736 141.584 cv
187.253 141.584 186.868 141.728 186.578 142.018 cv
186.288 142.308 186.142 142.708 186.138 143.221 cv
185.108 143.115 186.138 143.221 185.108 143.115 cv
185.178 142.347 185.446 141.761 185.904 141.358 cv
186.365 140.956 186.983 140.754 187.759 140.754 cv
188.542 140.754 189.16 140.972 189.617 141.406 cv
190.074 141.84 190.302 142.378 190.302 143.02 cv
190.302 143.347 190.235 143.668 190.101 143.983 cv
189.968 144.299 189.746 144.631 189.436 144.98 cv
189.127 145.329 188.612 145.808 187.891 146.416 cv
187.29 146.921 186.905 147.263 186.733 147.443 cv
186.562 147.623 186.424 147.804 186.311 147.986 cv
190.313 147.986 186.311 147.986 190.313 147.986 cv
f
226.212 146.811 mo
227.264 146.722 226.212 146.811 227.264 146.722 cv
227.342 147.234 227.523 147.619 227.807 147.877 cv
228.091 148.136 228.433 148.264 228.834 148.264 cv
229.317 148.264 229.725 148.082 230.058 147.719 cv
230.392 147.355 230.558 146.872 230.558 146.271 cv
230.558 145.7 230.398 145.249 230.077 144.918 cv
229.757 144.588 229.337 144.423 228.818 144.423 cv
228.494 144.423 228.204 144.497 227.943 144.643 cv
227.683 144.79 227.479 144.98 227.332 145.214 cv
226.39 145.091 227.332 145.214 226.39 145.091 cv
227.18 140.899 226.39 145.091 227.18 140.899 cv
231.239 140.899 227.18 140.899 231.239 140.899 cv
231.239 141.856 231.239 140.899 231.239 141.856 cv
227.982 141.856 231.239 141.856 227.982 141.856 cv
227.542 144.05 227.982 141.856 227.542 144.05 cv
228.032 143.708 228.547 143.538 229.084 143.538 cv
229.798 143.538 230.398 143.785 230.888 144.278 cv
231.378 144.772 231.623 145.407 231.623 146.182 cv
231.623 146.921 231.408 147.559 230.976 148.097 cv
230.454 148.758 229.74 149.088 228.834 149.088 cv
228.092 149.088 227.486 148.88 227.017 148.465 cv
226.548 148.049 226.279 147.498 226.212 146.811 cv
f
233.653 146.305 mo
233.653 146.65 233.725 146.98 233.873 147.296 cv
234.019 147.611 234.223 147.852 234.487 148.017 cv
234.751 148.182 235.027 148.264 235.316 148.264 cv
235.74 148.264 236.104 148.094 236.407 147.752 cv
236.713 147.411 236.865 146.947 236.865 146.361 cv
236.865 145.796 236.714 145.352 236.413 145.027 cv
236.112 144.702 235.734 144.54 235.279 144.54 cv
234.825 144.54 234.441 144.702 234.127 145.027 cv
233.81 145.352 233.653 145.778 233.653 146.305 cv
cp
237.745 142.787 mo
236.748 142.864 237.745 142.787 236.748 142.864 cv
236.659 142.471 236.532 142.186 236.369 142.007 cv
236.098 141.722 235.764 141.578 235.367 141.578 cv
235.049 141.578 234.768 141.667 234.526 141.846 cv
234.211 142.076 233.963 142.412 233.781 142.853 cv
233.599 143.294 233.504 143.924 233.497 144.74 cv
233.739 144.373 234.033 144.101 234.382 143.922 cv
234.731 143.744 235.096 143.655 235.479 143.655 cv
236.147 143.655 236.715 143.901 237.185 144.393 cv
237.655 144.884 237.888 145.52 237.888 146.299 cv
237.888 146.811 237.777 147.288 237.557 147.727 cv
237.337 148.167 237.034 148.503 236.648 148.738 cv
236.262 148.971 235.823 149.088 235.334 149.088 cv
234.499 149.088 233.817 148.781 233.291 148.167 cv
232.763 147.553 232.501 146.54 232.501 145.13 cv
232.501 143.553 232.793 142.406 233.376 141.689 cv
233.884 141.066 234.568 140.754 235.427 140.754 cv
236.072 140.754 236.595 140.935 237.006 141.294 cv
237.417 141.655 237.662 142.151 237.745 142.787 cv
f
274.818 146.305 mo
274.818 146.65 274.891 146.98 275.037 147.296 cv
275.185 147.611 275.389 147.852 275.652 148.017 cv
275.916 148.182 276.193 148.264 276.482 148.264 cv
276.905 148.264 277.269 148.094 277.573 147.752 cv
277.879 147.411 278.03 146.947 278.03 146.361 cv
278.03 145.796 277.88 145.352 277.579 145.027 cv
277.278 144.702 276.899 144.54 276.442 144.54 cv
275.991 144.54 275.607 144.702 275.291 145.027 cv
274.976 145.352 274.818 145.778 274.818 146.305 cv
cp
278.908 142.787 mo
277.912 142.864 278.908 142.787 277.912 142.864 cv
277.824 142.471 277.697 142.186 277.534 142.007 cv
277.264 141.722 276.928 141.578 276.532 141.578 cv
276.212 141.578 275.933 141.667 275.692 141.846 cv
275.377 142.076 275.128 142.412 274.946 142.853 cv
274.764 143.294 274.669 143.924 274.662 144.74 cv
274.902 144.373 275.198 144.101 275.547 143.922 cv
275.897 143.744 276.26 143.655 276.643 143.655 cv
277.31 143.655 277.881 143.901 278.348 144.393 cv
278.818 144.884 279.053 145.52 279.053 146.299 cv
279.053 146.811 278.942 147.288 278.722 147.727 cv
278.502 148.167 278.198 148.503 277.812 148.738 cv
277.427 148.971 276.989 149.088 276.5 149.088 cv
275.664 149.088 274.983 148.781 274.456 148.167 cv
273.928 147.553 273.666 146.54 273.666 145.13 cv
273.666 143.553 273.956 142.406 274.539 141.689 cv
275.047 141.066 275.733 140.754 276.593 140.754 cv
277.235 140.754 277.761 140.935 278.171 141.294 cv
278.582 141.655 278.827 142.151 278.908 142.787 cv
f
281.072 144.924 mo
281.072 146.264 281.229 147.156 281.544 147.599 cv
281.857 148.043 282.244 148.264 282.704 148.264 cv
283.163 148.264 283.551 148.042 283.863 147.596 cv
284.177 147.151 284.335 146.261 284.335 144.924 cv
284.335 143.581 284.177 142.688 283.863 142.247 cv
283.551 141.805 283.159 141.584 282.692 141.584 cv
282.233 141.584 281.865 141.778 281.59 142.168 cv
281.245 142.666 281.072 143.584 281.072 144.924 cv
cp
280.043 144.924 mo
280.043 143.959 280.143 143.183 280.341 142.595 cv
280.54 142.006 280.834 141.552 281.226 141.233 cv
281.617 140.914 282.11 140.754 282.704 140.754 cv
283.142 140.754 283.526 140.843 283.855 141.019 cv
284.186 141.195 284.459 141.45 284.674 141.781 cv
284.888 142.114 285.057 142.518 285.181 142.995 cv
285.302 143.472 285.364 144.115 285.364 144.924 cv
285.364 145.881 285.265 146.655 285.069 147.243 cv
284.873 147.831 284.579 148.286 284.187 148.606 cv
283.796 148.928 283.302 149.088 282.704 149.088 cv
281.917 149.088 281.3 148.807 280.85 148.243 cv
280.312 147.563 280.043 146.457 280.043 144.924 cv
f
62.9 133.206 mo
62.9 134.546 63.057 135.438 63.37 135.881 cv
63.684 136.325 64.07 136.546 64.531 136.546 cv
64.991 136.546 65.378 136.324 65.692 135.878 cv
66.005 135.433 66.162 134.542 66.162 133.206 cv
66.162 131.862 66.005 130.97 65.692 130.529 cv
65.378 130.086 64.987 129.866 64.519 129.866 cv
64.059 129.866 63.692 130.061 63.417 130.451 cv
63.072 130.948 62.9 131.866 62.9 133.206 cv
cp
61.87 133.206 mo
61.87 132.241 61.969 131.464 62.168 130.876 cv
62.367 130.288 62.662 129.834 63.053 129.515 cv
63.444 129.196 63.937 129.037 64.531 129.037 cv
64.968 129.037 65.353 129.125 65.683 129.301 cv
66.013 129.477 66.286 129.731 66.501 130.064 cv
66.716 130.395 66.885 130.8 67.008 131.277 cv
67.131 131.754 67.191 132.397 67.191 133.206 cv
67.191 134.164 67.093 134.936 66.896 135.525 cv
66.699 136.113 66.405 136.567 66.014 136.889 cv
65.623 137.209 65.128 137.371 64.531 137.371 cv
63.744 137.371 63.126 137.088 62.677 136.524 cv
62.139 135.845 61.87 134.739 61.87 133.206 cv
f
68.766 137.231 mo
68.766 136.09 68.766 137.231 68.766 136.09 cv
69.906 136.09 68.766 136.09 69.906 136.09 cv
69.906 137.231 69.906 136.09 69.906 137.231 cv
68.766 137.231 69.906 137.231 68.766 137.231 cv
f
72.399 133.206 mo
72.399 134.546 72.556 135.438 72.869 135.881 cv
73.183 136.325 73.57 136.546 74.03 136.546 cv
74.49 136.546 74.877 136.324 75.19 135.878 cv
75.505 135.433 75.661 134.542 75.661 133.206 cv
75.661 131.862 75.505 130.97 75.19 130.529 cv
74.877 130.086 74.487 129.866 74.019 129.866 cv
73.559 129.866 73.192 130.061 72.917 130.451 cv
72.572 130.948 72.399 131.866 72.399 133.206 cv
cp
71.37 133.206 mo
71.37 132.241 71.469 131.464 71.668 130.876 cv
71.866 130.288 72.161 129.834 72.552 129.515 cv
72.944 129.196 73.437 129.037 74.03 129.037 cv
74.468 129.037 74.852 129.125 75.182 129.301 cv
75.513 129.477 75.785 129.731 76.001 130.064 cv
76.216 130.395 76.384 130.8 76.507 131.277 cv
76.629 131.754 76.691 132.397 76.691 133.206 cv
76.691 134.164 76.592 134.936 76.396 135.525 cv
76.199 136.113 75.905 136.567 75.514 136.889 cv
75.122 137.209 74.628 137.371 74.03 137.371 cv
73.243 137.371 72.626 137.088 72.176 136.524 cv
71.638 135.845 71.37 134.739 71.37 133.206 cv
f
78.732 133.206 mo
78.732 134.546 78.889 135.438 79.202 135.881 cv
79.516 136.325 79.903 136.546 80.363 136.546 cv
80.823 136.546 81.21 136.324 81.524 135.878 cv
81.837 135.433 81.994 134.542 81.994 133.206 cv
81.994 131.862 81.837 130.97 81.524 130.529 cv
81.21 130.086 80.82 129.866 80.352 129.866 cv
79.892 129.866 79.524 130.061 79.25 130.451 cv
78.904 130.948 78.732 131.866 78.732 133.206 cv
cp
77.702 133.206 mo
77.702 132.241 77.801 131.464 78.001 130.876 cv
78.199 130.288 78.494 129.834 78.885 129.515 cv
79.277 129.196 79.769 129.037 80.363 129.037 cv
80.801 129.037 81.185 129.125 81.515 129.301 cv
81.845 129.477 82.118 129.731 82.334 130.064 cv
82.549 130.395 82.718 130.8 82.84 131.277 cv
82.963 131.754 83.024 132.397 83.024 133.206 cv
83.024 134.164 82.925 134.936 82.729 135.525 cv
82.532 136.113 82.238 136.567 81.846 136.889 cv
81.455 137.209 80.96 137.371 80.363 137.371 cv
79.576 137.371 78.959 137.088 78.509 136.524 cv
77.971 135.845 77.702 134.739 77.702 133.206 cv
f
62.9 107.976 mo
62.9 109.315 63.057 110.207 63.37 110.65 cv
63.684 111.094 64.07 111.316 64.531 111.316 cv
64.991 111.316 65.378 111.093 65.692 110.648 cv
66.005 110.202 66.162 109.311 66.162 107.976 cv
66.162 106.632 66.005 105.74 65.692 105.298 cv
65.378 104.856 64.987 104.635 64.519 104.635 cv
64.059 104.635 63.692 104.83 63.417 105.22 cv
63.072 105.717 62.9 106.636 62.9 107.976 cv
cp
61.87 107.976 mo
61.87 107.01 61.969 106.234 62.168 105.646 cv
62.367 105.058 62.662 104.604 63.053 104.284 cv
63.444 103.966 63.937 103.806 64.531 103.806 cv
64.968 103.806 65.353 103.894 65.683 104.07 cv
66.013 104.246 66.286 104.5 66.501 104.833 cv
66.716 105.165 66.885 105.569 67.008 106.046 cv
67.131 106.523 67.191 107.166 67.191 107.976 cv
67.191 108.933 67.093 109.706 66.896 110.294 cv
66.699 110.882 66.405 111.337 66.014 111.658 cv
65.623 111.979 65.128 112.14 64.531 112.14 cv
63.744 112.14 63.126 111.858 62.677 111.293 cv
62.139 110.615 61.87 109.508 61.87 107.976 cv
f
68.766 112 mo
68.766 110.859 68.766 112 68.766 110.859 cv
69.906 110.859 68.766 110.859 69.906 110.859 cv
69.906 112 69.906 110.859 69.906 112 cv
68.766 112 69.906 112 68.766 112 cv
f
72.399 107.976 mo
72.399 109.315 72.556 110.207 72.869 110.65 cv
73.183 111.094 73.57 111.316 74.03 111.316 cv
74.49 111.316 74.877 111.093 75.19 110.648 cv
75.505 110.202 75.661 109.311 75.661 107.976 cv
75.661 106.632 75.505 105.74 75.19 105.298 cv
74.877 104.856 74.487 104.635 74.019 104.635 cv
73.559 104.635 73.192 104.83 72.917 105.22 cv
72.572 105.717 72.399 106.636 72.399 107.976 cv
cp
71.37 107.976 mo
71.37 107.01 71.469 106.234 71.668 105.646 cv
71.866 105.058 72.161 104.604 72.552 104.284 cv
72.944 103.966 73.437 103.806 74.03 103.806 cv
74.468 103.806 74.852 103.894 75.182 104.07 cv
75.513 104.246 75.785 104.5 76.001 104.833 cv
76.216 105.165 76.384 105.569 76.507 106.046 cv
76.629 106.523 76.691 107.166 76.691 107.976 cv
76.691 108.933 76.592 109.706 76.396 110.294 cv
76.199 110.882 75.905 111.337 75.514 111.658 cv
75.122 111.979 74.628 112.14 74.03 112.14 cv
73.243 112.14 72.626 111.858 72.176 111.293 cv
71.638 110.615 71.37 109.508 71.37 107.976 cv
f
80.914 109.128 mo
80.914 105.448 80.914 109.128 80.914 105.448 cv
78.359 109.128 80.914 105.448 78.359 109.128 cv
80.914 109.128 78.359 109.128 80.914 109.128 cv
cp
80.914 112 mo
80.914 110.046 80.914 112 80.914 110.046 cv
77.374 110.046 80.914 110.046 77.374 110.046 cv
77.374 109.128 77.374 110.046 77.374 109.128 cv
81.098 103.839 77.374 109.128 81.098 103.839 cv
81.916 103.839 81.098 103.839 81.916 103.839 cv
81.916 109.128 81.916 103.839 81.916 109.128 cv
83.019 109.128 81.916 109.128 83.019 109.128 cv
83.019 110.046 83.019 109.128 83.019 110.046 cv
81.916 110.046 83.019 110.046 81.916 110.046 cv
81.916 112 81.916 110.046 81.916 112 cv
80.914 112 81.916 112 80.914 112 cv
f
62.9 82.7452 mo
62.9 84.0842 63.057 84.9761 63.37 85.4202 cv
63.684 85.8632 64.07 86.0851 64.531 86.0851 cv
64.991 86.0851 65.378 85.8622 65.692 85.4172 cv
66.005 84.9722 66.162 84.0812 66.162 82.7452 cv
66.162 81.4012 66.005 80.5092 65.692 80.0671 cv
65.378 79.6252 64.987 79.4042 64.519 79.4042 cv
64.059 79.4042 63.692 79.6002 63.417 79.9891 cv
63.072 80.4872 62.9 81.4052 62.9 82.7452 cv
cp
61.87 82.7452 mo
61.87 81.7802 61.969 81.0032 62.168 80.4152 cv
62.367 79.8271 62.662 79.3732 63.053 79.0541 cv
63.444 78.7352 63.937 78.5751 64.531 78.5751 cv
64.968 78.5751 65.353 78.6622 65.683 78.8401 cv
66.013 79.0162 66.286 79.2701 66.501 79.6022 cv
66.716 79.9352 66.885 80.3392 67.008 80.8162 cv
67.131 81.2922 67.191 81.9362 67.191 82.7452 cv
67.191 83.7021 67.093 84.4752 66.896 85.0632 cv
66.699 85.6522 66.405 86.1061 66.014 86.4272 cv
65.623 86.7482 65.128 86.9092 64.531 86.9092 cv
63.744 86.9092 63.126 86.6271 62.677 86.0621 cv
62.139 85.3842 61.87 84.2781 61.87 82.7452 cv
f
68.766 86.7701 mo
68.766 85.6282 68.766 86.7701 68.766 85.6282 cv
69.906 85.6282 68.766 85.6282 69.906 85.6282 cv
69.906 86.7701 69.906 85.6282 69.906 86.7701 cv
68.766 86.7701 69.906 86.7701 68.766 86.7701 cv
f
72.399 82.7452 mo
72.399 84.0842 72.556 84.9761 72.869 85.4202 cv
73.183 85.8632 73.57 86.0851 74.03 86.0851 cv
74.49 86.0851 74.877 85.8622 75.19 85.4172 cv
75.505 84.9722 75.661 84.0812 75.661 82.7452 cv
75.661 81.4012 75.505 80.5092 75.19 80.0671 cv
74.877 79.6252 74.487 79.4042 74.019 79.4042 cv
73.559 79.4042 73.192 79.6002 72.917 79.9891 cv
72.572 80.4872 72.399 81.4052 72.399 82.7452 cv
cp
71.37 82.7452 mo
71.37 81.7802 71.469 81.0032 71.668 80.4152 cv
71.866 79.8271 72.161 79.3732 72.552 79.0541 cv
72.944 78.7352 73.437 78.5751 74.03 78.5751 cv
74.468 78.5751 74.852 78.6622 75.182 78.8401 cv
75.513 79.0162 75.785 79.2701 76.001 79.6022 cv
76.216 79.9352 76.384 80.3392 76.507 80.8162 cv
76.629 81.2922 76.691 81.9362 76.691 82.7452 cv
76.691 83.7021 76.592 84.4752 76.396 85.0632 cv
76.199 85.6522 75.905 86.1061 75.514 86.4272 cv
75.122 86.7482 74.628 86.9092 74.03 86.9092 cv
73.243 86.9092 72.626 86.6271 72.176 86.0621 cv
71.638 85.3842 71.37 84.2781 71.37 82.7452 cv
f
78.721 84.4152 mo
78.721 84.7012 78.789 84.9772 78.924 85.2452 cv
79.06 85.5121 79.261 85.7181 79.528 85.8652 cv
79.795 86.0121 80.083 86.0851 80.391 86.0851 cv
80.869 86.0851 81.264 85.9312 81.577 85.6232 cv
81.888 85.3152 82.044 84.9232 82.044 84.4492 cv
82.044 83.9662 81.883 83.5671 81.563 83.2512 cv
81.241 82.9352 80.84 82.7781 80.357 82.7781 cv
79.886 82.7781 79.496 82.9341 79.186 83.2462 cv
78.876 83.5582 78.721 83.9471 78.721 84.4152 cv
cp
79.044 80.6462 mo
79.044 81.0322 79.169 81.3472 79.417 81.5922 cv
79.666 81.8372 79.988 81.9601 80.385 81.9601 cv
80.771 81.9601 81.088 81.8381 81.334 81.5952 cv
81.581 81.3522 81.705 81.0541 81.705 80.7012 cv
81.705 80.3342 81.578 80.0262 81.323 79.7751 cv
81.069 79.5242 80.752 79.3992 80.374 79.3992 cv
79.992 79.3992 79.675 79.5212 79.422 79.7662 cv
79.17 80.0121 79.044 80.3052 79.044 80.6462 cv
cp
79.244 82.3442 mo
78.829 82.1912 78.521 81.9752 78.32 81.6921 cv
78.12 81.4102 78.02 81.0732 78.02 80.6791 cv
78.02 80.0851 78.233 79.5862 78.659 79.1822 cv
79.087 78.7772 79.654 78.5751 80.363 78.5751 cv
81.076 78.5751 81.649 78.7822 82.083 79.1962 cv
82.517 79.6092 82.735 80.1141 82.735 80.7072 cv
82.735 81.0862 82.635 81.4152 82.437 81.6952 cv
82.238 81.9752 81.936 82.1912 81.532 82.3442 cv
82.032 82.5082 82.414 82.7712 82.675 83.1342 cv
82.937 83.4982 83.069 83.9322 83.069 84.4371 cv
83.069 85.1351 82.822 85.7212 82.328 86.1971 cv
81.834 86.6711 81.185 86.9092 80.38 86.9092 cv
79.574 86.9092 78.925 86.6711 78.432 86.1942 cv
77.938 85.7172 77.692 85.1212 77.692 84.4102 cv
77.692 83.8782 77.826 83.4341 78.095 83.0762 cv
78.364 82.7181 78.747 82.4742 79.244 82.3442 cv
f
62.9 57.5142 mo
62.9 58.8542 63.057 59.7462 63.37 60.1891 cv
63.684 60.6332 64.07 60.8542 64.531 60.8542 cv
64.991 60.8542 65.378 60.6321 65.692 60.1862 cv
66.005 59.7411 66.162 58.8502 66.162 57.5142 cv
66.162 56.1702 66.005 55.2781 65.692 54.8362 cv
65.378 54.3942 64.987 54.1741 64.519 54.1741 cv
64.059 54.1741 63.692 54.3691 63.417 54.7582 cv
63.072 55.2562 62.9 56.1741 62.9 57.5142 cv
cp
61.87 57.5142 mo
61.87 56.5502 61.969 55.7731 62.168 55.1832 cv
62.367 54.5962 62.662 54.1422 63.053 53.8232 cv
63.444 53.5042 63.937 53.3442 64.531 53.3442 cv
64.968 53.3442 65.353 53.4332 65.683 53.6092 cv
66.013 53.7852 66.286 54.0392 66.501 54.3712 cv
66.716 54.7042 66.885 55.1082 67.008 55.5851 cv
67.131 56.0621 67.191 56.7051 67.191 57.5142 cv
67.191 58.4722 67.093 59.2452 66.896 59.8332 cv
66.699 60.4211 66.405 60.8762 66.014 61.1971 cv
65.623 61.5172 65.128 61.6782 64.531 61.6782 cv
63.744 61.6782 63.126 61.3962 62.677 60.8322 cv
62.139 60.1531 61.87 59.0472 61.87 57.5142 cv
f
68.766 61.5392 mo
68.766 60.3981 68.766 61.5392 68.766 60.3981 cv
69.906 60.3981 68.766 60.3981 69.906 60.3981 cv
69.906 61.5392 69.906 60.3981 69.906 61.5392 cv
68.766 61.5392 69.906 61.5392 68.766 61.5392 cv
f
75.143 61.5392 mo
74.141 61.5392 75.143 61.5392 74.141 61.5392 cv
74.141 55.1542 74.141 61.5392 74.141 55.1542 cv
73.9 55.3842 73.584 55.6141 73.192 55.8442 cv
72.8 56.0742 72.449 56.2462 72.138 56.3622 cv
72.138 55.3932 72.138 56.3622 72.138 55.3932 cv
72.697 55.1292 73.188 54.8102 73.607 54.4352 cv
74.026 54.0602 74.323 53.6971 74.497 53.3442 cv
75.143 53.3442 74.497 53.3442 75.143 53.3442 cv
75.143 61.5392 75.143 53.3442 75.143 61.5392 cv
f
82.968 60.5771 mo
82.968 61.5392 82.968 60.5771 82.968 61.5392 cv
77.574 61.5392 82.968 61.5392 77.574 61.5392 cv
77.567 61.2972 77.606 61.0662 77.692 60.8431 cv
77.829 60.4752 78.049 60.1141 78.351 59.7582 cv
78.653 59.4012 79.091 58.9902 79.662 58.5222 cv
80.549 57.7942 81.148 57.2181 81.46 56.7932 cv
81.772 56.3691 81.927 55.9672 81.927 55.5881 cv
81.927 55.1912 81.785 54.8561 81.501 54.5832 cv
81.217 54.3102 80.847 54.1741 80.391 54.1741 cv
79.908 54.1741 79.523 54.3192 79.233 54.6082 cv
78.944 54.8972 78.798 55.2982 78.794 55.8102 cv
77.763 55.7051 78.794 55.8102 77.763 55.7051 cv
77.834 54.9362 78.1 54.3511 78.559 53.9492 cv
79.02 53.5452 79.638 53.3442 80.413 53.3442 cv
81.196 53.3442 81.816 53.5621 82.273 53.9962 cv
82.729 54.4302 82.957 54.9681 82.957 55.6102 cv
82.957 55.9362 82.89 56.2582 82.757 56.5732 cv
82.623 56.8892 82.401 57.2212 82.091 57.5692 cv
81.781 57.9192 81.266 58.3972 80.547 59.0062 cv
79.945 59.5112 79.56 59.8531 79.389 60.0331 cv
79.218 60.2131 79.077 60.3942 78.966 60.5771 cv
82.968 60.5771 78.966 60.5771 82.968 60.5771 cv
f
62.9 32.2842 mo
62.9 33.6232 63.057 34.5151 63.37 34.9582 cv
63.684 35.4022 64.07 35.6232 64.531 35.6232 cv
64.991 35.6232 65.378 35.4012 65.692 34.9551 cv
66.005 34.5112 66.162 33.6202 66.162 32.2842 cv
66.162 30.9402 66.005 30.0472 65.692 29.6061 cv
65.378 29.1642 64.987 28.9432 64.519 28.9432 cv
64.059 28.9432 63.692 29.1382 63.417 29.5281 cv
63.072 30.0251 62.9 30.9442 62.9 32.2842 cv
cp
61.87 32.2842 mo
61.87 31.3192 61.969 30.5422 62.168 29.9542 cv
62.367 29.3661 62.662 28.9122 63.053 28.5931 cv
63.444 28.2731 63.937 28.1141 64.531 28.1141 cv
64.968 28.1141 65.353 28.2021 65.683 28.3782 cv
66.013 28.5552 66.286 28.8082 66.501 29.1412 cv
66.716 29.4731 66.885 29.8782 67.008 30.3552 cv
67.131 30.8312 67.191 31.4742 67.191 32.2842 cv
67.191 33.2422 67.093 34.0142 66.896 34.6022 cv
66.699 35.1902 66.405 35.6451 66.014 35.9662 cv
65.623 36.2872 65.128 36.4482 64.531 36.4482 cv
63.744 36.4482 63.126 36.1652 62.677 35.6011 cv
62.139 34.9222 61.87 33.8162 61.87 32.2842 cv
f
68.766 36.3082 mo
68.766 35.1661 68.766 36.3082 68.766 35.1661 cv
69.906 35.1661 68.766 35.1661 69.906 35.1661 cv
69.906 36.3082 69.906 35.1661 69.906 36.3082 cv
68.766 36.3082 69.906 36.3082 68.766 36.3082 cv
f
75.143 36.3082 mo
74.141 36.3082 75.143 36.3082 74.141 36.3082 cv
74.141 29.9232 74.141 36.3082 74.141 29.9232 cv
73.9 30.1542 73.584 30.3832 73.192 30.6132 cv
72.8 30.8431 72.449 31.0162 72.138 31.1312 cv
72.138 30.1622 72.138 31.1312 72.138 30.1622 cv
72.697 29.8992 73.188 29.5801 73.607 29.2051 cv
74.026 28.8301 74.323 28.4662 74.497 28.1141 cv
75.143 28.1141 74.497 28.1141 75.143 28.1141 cv
75.143 36.3082 75.143 28.1141 75.143 36.3082 cv
f
78.81 33.6642 mo
78.81 34.0092 78.883 34.3392 79.03 34.6552 cv
79.176 34.9702 79.382 35.2112 79.645 35.3762 cv
79.908 35.5411 80.185 35.6232 80.474 35.6232 cv
80.898 35.6232 81.261 35.4532 81.566 35.1122 cv
81.87 34.7701 82.022 34.3062 82.022 33.7202 cv
82.022 33.1552 81.872 32.7112 81.571 32.3862 cv
81.271 32.0612 80.892 31.8992 80.436 31.8992 cv
79.983 31.8992 79.598 32.0612 79.283 32.3862 cv
78.968 32.7112 78.81 33.1371 78.81 33.6642 cv
cp
82.901 30.1451 mo
81.905 30.2242 82.901 30.1451 81.905 30.2242 cv
81.816 29.8301 81.69 29.5452 81.527 29.3672 cv
81.255 29.0801 80.922 28.9382 80.525 28.9382 cv
80.205 28.9382 79.925 29.0272 79.684 29.2051 cv
79.369 29.4352 79.12 29.7701 78.938 30.2122 cv
78.756 30.6552 78.661 31.2831 78.654 32.1002 cv
78.896 31.7322 79.191 31.4592 79.54 31.2812 cv
79.888 31.1031 80.254 31.0142 80.636 31.0142 cv
81.304 31.0142 81.873 31.2601 82.342 31.7512 cv
82.812 32.2441 83.046 32.8792 83.046 33.6592 cv
83.046 34.1711 82.936 34.6462 82.715 35.0862 cv
82.494 35.5262 82.191 35.8632 81.805 36.0972 cv
81.419 36.3312 80.981 36.4482 80.491 36.4482 cv
79.656 36.4482 78.976 36.1412 78.448 35.5262 cv
77.921 34.9122 77.658 33.8992 77.658 32.4902 cv
77.658 30.9122 77.949 29.7651 78.532 29.0491 cv
79.04 28.4252 79.725 28.1141 80.586 28.1141 cv
81.228 28.1141 81.754 28.2932 82.164 28.6542 cv
82.574 29.0132 82.82 29.5112 82.901 30.1451 cv
f
62.9 7.05316 mo
62.9 8.39215 63.057 9.28516 63.37 9.72717 cv
63.684 10.1711 64.07 10.3932 64.531 10.3932 cv
64.991 10.3932 65.378 10.1702 65.692 9.72516 cv
66.005 9.28015 66.162 8.38916 66.162 7.05316 cv
66.162 5.70917 66.005 4.81616 65.692 4.37518 cv
65.378 3.93317 64.987 3.71216 64.519 3.71216 cv
64.059 3.71216 63.692 3.90717 63.417 4.29718 cv
63.072 4.79419 62.9 5.71313 62.9 7.05316 cv
cp
61.87 7.05316 mo
61.87 6.08716 61.969 5.31116 62.168 4.72314 cv
62.367 4.13513 62.662 3.68115 63.053 3.36218 cv
63.444 3.04315 63.937 2.88318 64.531 2.88318 cv
64.968 2.88318 65.353 2.97119 65.683 3.14813 cv
66.013 3.32416 66.286 3.57819 66.501 3.91016 cv
66.716 4.24316 66.885 4.64716 67.008 5.12317 cv
67.131 5.60016 67.191 6.24414 67.191 7.05316 cv
67.191 8.01013 67.093 8.78314 66.896 9.37115 cv
66.699 9.95917 66.405 10.4142 66.014 10.7352 cv
65.623 11.0562 65.128 11.2172 64.531 11.2172 cv
63.744 11.2172 63.126 10.9352 62.677 10.3712 cv
62.139 9.69214 61.87 8.58514 61.87 7.05316 cv
f
68.766 11.0782 mo
68.766 9.93616 68.766 11.0782 68.766 9.93616 cv
69.906 9.93616 68.766 9.93616 69.906 9.93616 cv
69.906 11.0782 69.906 9.93616 69.906 11.0782 cv
68.766 11.0782 69.906 11.0782 68.766 11.0782 cv
f
76.635 10.1141 mo
76.635 11.0782 76.635 10.1141 76.635 11.0782 cv
71.241 11.0782 76.635 11.0782 71.241 11.0782 cv
71.234 10.8372 71.273 10.6052 71.358 10.3821 cv
71.496 10.0142 71.715 9.65314 72.018 9.29718 cv
72.32 8.94019 72.757 8.52814 73.329 8.06116 cv
74.216 7.33319 74.815 6.75714 75.127 6.33215 cv
75.438 5.90717 75.594 5.50519 75.594 5.12616 cv
75.594 4.72919 75.452 4.39514 75.169 4.12115 cv
74.884 3.84918 74.514 3.71216 74.058 3.71216 cv
73.576 3.71216 73.19 3.85718 72.9 4.14716 cv
72.611 4.43616 72.464 4.83716 72.461 5.34918 cv
71.431 5.24414 72.461 5.34918 71.431 5.24414 cv
71.502 4.47516 71.767 3.89014 72.227 3.48718 cv
72.687 3.08417 73.305 2.88318 74.081 2.88318 cv
74.863 2.88318 75.483 3.10016 75.939 3.53516 cv
76.396 3.96814 76.623 4.50714 76.623 5.14813 cv
76.623 5.47516 76.558 5.79614 76.424 6.11218 cv
76.29 6.42719 76.068 6.76013 75.758 7.10815 cv
75.448 7.45715 74.934 7.93616 74.214 8.54517 cv
73.612 9.04913 73.227 9.39215 73.056 9.57214 cv
72.885 9.75116 72.745 9.93317 72.633 10.1141 cv
76.635 10.1141 72.633 10.1141 76.635 10.1141 cv
f
78.732 7.05316 mo
78.732 8.39215 78.889 9.28516 79.202 9.72717 cv
79.516 10.1711 79.903 10.3932 80.363 10.3932 cv
80.823 10.3932 81.21 10.1702 81.524 9.72516 cv
81.837 9.28015 81.994 8.38916 81.994 7.05316 cv
81.994 5.70917 81.837 4.81616 81.524 4.37518 cv
81.21 3.93317 80.82 3.71216 80.352 3.71216 cv
79.892 3.71216 79.524 3.90717 79.25 4.29718 cv
78.904 4.79419 78.732 5.71313 78.732 7.05316 cv
cp
77.702 7.05316 mo
77.702 6.08716 77.801 5.31116 78.001 4.72314 cv
78.199 4.13513 78.494 3.68115 78.885 3.36218 cv
79.277 3.04315 79.769 2.88318 80.363 2.88318 cv
80.801 2.88318 81.185 2.97119 81.515 3.14813 cv
81.845 3.32416 82.118 3.57819 82.334 3.91016 cv
82.549 4.24316 82.718 4.64716 82.84 5.12317 cv
82.963 5.60016 83.024 6.24414 83.024 7.05316 cv
83.024 8.01013 82.925 8.78314 82.729 9.37115 cv
82.532 9.95917 82.238 10.4142 81.846 10.7352 cv
81.455 11.0562 80.96 11.2172 80.363 11.2172 cv
79.576 11.2172 78.959 10.9352 78.509 10.3712 cv
77.971 9.69214 77.702 8.58514 77.702 7.05316 cv
f
.739 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
279.571 133.958 mo
279.571 7.80518 li
275.981 7.80518 li
279.571 20.4731 mo
277.776 20.4731 li
279.571 33.0361 mo
275.981 33.0361 li
279.571 45.7042 mo
277.776 45.7042 li
279.571 58.2672 mo
275.981 58.2672 li
279.571 70.9341 mo
277.776 70.9341 li
279.571 83.4971 mo
275.981 83.4971 li
279.571 96.1652 mo
277.776 96.1652 li
279.571 108.728 mo
275.981 108.728 li
279.571 121.396 mo
277.776 121.396 li
279.571 133.958 mo
275.981 133.958 li
89.579 7.80518 mo
279.571 7.80518 li
279.571 11.3951 li
255.82 7.80518 mo
255.82 9.60016 li
232.072 7.80518 mo
232.072 11.3951 li
208.323 7.80518 mo
208.323 9.60016 li
184.574 7.80518 mo
184.574 11.3951 li
160.825 7.80518 mo
160.825 9.60016 li
137.077 7.80518 mo
137.077 11.3951 li
113.328 7.80518 mo
113.328 9.60016 li
89.579 7.80518 mo
89.579 11.3951 li
89.579 133.958 mo
89.579 7.80518 li
85.99 7.80518 mo
89.579 7.80518 li
87.784 20.4731 mo
89.579 20.4731 li
85.99 33.0361 mo
89.579 33.0361 li
87.784 45.7042 mo
89.579 45.7042 li
85.99 58.2672 mo
89.579 58.2672 li
87.784 70.9341 mo
89.579 70.9341 li
85.99 83.4971 mo
89.579 83.4971 li
87.784 96.1652 mo
89.579 96.1652 li
85.99 108.728 mo
89.579 108.728 li
87.784 121.396 mo
89.579 121.396 li
85.99 133.958 mo
279.571 133.958 li
279.571 137.547 mo
279.571 133.958 li
255.82 135.753 mo
255.82 133.958 li
232.072 137.547 mo
232.072 133.958 li
208.323 135.753 mo
208.323 133.958 li
184.574 137.547 mo
184.574 133.958 li
160.825 135.753 mo
160.825 133.958 li
137.077 137.547 mo
137.077 133.958 li
113.328 135.753 mo
113.328 133.958 li
89.579 137.547 mo
89.579 133.958 li
@
86.931 290.175 mo
86.931 286.497 86.931 290.175 86.931 286.497 cv
84.376 290.175 86.931 286.497 84.376 290.175 cv
86.931 290.175 84.376 290.175 86.931 290.175 cv
cp
86.931 293.048 mo
86.931 291.094 86.931 293.048 86.931 291.094 cv
83.391 291.094 86.931 291.094 83.391 291.094 cv
83.391 290.175 83.391 291.094 83.391 290.175 cv
87.114 284.888 83.391 290.175 87.114 284.888 cv
87.933 284.888 87.114 284.888 87.933 284.888 cv
87.933 290.175 87.933 284.888 87.933 290.175 cv
89.034 290.175 87.933 290.175 89.034 290.175 cv
89.034 291.094 89.034 290.175 89.034 291.094 cv
87.933 291.094 89.034 291.094 87.933 291.094 cv
87.933 293.048 87.933 291.094 87.933 293.048 cv
86.931 293.048 87.933 293.048 86.931 293.048 cv
f
93.263 290.175 mo
93.263 286.497 93.263 290.175 93.263 286.497 cv
90.709 290.175 93.263 286.497 90.709 290.175 cv
93.263 290.175 90.709 290.175 93.263 290.175 cv
cp
93.263 293.048 mo
93.263 291.094 93.263 293.048 93.263 291.094 cv
89.723 291.094 93.263 291.094 89.723 291.094 cv
89.723 290.175 89.723 291.094 89.723 290.175 cv
93.447 284.888 89.723 290.175 93.447 284.888 cv
94.266 284.888 93.447 284.888 94.266 284.888 cv
94.266 290.175 94.266 284.888 94.266 290.175 cv
95.368 290.175 94.266 290.175 95.368 290.175 cv
95.368 291.094 95.368 290.175 95.368 291.094 cv
94.266 291.094 95.368 291.094 94.266 291.094 cv
94.266 293.048 94.266 291.094 94.266 293.048 cv
93.263 293.048 94.266 293.048 93.263 293.048 cv
f
134.428 290.175 mo
134.428 286.497 134.428 290.175 134.428 286.497 cv
131.873 290.175 134.428 286.497 131.873 290.175 cv
134.428 290.175 131.873 290.175 134.428 290.175 cv
cp
134.428 293.048 mo
134.428 291.094 134.428 293.048 134.428 291.094 cv
130.888 291.094 134.428 291.094 130.888 291.094 cv
130.888 290.175 130.888 291.094 130.888 290.175 cv
134.612 284.888 130.888 290.175 134.612 284.888 cv
135.43 284.888 134.612 284.888 135.43 284.888 cv
135.43 290.175 135.43 284.888 135.43 290.175 cv
136.533 290.175 135.43 290.175 136.533 290.175 cv
136.533 291.094 136.533 290.175 136.533 291.094 cv
135.43 291.094 136.533 291.094 135.43 291.094 cv
135.43 293.048 135.43 291.094 135.43 293.048 cv
134.428 293.048 135.43 293.048 134.428 293.048 cv
f
138.568 290.695 mo
138.568 290.98 138.636 291.256 138.771 291.523 cv
138.908 291.791 139.109 291.998 139.375 292.144 cv
139.643 292.29 139.93 292.365 140.238 292.365 cv
140.716 292.365 141.112 292.209 141.424 291.901 cv
141.736 291.594 141.892 291.203 141.892 290.727 cv
141.892 290.245 141.731 289.846 141.41 289.53 cv
141.089 289.215 140.687 289.057 140.205 289.057 cv
139.734 289.057 139.343 289.213 139.033 289.525 cv
138.723 289.836 138.568 290.226 138.568 290.695 cv
cp
138.891 286.925 mo
138.891 287.311 139.015 287.626 139.263 287.872 cv
139.512 288.117 139.836 288.238 140.233 288.238 cv
140.618 288.238 140.935 288.118 141.182 287.873 cv
141.428 287.63 141.552 287.333 141.552 286.981 cv
141.552 286.614 141.425 286.304 141.171 286.053 cv
140.916 285.804 140.6 285.678 140.221 285.678 cv
139.839 285.678 139.522 285.801 139.269 286.045 cv
139.017 286.29 138.891 286.583 138.891 286.925 cv
cp
139.091 288.623 mo
138.675 288.47 138.368 288.253 138.168 287.972 cv
137.967 287.689 137.867 287.352 137.867 286.958 cv
137.867 286.365 138.08 285.866 138.507 285.461 cv
138.934 285.056 139.502 284.854 140.21 284.854 cv
140.923 284.854 141.496 285.061 141.93 285.475 cv
142.364 285.888 142.582 286.393 142.582 286.986 cv
142.582 287.365 142.483 287.694 142.284 287.975 cv
142.085 288.254 141.784 288.47 141.379 288.623 cv
141.88 288.787 142.261 289.049 142.523 289.413 cv
142.785 289.777 142.916 290.211 142.916 290.715 cv
142.916 291.414 142.669 292 142.175 292.475 cv
141.682 292.951 141.032 293.188 140.227 293.188 cv
139.422 293.188 138.772 292.95 138.279 292.472 cv
137.785 291.996 137.538 291.401 137.538 290.689 cv
137.538 290.157 137.674 289.713 137.942 289.355 cv
138.211 288.997 138.594 288.752 139.091 288.623 cv
f
178.715 290.911 mo
179.766 290.822 178.715 290.911 179.766 290.822 cv
179.843 291.333 180.025 291.718 180.309 291.978 cv
180.592 292.235 180.934 292.365 181.336 292.365 cv
181.818 292.365 182.226 292.183 182.562 291.818 cv
182.894 291.455 183.061 290.971 183.061 290.372 cv
183.061 289.799 182.9 289.348 182.58 289.017 cv
182.26 288.688 181.839 288.523 181.32 288.523 cv
180.996 288.523 180.706 288.596 180.446 288.743 cv
180.186 288.89 179.981 289.08 179.834 289.313 cv
178.894 289.191 179.834 289.313 178.894 289.191 cv
179.684 284.998 178.894 289.191 179.684 284.998 cv
183.742 284.998 179.684 284.998 183.742 284.998 cv
183.742 285.956 183.742 284.998 183.742 285.956 cv
180.484 285.956 183.742 285.956 180.484 285.956 cv
180.045 288.15 180.484 285.956 180.045 288.15 cv
180.534 287.809 181.049 287.637 181.587 287.637 cv
182.299 287.637 182.9 287.884 183.39 288.378 cv
183.88 288.872 184.125 289.507 184.125 290.282 cv
184.125 291.021 183.91 291.659 183.478 292.197 cv
182.957 292.857 182.242 293.188 181.336 293.188 cv
180.593 293.188 179.989 292.98 179.519 292.565 cv
179.049 292.149 178.782 291.598 178.715 290.911 cv
f
190.313 292.086 mo
190.313 293.048 190.313 292.086 190.313 293.048 cv
184.92 293.048 190.313 293.048 184.92 293.048 cv
184.913 292.807 184.951 292.576 185.037 292.353 cv
185.174 291.986 185.393 291.623 185.695 291.268 cv
185.999 290.911 186.436 290.499 187.008 290.032 cv
187.893 289.304 188.493 288.727 188.805 288.304 cv
189.117 287.877 189.271 287.476 189.271 287.097 cv
189.271 286.7 189.131 286.365 188.846 286.092 cv
188.563 285.821 188.192 285.684 187.736 285.684 cv
187.253 285.684 186.868 285.829 186.578 286.118 cv
186.288 286.408 186.142 286.808 186.138 287.32 cv
185.108 287.214 186.138 287.32 185.108 287.214 cv
185.178 286.446 185.446 285.861 185.904 285.458 cv
186.365 285.055 186.983 284.854 187.759 284.854 cv
188.542 284.854 189.16 285.071 189.617 285.505 cv
190.074 285.939 190.302 286.477 190.302 287.12 cv
190.302 287.446 190.235 287.768 190.101 288.082 cv
189.968 288.399 189.746 288.73 189.436 289.08 cv
189.127 289.427 188.612 289.907 187.891 290.515 cv
187.29 291.021 186.905 291.363 186.733 291.542 cv
186.562 291.722 186.424 291.903 186.311 292.086 cv
190.313 292.086 186.311 292.086 190.313 292.086 cv
f
226.212 290.911 mo
227.264 290.822 226.212 290.911 227.264 290.822 cv
227.342 291.333 227.523 291.718 227.807 291.978 cv
228.091 292.235 228.433 292.365 228.834 292.365 cv
229.317 292.365 229.725 292.183 230.058 291.818 cv
230.392 291.455 230.558 290.971 230.558 290.372 cv
230.558 289.799 230.398 289.348 230.077 289.017 cv
229.757 288.688 229.337 288.523 228.818 288.523 cv
228.494 288.523 228.204 288.596 227.943 288.743 cv
227.683 288.89 227.479 289.08 227.332 289.313 cv
226.39 289.191 227.332 289.313 226.39 289.191 cv
227.18 284.998 226.39 289.191 227.18 284.998 cv
231.239 284.998 227.18 284.998 231.239 284.998 cv
231.239 285.956 231.239 284.998 231.239 285.956 cv
227.982 285.956 231.239 285.956 227.982 285.956 cv
227.542 288.15 227.982 285.956 227.542 288.15 cv
228.032 287.809 228.547 287.637 229.084 287.637 cv
229.798 287.637 230.398 287.884 230.888 288.378 cv
231.378 288.872 231.623 289.507 231.623 290.282 cv
231.623 291.021 231.408 291.659 230.976 292.197 cv
230.454 292.857 229.74 293.188 228.834 293.188 cv
228.092 293.188 227.486 292.98 227.017 292.565 cv
226.548 292.149 226.279 291.598 226.212 290.911 cv
f
233.653 290.403 mo
233.653 290.748 233.725 291.081 233.873 291.396 cv
234.019 291.71 234.223 291.952 234.487 292.116 cv
234.751 292.282 235.027 292.365 235.316 292.365 cv
235.74 292.365 236.104 292.194 236.407 291.852 cv
236.713 291.509 236.865 291.046 236.865 290.46 cv
236.865 289.896 236.714 289.452 236.413 289.126 cv
236.112 288.802 235.734 288.639 235.279 288.639 cv
234.825 288.639 234.441 288.802 234.127 289.126 cv
233.81 289.452 233.653 289.877 233.653 290.403 cv
cp
237.745 286.885 mo
236.748 286.964 237.745 286.885 236.748 286.964 cv
236.659 286.571 236.532 286.285 236.369 286.107 cv
236.098 285.821 235.764 285.678 235.367 285.678 cv
235.049 285.678 234.768 285.766 234.526 285.944 cv
234.211 286.176 233.963 286.511 233.781 286.953 cv
233.599 287.395 233.504 288.024 233.497 288.839 cv
233.739 288.472 234.033 288.201 234.382 288.022 cv
234.731 287.843 235.096 287.754 235.479 287.754 cv
236.147 287.754 236.715 288 237.185 288.493 cv
237.655 288.984 237.888 289.619 237.888 290.398 cv
237.888 290.911 237.777 291.388 237.557 291.827 cv
237.337 292.266 237.034 292.603 236.648 292.837 cv
236.262 293.071 235.823 293.188 235.334 293.188 cv
234.499 293.188 233.817 292.88 233.291 292.266 cv
232.763 291.652 232.501 290.64 232.501 289.229 cv
232.501 287.652 232.793 286.505 233.376 285.79 cv
233.884 285.165 234.568 284.854 235.427 284.854 cv
236.072 284.854 236.595 285.035 237.006 285.393 cv
237.417 285.753 237.662 286.251 237.745 286.885 cv
f
274.818 290.403 mo
274.818 290.748 274.891 291.081 275.037 291.396 cv
275.185 291.71 275.389 291.952 275.652 292.116 cv
275.916 292.282 276.193 292.365 276.482 292.365 cv
276.905 292.365 277.269 292.194 277.573 291.852 cv
277.879 291.509 278.03 291.046 278.03 290.46 cv
278.03 289.896 277.88 289.452 277.579 289.126 cv
277.278 288.802 276.899 288.639 276.442 288.639 cv
275.991 288.639 275.607 288.802 275.291 289.126 cv
274.976 289.452 274.818 289.877 274.818 290.403 cv
cp
278.908 286.885 mo
277.912 286.964 278.908 286.885 277.912 286.964 cv
277.824 286.571 277.697 286.285 277.534 286.107 cv
277.264 285.821 276.928 285.678 276.532 285.678 cv
276.212 285.678 275.933 285.766 275.692 285.944 cv
275.377 286.176 275.128 286.511 274.946 286.953 cv
274.764 287.395 274.669 288.024 274.662 288.839 cv
274.902 288.472 275.198 288.201 275.547 288.022 cv
275.897 287.843 276.26 287.754 276.643 287.754 cv
277.31 287.754 277.881 288 278.348 288.493 cv
278.818 288.984 279.053 289.619 279.053 290.398 cv
279.053 290.911 278.942 291.388 278.722 291.827 cv
278.502 292.266 278.198 292.603 277.812 292.837 cv
277.427 293.071 276.989 293.188 276.5 293.188 cv
275.664 293.188 274.983 292.88 274.456 292.266 cv
273.928 291.652 273.666 290.64 273.666 289.229 cv
273.666 287.652 273.956 286.505 274.539 285.79 cv
275.047 285.165 275.733 284.854 276.593 284.854 cv
277.235 284.854 277.761 285.035 278.171 285.393 cv
278.582 285.753 278.827 286.251 278.908 286.885 cv
f
281.072 289.023 mo
281.072 290.363 281.229 291.255 281.544 291.698 cv
281.857 292.143 282.244 292.365 282.704 292.365 cv
283.163 292.365 283.551 292.142 283.863 291.696 cv
284.177 291.25 284.335 290.36 284.335 289.023 cv
284.335 287.68 284.177 286.788 283.863 286.345 cv
283.551 285.905 283.159 285.684 282.692 285.684 cv
282.233 285.684 281.865 285.878 281.59 286.268 cv
281.245 286.766 281.072 287.683 281.072 289.023 cv
cp
280.043 289.023 mo
280.043 288.058 280.143 287.282 280.341 286.694 cv
280.54 286.105 280.834 285.652 281.226 285.333 cv
281.617 285.013 282.11 284.854 282.704 284.854 cv
283.142 284.854 283.526 284.943 283.855 285.119 cv
284.186 285.295 284.459 285.548 284.674 285.881 cv
284.888 286.214 285.057 286.619 285.181 287.094 cv
285.302 287.572 285.364 288.214 285.364 289.023 cv
285.364 289.981 285.265 290.754 285.069 291.342 cv
284.873 291.93 284.579 292.385 284.187 292.706 cv
283.796 293.027 283.302 293.188 282.704 293.188 cv
281.917 293.188 281.3 292.906 280.85 292.341 cv
280.312 291.663 280.043 290.556 280.043 289.023 cv
f
62.9 277.305 mo
62.9 278.645 63.057 279.538 63.37 279.981 cv
63.684 280.424 64.07 280.647 64.531 280.647 cv
64.991 280.647 65.378 280.424 65.692 279.978 cv
66.005 279.533 66.162 278.641 66.162 277.305 cv
66.162 275.961 66.005 275.07 65.692 274.628 cv
65.378 274.186 64.987 273.965 64.519 273.965 cv
64.059 273.965 63.692 274.161 63.417 274.549 cv
63.072 275.047 62.9 275.965 62.9 277.305 cv
cp
61.87 277.305 mo
61.87 276.34 61.969 275.564 62.168 274.976 cv
62.367 274.387 62.662 273.934 63.053 273.615 cv
63.444 273.296 63.937 273.136 64.531 273.136 cv
64.968 273.136 65.353 273.224 65.683 273.4 cv
66.013 273.577 66.286 273.831 66.501 274.164 cv
66.716 274.496 66.885 274.9 67.008 275.376 cv
67.131 275.853 67.191 276.497 67.191 277.305 cv
67.191 278.263 67.093 279.036 66.896 279.624 cv
66.699 280.212 66.405 280.667 66.014 280.989 cv
65.623 281.309 65.128 281.469 64.531 281.469 cv
63.744 281.469 63.126 281.188 62.677 280.624 cv
62.139 279.945 61.87 278.838 61.87 277.305 cv
f
68.766 281.331 mo
68.766 280.189 68.766 281.331 68.766 280.189 cv
69.906 280.189 68.766 280.189 69.906 280.189 cv
69.906 281.331 69.906 280.189 69.906 281.331 cv
68.766 281.331 69.906 281.331 68.766 281.331 cv
f
72.399 277.305 mo
72.399 278.645 72.556 279.538 72.869 279.981 cv
73.183 280.424 73.57 280.647 74.03 280.647 cv
74.49 280.647 74.877 280.424 75.19 279.978 cv
75.505 279.533 75.661 278.641 75.661 277.305 cv
75.661 275.961 75.505 275.07 75.19 274.628 cv
74.877 274.186 74.487 273.965 74.019 273.965 cv
73.559 273.965 73.192 274.161 72.917 274.549 cv
72.572 275.047 72.399 275.965 72.399 277.305 cv
cp
71.37 277.305 mo
71.37 276.34 71.469 275.564 71.668 274.976 cv
71.866 274.387 72.161 273.934 72.552 273.615 cv
72.944 273.296 73.437 273.136 74.03 273.136 cv
74.468 273.136 74.852 273.224 75.182 273.4 cv
75.513 273.577 75.785 273.831 76.001 274.164 cv
76.216 274.496 76.384 274.9 76.507 275.376 cv
76.629 275.853 76.691 276.497 76.691 277.305 cv
76.691 278.263 76.592 279.036 76.396 279.624 cv
76.199 280.212 75.905 280.667 75.514 280.989 cv
75.122 281.309 74.628 281.469 74.03 281.469 cv
73.243 281.469 72.626 281.188 72.176 280.624 cv
71.638 279.945 71.37 278.838 71.37 277.305 cv
f
78.732 277.305 mo
78.732 278.645 78.889 279.538 79.202 279.981 cv
79.516 280.424 79.903 280.647 80.363 280.647 cv
80.823 280.647 81.21 280.424 81.524 279.978 cv
81.837 279.533 81.994 278.641 81.994 277.305 cv
81.994 275.961 81.837 275.07 81.524 274.628 cv
81.21 274.186 80.82 273.965 80.352 273.965 cv
79.892 273.965 79.524 274.161 79.25 274.549 cv
78.904 275.047 78.732 275.965 78.732 277.305 cv
cp
77.702 277.305 mo
77.702 276.34 77.801 275.564 78.001 274.976 cv
78.199 274.387 78.494 273.934 78.885 273.615 cv
79.277 273.296 79.769 273.136 80.363 273.136 cv
80.801 273.136 81.185 273.224 81.515 273.4 cv
81.845 273.577 82.118 273.831 82.334 274.164 cv
82.549 274.496 82.718 274.9 82.84 275.376 cv
82.963 275.853 83.024 276.497 83.024 277.305 cv
83.024 278.263 82.925 279.036 82.729 279.624 cv
82.532 280.212 82.238 280.667 81.846 280.989 cv
81.455 281.309 80.96 281.469 80.363 281.469 cv
79.576 281.469 78.959 281.188 78.509 280.624 cv
77.971 279.945 77.702 278.838 77.702 277.305 cv
f
62.9 252.076 mo
62.9 253.415 63.057 254.306 63.37 254.749 cv
63.684 255.194 64.07 255.415 64.531 255.415 cv
64.991 255.415 65.378 255.193 65.692 254.747 cv
66.005 254.301 66.162 253.411 66.162 252.076 cv
66.162 250.731 66.005 249.839 65.692 249.397 cv
65.378 248.956 64.987 248.735 64.519 248.735 cv
64.059 248.735 63.692 248.929 63.417 249.319 cv
63.072 249.817 62.9 250.735 62.9 252.076 cv
cp
61.87 252.076 mo
61.87 251.11 61.969 250.333 62.168 249.745 cv
62.367 249.157 62.662 248.704 63.053 248.384 cv
63.444 248.066 63.937 247.906 64.531 247.906 cv
64.968 247.906 65.353 247.994 65.683 248.169 cv
66.013 248.346 66.286 248.6 66.501 248.932 cv
66.716 249.265 66.885 249.669 67.008 250.146 cv
67.131 250.623 67.191 251.266 67.191 252.076 cv
67.191 253.032 67.093 253.805 66.896 254.393 cv
66.699 254.981 66.405 255.437 66.014 255.756 cv
65.623 256.078 65.128 256.24 64.531 256.24 cv
63.744 256.24 63.126 255.957 62.677 255.393 cv
62.139 254.713 61.87 253.608 61.87 252.076 cv
f
68.766 256.099 mo
68.766 254.958 68.766 256.099 68.766 254.958 cv
69.906 254.958 68.766 254.958 69.906 254.958 cv
69.906 256.099 69.906 254.958 69.906 256.099 cv
68.766 256.099 69.906 256.099 68.766 256.099 cv
f
72.399 252.076 mo
72.399 253.415 72.556 254.306 72.869 254.749 cv
73.183 255.194 73.57 255.415 74.03 255.415 cv
74.49 255.415 74.877 255.193 75.19 254.747 cv
75.505 254.301 75.661 253.411 75.661 252.076 cv
75.661 250.731 75.505 249.839 75.19 249.397 cv
74.877 248.956 74.487 248.735 74.019 248.735 cv
73.559 248.735 73.192 248.929 72.917 249.319 cv
72.572 249.817 72.399 250.735 72.399 252.076 cv
cp
71.37 252.076 mo
71.37 251.11 71.469 250.333 71.668 249.745 cv
71.866 249.157 72.161 248.704 72.552 248.384 cv
72.944 248.066 73.437 247.906 74.03 247.906 cv
74.468 247.906 74.852 247.994 75.182 248.169 cv
75.513 248.346 75.785 248.6 76.001 248.932 cv
76.216 249.265 76.384 249.669 76.507 250.146 cv
76.629 250.623 76.691 251.266 76.691 252.076 cv
76.691 253.032 76.592 253.805 76.396 254.393 cv
76.199 254.981 75.905 255.437 75.514 255.756 cv
75.122 256.078 74.628 256.24 74.03 256.24 cv
73.243 256.24 72.626 255.957 72.176 255.393 cv
71.638 254.713 71.37 253.608 71.37 252.076 cv
f
80.914 253.227 mo
80.914 249.547 80.914 253.227 80.914 249.547 cv
78.359 253.227 80.914 249.547 78.359 253.227 cv
80.914 253.227 78.359 253.227 80.914 253.227 cv
cp
80.914 256.099 mo
80.914 254.146 80.914 256.099 80.914 254.146 cv
77.374 254.146 80.914 254.146 77.374 254.146 cv
77.374 253.227 77.374 254.146 77.374 253.227 cv
81.098 247.939 77.374 253.227 81.098 247.939 cv
81.916 247.939 81.098 247.939 81.916 247.939 cv
81.916 253.227 81.916 247.939 81.916 253.227 cv
83.019 253.227 81.916 253.227 83.019 253.227 cv
83.019 254.146 83.019 253.227 83.019 254.146 cv
81.916 254.146 83.019 254.146 81.916 254.146 cv
81.916 256.099 81.916 254.146 81.916 256.099 cv
80.914 256.099 81.916 256.099 80.914 256.099 cv
f
62.9 226.844 mo
62.9 228.183 63.057 229.076 63.37 229.519 cv
63.684 229.962 64.07 230.185 64.531 230.185 cv
64.991 230.185 65.378 229.961 65.692 229.517 cv
66.005 229.071 66.162 228.18 66.162 226.844 cv
66.162 225.5 66.005 224.608 65.692 224.166 cv
65.378 223.724 64.987 223.504 64.519 223.504 cv
64.059 223.504 63.692 223.699 63.417 224.088 cv
63.072 224.585 62.9 225.504 62.9 226.844 cv
cp
61.87 226.844 mo
61.87 225.878 61.969 225.102 62.168 224.514 cv
62.367 223.925 62.662 223.473 63.053 223.154 cv
63.444 222.833 63.937 222.675 64.531 222.675 cv
64.968 222.675 65.353 222.763 65.683 222.939 cv
66.013 223.116 66.286 223.37 66.501 223.702 cv
66.716 224.035 66.885 224.439 67.008 224.915 cv
67.131 225.392 67.191 226.036 67.191 226.844 cv
67.191 227.801 67.093 228.575 66.896 229.163 cv
66.699 229.75 66.405 230.207 66.014 230.527 cv
65.623 230.848 65.128 231.009 64.531 231.009 cv
63.744 231.009 63.126 230.727 62.677 230.162 cv
62.139 229.483 61.87 228.376 61.87 226.844 cv
f
68.766 230.869 mo
68.766 229.728 68.766 230.869 68.766 229.728 cv
69.906 229.728 68.766 229.728 69.906 229.728 cv
69.906 230.869 69.906 229.728 69.906 230.869 cv
68.766 230.869 69.906 230.869 68.766 230.869 cv
f
72.399 226.844 mo
72.399 228.183 72.556 229.076 72.869 229.519 cv
73.183 229.962 73.57 230.185 74.03 230.185 cv
74.49 230.185 74.877 229.961 75.19 229.517 cv
75.505 229.071 75.661 228.18 75.661 226.844 cv
75.661 225.5 75.505 224.608 75.19 224.166 cv
74.877 223.724 74.487 223.504 74.019 223.504 cv
73.559 223.504 73.192 223.699 72.917 224.088 cv
72.572 224.585 72.399 225.504 72.399 226.844 cv
cp
71.37 226.844 mo
71.37 225.878 71.469 225.102 71.668 224.514 cv
71.866 223.925 72.161 223.473 72.552 223.154 cv
72.944 222.833 73.437 222.675 74.03 222.675 cv
74.468 222.675 74.852 222.763 75.182 222.939 cv
75.513 223.116 75.785 223.37 76.001 223.702 cv
76.216 224.035 76.384 224.439 76.507 224.915 cv
76.629 225.392 76.691 226.036 76.691 226.844 cv
76.691 227.801 76.592 228.575 76.396 229.163 cv
76.199 229.75 75.905 230.207 75.514 230.527 cv
75.122 230.848 74.628 231.009 74.03 231.009 cv
73.243 231.009 72.626 230.727 72.176 230.162 cv
71.638 229.483 71.37 228.376 71.37 226.844 cv
f
78.721 228.515 mo
78.721 228.8 78.789 229.077 78.924 229.344 cv
79.06 229.612 79.261 229.819 79.528 229.964 cv
79.795 230.111 80.083 230.185 80.391 230.185 cv
80.869 230.185 81.264 230.032 81.577 229.722 cv
81.888 229.415 82.044 229.024 82.044 228.548 cv
82.044 228.065 81.883 227.666 81.563 227.351 cv
81.241 227.036 80.84 226.876 80.357 226.876 cv
79.886 226.876 79.496 227.034 79.186 227.346 cv
78.876 227.657 78.721 228.048 78.721 228.515 cv
cp
79.044 224.746 mo
79.044 225.131 79.169 225.448 79.417 225.691 cv
79.666 225.936 79.988 226.059 80.385 226.059 cv
80.771 226.059 81.088 225.938 81.334 225.694 cv
81.581 225.452 81.705 225.154 81.705 224.801 cv
81.705 224.434 81.578 224.124 81.323 223.874 cv
81.069 223.624 80.752 223.498 80.374 223.498 cv
79.992 223.498 79.675 223.621 79.422 223.867 cv
79.17 224.111 79.044 224.404 79.044 224.746 cv
cp
79.244 226.444 mo
78.829 226.29 78.521 226.074 78.32 225.792 cv
78.12 225.509 78.02 225.173 78.02 224.78 cv
78.02 224.184 78.233 223.686 78.659 223.283 cv
79.087 222.877 79.654 222.675 80.363 222.675 cv
81.076 222.675 81.649 222.882 82.083 223.295 cv
82.517 223.708 82.735 224.213 82.735 224.807 cv
82.735 225.185 82.635 225.515 82.437 225.795 cv
82.238 226.075 81.936 226.29 81.532 226.444 cv
82.032 226.607 82.414 226.87 82.675 227.234 cv
82.937 227.597 83.069 228.032 83.069 228.538 cv
83.069 229.236 82.822 229.822 82.328 230.295 cv
81.834 230.771 81.185 231.009 80.38 231.009 cv
79.574 231.009 78.925 230.771 78.432 230.292 cv
77.938 229.817 77.692 229.222 77.692 228.509 cv
77.692 227.978 77.826 227.535 78.095 227.175 cv
78.364 226.817 78.747 226.573 79.244 226.444 cv
f
62.9 201.614 mo
62.9 202.954 63.057 203.845 63.37 204.289 cv
63.684 204.731 64.07 204.955 64.531 204.955 cv
64.991 204.955 65.378 204.731 65.692 204.287 cv
66.005 203.84 66.162 202.949 66.162 201.614 cv
66.162 200.27 66.005 199.376 65.692 198.936 cv
65.378 198.494 64.987 198.273 64.519 198.273 cv
64.059 198.273 63.692 198.469 63.417 198.858 cv
63.072 199.355 62.9 200.273 62.9 201.614 cv
cp
61.87 201.614 mo
61.87 200.649 61.969 199.872 62.168 199.284 cv
62.367 198.696 62.662 198.243 63.053 197.922 cv
63.444 197.603 63.937 197.444 64.531 197.444 cv
64.968 197.444 65.353 197.532 65.683 197.708 cv
66.013 197.884 66.286 198.139 66.501 198.471 cv
66.716 198.803 66.885 199.208 67.008 199.684 cv
67.131 200.162 67.191 200.805 67.191 201.614 cv
67.191 202.571 67.093 203.343 66.896 203.932 cv
66.699 204.521 66.405 204.976 66.014 205.296 cv
65.623 205.618 65.128 205.778 64.531 205.778 cv
63.744 205.778 63.126 205.496 62.677 204.931 cv
62.139 204.252 61.87 203.146 61.87 201.614 cv
f
68.766 205.638 mo
68.766 204.498 68.766 205.638 68.766 204.498 cv
69.906 204.498 68.766 204.498 69.906 204.498 cv
69.906 205.638 69.906 204.498 69.906 205.638 cv
68.766 205.638 69.906 205.638 68.766 205.638 cv
f
75.143 205.638 mo
74.141 205.638 75.143 205.638 74.141 205.638 cv
74.141 199.254 74.141 205.638 74.141 199.254 cv
73.9 199.483 73.584 199.713 73.192 199.944 cv
72.8 200.173 72.449 200.347 72.138 200.46 cv
72.138 199.493 72.138 200.46 72.138 199.493 cv
72.697 199.23 73.188 198.91 73.607 198.535 cv
74.026 198.161 74.323 197.796 74.497 197.444 cv
75.143 197.444 74.497 197.444 75.143 197.444 cv
75.143 205.638 75.143 197.444 75.143 205.638 cv
f
82.968 204.675 mo
82.968 205.638 82.968 204.675 82.968 205.638 cv
77.574 205.638 82.968 205.638 77.574 205.638 cv
77.567 205.398 77.606 205.165 77.692 204.942 cv
77.829 204.576 78.049 204.214 78.351 203.857 cv
78.653 203.501 79.091 203.089 79.662 202.621 cv
80.549 201.894 81.148 201.318 81.46 200.892 cv
81.772 200.467 81.927 200.066 81.927 199.687 cv
81.927 199.29 81.785 198.956 81.501 198.683 cv
81.217 198.409 80.847 198.273 80.391 198.273 cv
79.908 198.273 79.523 198.418 79.233 198.707 cv
78.944 198.998 78.798 199.398 78.794 199.91 cv
77.763 199.804 78.794 199.91 77.763 199.804 cv
77.834 199.037 78.1 198.451 78.559 198.048 cv
79.02 197.646 79.638 197.444 80.413 197.444 cv
81.196 197.444 81.816 197.662 82.273 198.095 cv
82.729 198.53 82.957 199.067 82.957 199.709 cv
82.957 200.037 82.89 200.357 82.757 200.672 cv
82.623 200.988 82.401 201.321 82.091 201.668 cv
81.781 202.018 81.266 202.498 80.547 203.106 cv
79.945 203.611 79.56 203.952 79.389 204.132 cv
79.218 204.313 79.077 204.494 78.966 204.675 cv
82.968 204.675 78.966 204.675 82.968 204.675 cv
f
62.9 176.383 mo
62.9 177.723 63.057 178.615 63.37 179.058 cv
63.684 179.501 64.07 179.722 64.531 179.722 cv
64.991 179.722 65.378 179.5 65.692 179.055 cv
66.005 178.61 66.162 177.719 66.162 176.383 cv
66.162 175.039 66.005 174.146 65.692 173.705 cv
65.378 173.264 64.987 173.043 64.519 173.043 cv
64.059 173.043 63.692 173.238 63.417 173.628 cv
63.072 174.124 62.9 175.042 62.9 176.383 cv
cp
61.87 176.383 mo
61.87 175.418 61.969 174.641 62.168 174.052 cv
62.367 173.465 62.662 173.011 63.053 172.692 cv
63.444 172.373 63.937 172.212 64.531 172.212 cv
64.968 172.212 65.353 172.301 65.683 172.478 cv
66.013 172.655 66.286 172.909 66.501 173.241 cv
66.716 173.572 66.885 173.977 67.008 174.454 cv
67.131 174.932 67.191 175.574 67.191 176.383 cv
67.191 177.34 67.093 178.114 66.896 178.702 cv
66.699 179.29 66.405 179.744 66.014 180.065 cv
65.623 180.387 65.128 180.547 64.531 180.547 cv
63.744 180.547 63.126 180.265 62.677 179.702 cv
62.139 179.022 61.87 177.916 61.87 176.383 cv
f
68.766 180.408 mo
68.766 179.266 68.766 180.408 68.766 179.266 cv
69.906 179.266 68.766 179.266 69.906 179.266 cv
69.906 180.408 69.906 179.266 69.906 180.408 cv
68.766 180.408 69.906 180.408 68.766 180.408 cv
f
75.143 180.408 mo
74.141 180.408 75.143 180.408 74.141 180.408 cv
74.141 174.023 74.141 180.408 74.141 174.023 cv
73.9 174.252 73.584 174.483 73.192 174.712 cv
72.8 174.943 72.449 175.115 72.138 175.231 cv
72.138 174.261 72.138 175.231 72.138 174.261 cv
72.697 173.998 73.188 173.679 73.607 173.304 cv
74.026 172.93 74.323 172.565 74.497 172.212 cv
75.143 172.212 74.497 172.212 75.143 172.212 cv
75.143 180.408 75.143 172.212 75.143 180.408 cv
f
78.81 177.763 mo
78.81 178.11 78.883 178.439 79.03 178.754 cv
79.176 179.071 79.382 179.309 79.645 179.476 cv
79.908 179.641 80.185 179.722 80.474 179.722 cv
80.898 179.722 81.261 179.552 81.566 179.211 cv
81.87 178.87 82.022 178.406 82.022 177.819 cv
82.022 177.255 81.872 176.81 81.571 176.487 cv
81.271 176.161 80.892 175.998 80.436 175.998 cv
79.983 175.998 79.598 176.161 79.283 176.487 cv
78.968 176.81 78.81 177.236 78.81 177.763 cv
cp
82.901 174.245 mo
81.905 174.324 82.901 174.245 81.905 174.324 cv
81.816 173.93 81.69 173.645 81.527 173.465 cv
81.255 173.179 80.922 173.038 80.525 173.038 cv
80.205 173.038 79.925 173.126 79.684 173.304 cv
79.369 173.535 79.12 173.87 78.938 174.312 cv
78.756 174.753 78.661 175.383 78.654 176.199 cv
78.896 175.832 79.191 175.559 79.54 175.381 cv
79.888 175.203 80.254 175.114 80.636 175.114 cv
81.304 175.114 81.873 175.359 82.342 175.85 cv
82.812 176.342 83.046 176.979 83.046 177.758 cv
83.046 178.27 82.936 178.746 82.715 179.186 cv
82.494 179.625 82.191 179.962 81.805 180.197 cv
81.419 180.43 80.981 180.547 80.491 180.547 cv
79.656 180.547 78.976 180.24 78.448 179.625 cv
77.921 179.011 77.658 177.999 77.658 176.589 cv
77.658 175.012 77.949 173.865 78.532 173.149 cv
79.04 172.526 79.725 172.212 80.586 172.212 cv
81.228 172.212 81.754 172.393 82.164 172.752 cv
82.574 173.114 82.82 173.611 82.901 174.245 cv
f
62.9 151.153 mo
62.9 152.492 63.057 153.384 63.37 153.828 cv
63.684 154.271 64.07 154.493 64.531 154.493 cv
64.991 154.493 65.378 154.27 65.692 153.825 cv
66.005 153.379 66.162 152.489 66.162 151.153 cv
66.162 149.809 66.005 148.916 65.692 148.475 cv
65.378 148.033 64.987 147.812 64.519 147.812 cv
64.059 147.812 63.692 148.007 63.417 148.397 cv
63.072 148.894 62.9 149.813 62.9 151.153 cv
cp
61.87 151.153 mo
61.87 150.188 61.969 149.411 62.168 148.823 cv
62.367 148.235 62.662 147.781 63.053 147.461 cv
63.444 147.143 63.937 146.983 64.531 146.983 cv
64.968 146.983 65.353 147.071 65.683 147.248 cv
66.013 147.423 66.286 147.678 66.501 148.01 cv
66.716 148.342 66.885 148.747 67.008 149.224 cv
67.131 149.7 67.191 150.343 67.191 151.153 cv
67.191 152.11 67.093 152.883 66.896 153.471 cv
66.699 154.06 66.405 154.514 66.014 154.835 cv
65.623 155.156 65.128 155.316 64.531 155.316 cv
63.744 155.316 63.126 155.035 62.677 154.47 cv
62.139 153.791 61.87 152.685 61.87 151.153 cv
f
68.766 155.178 mo
68.766 154.037 68.766 155.178 68.766 154.037 cv
69.906 154.037 68.766 154.037 69.906 154.037 cv
69.906 155.178 69.906 154.037 69.906 155.178 cv
68.766 155.178 69.906 155.178 68.766 155.178 cv
f
76.635 154.214 mo
76.635 155.178 76.635 154.214 76.635 155.178 cv
71.241 155.178 76.635 155.178 71.241 155.178 cv
71.234 154.936 71.273 154.705 71.358 154.481 cv
71.496 154.115 71.715 153.753 72.018 153.396 cv
72.32 153.04 72.757 152.628 73.329 152.16 cv
74.216 151.433 74.815 150.856 75.127 150.432 cv
75.438 150.007 75.594 149.605 75.594 149.227 cv
75.594 148.83 75.452 148.494 75.169 148.221 cv
74.884 147.949 74.514 147.812 74.058 147.812 cv
73.576 147.812 73.19 147.957 72.9 148.247 cv
72.611 148.537 72.464 148.937 72.461 149.449 cv
71.431 149.343 72.461 149.449 71.431 149.343 cv
71.502 148.575 71.767 147.99 72.227 147.587 cv
72.687 147.185 73.305 146.983 74.081 146.983 cv
74.863 146.983 75.483 147.2 75.939 147.634 cv
76.396 148.069 76.623 148.606 76.623 149.248 cv
76.623 149.575 76.558 149.896 76.424 150.212 cv
76.29 150.527 76.068 150.859 75.758 151.208 cv
75.448 151.557 74.934 152.036 74.214 152.644 cv
73.612 153.15 73.227 153.492 73.056 153.671 cv
72.885 153.852 72.745 154.033 72.633 154.214 cv
76.635 154.214 72.633 154.214 76.635 154.214 cv
f
78.732 151.153 mo
78.732 152.492 78.889 153.384 79.202 153.828 cv
79.516 154.271 79.903 154.493 80.363 154.493 cv
80.823 154.493 81.21 154.27 81.524 153.825 cv
81.837 153.379 81.994 152.489 81.994 151.153 cv
81.994 149.809 81.837 148.916 81.524 148.475 cv
81.21 148.033 80.82 147.812 80.352 147.812 cv
79.892 147.812 79.524 148.007 79.25 148.397 cv
78.904 148.894 78.732 149.813 78.732 151.153 cv
cp
77.702 151.153 mo
77.702 150.188 77.801 149.411 78.001 148.823 cv
78.199 148.235 78.494 147.781 78.885 147.461 cv
79.277 147.143 79.769 146.983 80.363 146.983 cv
80.801 146.983 81.185 147.071 81.515 147.248 cv
81.845 147.423 82.118 147.678 82.334 148.01 cv
82.549 148.342 82.718 148.747 82.84 149.224 cv
82.963 149.7 83.024 150.343 83.024 151.153 cv
83.024 152.11 82.925 152.883 82.729 153.471 cv
82.532 154.06 82.238 154.514 81.846 154.835 cv
81.455 155.156 80.96 155.316 80.363 155.316 cv
79.576 155.316 78.959 155.035 78.509 154.47 cv
77.971 153.791 77.702 152.685 77.702 151.153 cv
f
279.571 278.058 mo
279.571 151.905 li
275.981 151.905 li
279.571 164.573 mo
277.776 164.573 li
279.571 177.135 mo
275.981 177.135 li
279.571 189.804 mo
277.776 189.804 li
279.571 202.366 mo
275.981 202.366 li
279.571 215.035 mo
277.776 215.035 li
279.571 227.596 mo
275.981 227.596 li
279.571 240.265 mo
277.776 240.265 li
279.571 252.828 mo
275.981 252.828 li
279.571 265.496 mo
277.776 265.496 li
279.571 278.058 mo
275.981 278.058 li
89.579 151.905 mo
279.571 151.905 li
279.571 155.495 li
255.82 151.905 mo
255.82 153.7 li
232.072 151.905 mo
232.072 155.495 li
208.323 151.905 mo
208.323 153.7 li
184.574 151.905 mo
184.574 155.495 li
160.825 151.905 mo
160.825 153.7 li
137.077 151.905 mo
137.077 155.495 li
113.328 151.905 mo
113.328 153.7 li
89.579 151.905 mo
89.579 155.495 li
89.579 278.058 mo
89.579 151.905 li
85.99 151.905 mo
89.579 151.905 li
87.784 164.573 mo
89.579 164.573 li
85.99 177.135 mo
89.579 177.135 li
87.784 189.804 mo
89.579 189.804 li
85.99 202.366 mo
89.579 202.366 li
87.784 215.035 mo
89.579 215.035 li
85.99 227.596 mo
89.579 227.596 li
87.784 240.265 mo
89.579 240.265 li
85.99 252.828 mo
89.579 252.828 li
87.784 265.496 mo
89.579 265.496 li
85.99 278.058 mo
279.571 278.058 li
279.571 281.648 mo
279.571 278.058 li
255.82 279.854 mo
255.82 278.058 li
232.072 281.648 mo
232.072 278.058 li
208.323 279.854 mo
208.323 278.058 li
184.574 281.648 mo
184.574 278.058 li
160.825 279.854 mo
160.825 278.058 li
137.077 281.648 mo
137.077 278.058 li
113.328 279.854 mo
113.328 278.058 li
89.579 281.648 mo
89.579 278.058 li
@
93.208 127.043 mo
93.208 127.685 92.688 128.205 92.048 128.205 cv
91.407 128.205 90.886 127.685 90.886 127.043 cv
90.886 126.403 91.407 125.882 92.048 125.882 cv
92.688 125.882 93.208 126.403 93.208 127.043 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
ef
.35 lw
93.208 127.043 mo
93.208 127.685 92.688 128.205 92.048 128.205 cv
91.407 128.205 90.886 127.685 90.886 127.043 cv
90.886 126.403 91.407 125.882 92.048 125.882 cv
92.688 125.882 93.208 126.403 93.208 127.043 cv
cp
@
97.695 132.058 mo
97.695 132.699 97.174 133.219 96.533 133.219 cv
95.892 133.219 95.372 132.699 95.372 132.058 cv
95.372 131.417 95.892 130.896 96.533 130.896 cv
97.174 130.896 97.695 131.417 97.695 132.058 cv
ef
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
97.695 132.058 mo
97.695 132.699 97.174 133.219 96.533 133.219 cv
95.892 133.219 95.372 132.699 95.372 132.058 cv
95.372 131.417 95.892 130.896 96.533 130.896 cv
97.174 130.896 97.695 131.417 97.695 132.058 cv
cp
@
101.301 135.225 mo
101.301 135.865 100.781 136.386 100.14 136.386 cv
99.5 136.386 98.979 135.865 98.979 135.225 cv
98.979 134.583 99.5 134.063 100.14 134.063 cv
100.781 134.063 101.301 134.583 101.301 135.225 cv
ef
101.301 135.225 mo
101.301 135.865 100.781 136.386 100.14 136.386 cv
99.5 136.386 98.979 135.865 98.979 135.225 cv
98.979 134.583 99.5 134.063 100.14 134.063 cv
100.781 134.063 101.301 134.583 101.301 135.225 cv
cp
@
grestore
104.556 126.34 mo
104.556 126.981 104.036 127.501 103.394 127.501 cv
102.754 127.501 102.234 126.981 102.234 126.34 cv
102.234 125.699 102.754 125.178 103.394 125.178 cv
104.036 125.178 104.556 125.699 104.556 126.34 cv
ef
104.556 126.34 mo
104.556 126.981 104.036 127.501 103.394 127.501 cv
102.754 127.501 102.234 126.981 102.234 126.34 cv
102.234 125.699 102.754 125.178 103.394 125.178 cv
104.036 125.178 104.556 125.699 104.556 126.34 cv
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
107.283 134.608 mo
107.283 135.249 106.762 135.769 106.122 135.769 cv
105.481 135.769 104.961 135.249 104.961 134.608 cv
104.961 133.967 105.481 133.448 106.122 133.448 cv
106.762 133.448 107.283 133.967 107.283 134.608 cv
ef
107.283 134.608 mo
107.283 135.249 106.762 135.769 106.122 135.769 cv
105.481 135.769 104.961 135.249 104.961 134.608 cv
104.961 133.967 105.481 133.448 106.122 133.448 cv
106.762 133.448 107.283 133.967 107.283 134.608 cv
cp
@
grestore
111.857 128.892 mo
111.857 129.532 111.337 130.052 110.695 130.052 cv
110.055 130.052 109.535 129.532 109.535 128.892 cv
109.535 128.249 110.055 127.729 110.695 127.729 cv
111.337 127.729 111.857 128.249 111.857 128.892 cv
ef
111.857 128.892 mo
111.857 129.532 111.337 130.052 110.695 130.052 cv
110.055 130.052 109.535 129.532 109.535 128.892 cv
109.535 128.249 110.055 127.729 110.695 127.729 cv
111.337 127.729 111.857 128.249 111.857 128.892 cv
cp
@
116.431 130.738 mo
116.431 131.379 115.911 131.899 115.27 131.899 cv
114.629 131.899 114.109 131.379 114.109 130.738 cv
114.109 130.097 114.629 129.577 115.27 129.577 cv
115.911 129.577 116.431 130.097 116.431 130.738 cv
ef
116.431 130.738 mo
116.431 131.379 115.911 131.899 115.27 131.899 cv
114.629 131.899 114.109 131.379 114.109 130.738 cv
114.109 130.097 114.629 129.577 115.27 129.577 cv
115.911 129.577 116.431 130.097 116.431 130.738 cv
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
119.07 133.905 mo
119.07 134.546 118.55 135.066 117.909 135.066 cv
117.269 135.066 116.748 134.546 116.748 133.905 cv
116.748 133.264 117.269 132.744 117.909 132.744 cv
118.55 132.744 119.07 133.264 119.07 133.905 cv
ef
119.07 133.905 mo
119.07 134.546 118.55 135.066 117.909 135.066 cv
117.269 135.066 116.748 134.546 116.748 133.905 cv
116.748 133.264 117.269 132.744 117.909 132.744 cv
118.55 132.744 119.07 133.264 119.07 133.905 cv
cp
@
grestore
121.445 128.892 mo
121.445 129.532 120.925 130.052 120.284 130.052 cv
119.643 130.052 119.123 129.532 119.123 128.892 cv
119.123 128.249 119.643 127.729 120.284 127.729 cv
120.925 127.729 121.445 128.249 121.445 128.892 cv
ef
121.445 128.892 mo
121.445 129.532 120.925 130.052 120.284 130.052 cv
119.643 130.052 119.123 129.532 119.123 128.892 cv
119.123 128.249 119.643 127.729 120.284 127.729 cv
120.925 127.729 121.445 128.249 121.445 128.892 cv
cp
@
126.635 128.275 mo
126.635 128.916 126.115 129.436 125.474 129.436 cv
124.833 129.436 124.313 128.916 124.313 128.275 cv
124.313 127.634 124.833 127.114 125.474 127.114 cv
126.115 127.114 126.635 127.634 126.635 128.275 cv
ef
126.635 128.275 mo
126.635 128.916 126.115 129.436 125.474 129.436 cv
124.833 129.436 124.313 128.916 124.313 128.275 cv
124.313 127.634 124.833 127.114 125.474 127.114 cv
126.115 127.114 126.635 127.634 126.635 128.275 cv
cp
@
130.154 120.71 mo
130.154 121.351 129.633 121.872 128.992 121.872 cv
128.352 121.872 127.832 121.351 127.832 120.71 cv
127.832 120.069 128.352 119.549 128.992 119.549 cv
129.633 119.549 130.154 120.069 130.154 120.71 cv
ef
130.154 120.71 mo
130.154 121.351 129.633 121.872 128.992 121.872 cv
128.352 121.872 127.832 121.351 127.832 120.71 cv
127.832 120.069 128.352 119.549 128.992 119.549 cv
129.633 119.549 130.154 120.069 130.154 120.71 cv
cp
@
133.585 108.747 mo
133.585 109.388 133.065 109.908 132.423 109.908 cv
131.783 109.908 131.262 109.388 131.262 108.747 cv
131.262 108.105 131.783 107.585 132.423 107.585 cv
133.065 107.585 133.585 108.105 133.585 108.747 cv
ef
133.585 108.747 mo
133.585 109.388 133.065 109.908 132.423 109.908 cv
131.783 109.908 131.262 109.388 131.262 108.747 cv
131.262 108.105 131.783 107.585 132.423 107.585 cv
133.065 107.585 133.585 108.105 133.585 108.747 cv
cp
@
135.168 108.043 mo
135.168 108.684 134.647 109.204 134.007 109.204 cv
133.366 109.204 132.846 108.684 132.846 108.043 cv
132.846 107.402 133.366 106.882 134.007 106.882 cv
134.647 106.882 135.168 107.402 135.168 108.043 cv
ef
135.168 108.043 mo
135.168 108.684 134.647 109.204 134.007 109.204 cv
133.366 109.204 132.846 108.684 132.846 108.043 cv
132.846 107.402 133.366 106.882 134.007 106.882 cv
134.647 106.882 135.168 107.402 135.168 108.043 cv
cp
@
142.294 94.3202 mo
142.294 94.9612 141.773 95.4811 141.132 95.4811 cv
140.491 95.4811 139.971 94.9612 139.971 94.3202 cv
139.971 93.6802 140.491 93.1592 141.132 93.1592 cv
141.773 93.1592 142.294 93.6802 142.294 94.3202 cv
ef
142.294 94.3202 mo
142.294 94.9612 141.773 95.4811 141.132 95.4811 cv
140.491 95.4811 139.971 94.9612 139.971 94.3202 cv
139.971 93.6802 140.491 93.1592 141.132 93.1592 cv
141.773 93.1592 142.294 93.6802 142.294 94.3202 cv
cp
@
144.756 91.6812 mo
144.756 92.3221 144.236 92.8431 143.595 92.8431 cv
142.954 92.8431 142.434 92.3221 142.434 91.6812 cv
142.434 91.0402 142.954 90.5201 143.595 90.5201 cv
144.236 90.5201 144.756 91.0402 144.756 91.6812 cv
ef
144.756 91.6812 mo
144.756 92.3221 144.236 92.8431 143.595 92.8431 cv
142.954 92.8431 142.434 92.3221 142.434 91.6812 cv
142.434 91.0402 142.954 90.5201 143.595 90.5201 cv
144.236 90.5201 144.756 91.0402 144.756 91.6812 cv
cp
@
149.507 90.4501 mo
149.507 91.0912 148.986 91.6111 148.346 91.6111 cv
147.705 91.6111 147.184 91.0912 147.184 90.4501 cv
147.184 89.8082 147.705 89.2881 148.346 89.2881 cv
148.986 89.2881 149.507 89.8082 149.507 90.4501 cv
ef
149.507 90.4501 mo
149.507 91.0912 148.986 91.6111 148.346 91.6111 cv
147.705 91.6111 147.184 91.0912 147.184 90.4501 cv
147.184 89.8082 147.705 89.2881 148.346 89.2881 cv
148.986 89.2881 149.507 89.8082 149.507 90.4501 cv
cp
@
152.585 89.2181 mo
152.585 89.8592 152.065 90.3792 151.425 90.3792 cv
150.783 90.3792 150.263 89.8592 150.263 89.2181 cv
150.263 88.5782 150.783 88.0572 151.425 88.0572 cv
152.065 88.0572 152.585 88.5782 152.585 89.2181 cv
ef
152.585 89.2181 mo
152.585 89.8592 152.065 90.3792 151.425 90.3792 cv
150.783 90.3792 150.263 89.8592 150.263 89.2181 cv
150.263 88.5782 150.783 88.0572 151.425 88.0572 cv
152.065 88.0572 152.585 88.5782 152.585 89.2181 cv
cp
@
157.951 91.6812 mo
157.951 92.3221 157.431 92.8431 156.79 92.8431 cv
156.149 92.8431 155.629 92.3221 155.629 91.6812 cv
155.629 91.0402 156.149 90.5201 156.79 90.5201 cv
157.431 90.5201 157.951 91.0402 157.951 91.6812 cv
ef
157.951 91.6812 mo
157.951 92.3221 157.431 92.8431 156.79 92.8431 cv
156.149 92.8431 155.629 92.3221 155.629 91.6812 cv
155.629 91.0402 156.149 90.5201 156.79 90.5201 cv
157.431 90.5201 157.951 91.0402 157.951 91.6812 cv
cp
@
161.294 84.8202 mo
161.294 85.4612 160.774 85.9811 160.133 85.9811 cv
159.491 85.9811 158.971 85.4612 158.971 84.8202 cv
158.971 84.1791 159.491 83.6592 160.133 83.6592 cv
160.774 83.6592 161.294 84.1791 161.294 84.8202 cv
ef
161.294 84.8202 mo
161.294 85.4612 160.774 85.9811 160.133 85.9811 cv
159.491 85.9811 158.971 85.4612 158.971 84.8202 cv
158.971 84.1791 159.491 83.6592 160.133 83.6592 cv
160.774 83.6592 161.294 84.1791 161.294 84.8202 cv
cp
@
164.811 85.3481 mo
164.811 85.9891 164.292 86.5092 163.652 86.5092 cv
163.01 86.5092 162.49 85.9891 162.49 85.3481 cv
162.49 84.7072 163.01 84.1862 163.652 84.1862 cv
164.292 84.1862 164.811 84.7072 164.811 85.3481 cv
ef
164.811 85.3481 mo
164.811 85.9891 164.292 86.5092 163.652 86.5092 cv
163.01 86.5092 162.49 85.9891 162.49 85.3481 cv
162.49 84.7072 163.01 84.1862 163.652 84.1862 cv
164.292 84.1862 164.811 84.7072 164.811 85.3481 cv
cp
@
169.739 72.1531 mo
169.739 72.7942 169.218 73.3141 168.578 73.3141 cv
167.936 73.3141 167.417 72.7942 167.417 72.1531 cv
167.417 71.5121 167.936 70.9922 168.578 70.9922 cv
169.218 70.9922 169.739 71.5121 169.739 72.1531 cv
ef
169.739 72.1531 mo
169.739 72.7942 169.218 73.3141 168.578 73.3141 cv
167.936 73.3141 167.417 72.7942 167.417 72.1531 cv
167.417 71.5121 167.936 70.9922 168.578 70.9922 cv
169.218 70.9922 169.739 71.5121 169.739 72.1531 cv
cp
@
171.849 66.5231 mo
171.849 67.1642 171.33 67.6841 170.688 67.6841 cv
170.049 67.6841 169.527 67.1642 169.527 66.5231 cv
169.527 65.8821 170.049 65.3622 170.688 65.3622 cv
171.33 65.3622 171.849 65.8821 171.849 66.5231 cv
ef
171.849 66.5231 mo
171.849 67.1642 171.33 67.6841 170.688 67.6841 cv
170.049 67.6841 169.527 67.1642 169.527 66.5231 cv
169.527 65.8821 170.049 65.3622 170.688 65.3622 cv
171.33 65.3622 171.849 65.8821 171.849 66.5231 cv
cp
@
176.248 54.4722 mo
176.248 55.1132 175.728 55.6332 175.087 55.6332 cv
174.445 55.6332 173.926 55.1132 173.926 54.4722 cv
173.926 53.8312 174.445 53.3102 175.087 53.3102 cv
175.728 53.3102 176.248 53.8312 176.248 54.4722 cv
ef
176.248 54.4722 mo
176.248 55.1132 175.728 55.6332 175.087 55.6332 cv
174.445 55.6332 173.926 55.1132 173.926 54.4722 cv
173.926 53.8312 174.445 53.3102 175.087 53.3102 cv
175.728 53.3102 176.248 53.8312 176.248 54.4722 cv
cp
@
179.414 46.8192 mo
179.414 47.4601 178.895 47.9802 178.253 47.9802 cv
177.613 47.9802 177.093 47.4601 177.093 46.8192 cv
177.093 46.1782 177.613 45.6572 178.253 45.6572 cv
178.895 45.6572 179.414 46.1782 179.414 46.8192 cv
ef
179.414 46.8192 mo
179.414 47.4601 178.895 47.9802 178.253 47.9802 cv
177.613 47.9802 177.093 47.4601 177.093 46.8192 cv
177.093 46.1782 177.613 45.6572 178.253 45.6572 cv
178.895 45.6572 179.414 46.1782 179.414 46.8192 cv
cp
@
182.759 41.2772 mo
182.759 41.9182 182.238 42.4382 181.596 42.4382 cv
180.955 42.4382 180.435 41.9182 180.435 41.2772 cv
180.435 40.6362 180.955 40.1161 181.596 40.1161 cv
182.238 40.1161 182.759 40.6362 182.759 41.2772 cv
ef
182.759 41.2772 mo
182.759 41.9182 182.238 42.4382 181.596 42.4382 cv
180.955 42.4382 180.435 41.9182 180.435 41.2772 cv
180.435 40.6362 180.955 40.1161 181.596 40.1161 cv
182.238 40.1161 182.759 40.6362 182.759 41.2772 cv
cp
@
185.925 34.3282 mo
185.925 34.9681 185.403 35.4891 184.762 35.4891 cv
184.123 35.4891 183.602 34.9681 183.602 34.3282 cv
183.602 33.6871 184.123 33.1661 184.762 33.1661 cv
185.403 33.1661 185.925 33.6871 185.925 34.3282 cv
ef
185.925 34.3282 mo
185.925 34.9681 185.403 35.4891 184.762 35.4891 cv
184.123 35.4891 183.602 34.9681 183.602 34.3282 cv
183.602 33.6871 184.123 33.1661 184.762 33.1661 cv
185.403 33.1661 185.925 33.6871 185.925 34.3282 cv
cp
@
190.849 36.2632 mo
190.849 36.9042 190.33 37.4241 189.689 37.4241 cv
189.048 37.4241 188.53 36.9042 188.53 36.2632 cv
188.53 35.6212 189.048 35.1022 189.689 35.1022 cv
190.33 35.1022 190.849 35.6212 190.849 36.2632 cv
ef
190.849 36.2632 mo
190.849 36.9042 190.33 37.4241 189.689 37.4241 cv
189.048 37.4241 188.53 36.9042 188.53 36.2632 cv
188.53 35.6212 189.048 35.1022 189.689 35.1022 cv
190.33 35.1022 190.849 35.6212 190.849 36.2632 cv
cp
@
194.016 33.6241 mo
194.016 34.2651 193.497 34.7852 192.855 34.7852 cv
192.216 34.7852 191.695 34.2651 191.695 33.6241 cv
191.695 32.9832 192.216 32.4631 192.855 32.4631 cv
193.497 32.4631 194.016 32.9832 194.016 33.6241 cv
ef
194.016 33.6241 mo
194.016 34.2651 193.497 34.7852 192.855 34.7852 cv
192.216 34.7852 191.695 34.2651 191.695 33.6241 cv
191.695 32.9832 192.216 32.4631 192.855 32.4631 cv
193.497 32.4631 194.016 32.9832 194.016 33.6241 cv
cp
@
196.391 33.6241 mo
196.391 34.2651 195.873 34.7852 195.23 34.7852 cv
194.592 34.7852 194.069 34.2651 194.069 33.6241 cv
194.069 32.9832 194.592 32.4631 195.23 32.4631 cv
195.873 32.4631 196.391 32.9832 196.391 33.6241 cv
ef
196.391 33.6241 mo
196.391 34.2651 195.873 34.7852 195.23 34.7852 cv
194.592 34.7852 194.069 34.2651 194.069 33.6241 cv
194.069 32.9832 194.592 32.4631 195.23 32.4631 cv
195.873 32.4631 196.391 32.9832 196.391 33.6241 cv
cp
@
199.999 45.0591 mo
199.999 45.7001 199.478 46.2212 198.838 46.2212 cv
198.197 46.2212 197.676 45.7001 197.676 45.0591 cv
197.676 44.4192 198.197 43.8981 198.838 43.8981 cv
199.478 43.8981 199.999 44.4192 199.999 45.0591 cv
ef
199.999 45.0591 mo
199.999 45.7001 199.478 46.2212 198.838 46.2212 cv
198.197 46.2212 197.676 45.7001 197.676 45.0591 cv
197.676 44.4192 198.197 43.8981 198.838 43.8981 cv
199.478 43.8981 199.999 44.4192 199.999 45.0591 cv
cp
@
205.102 57.0231 mo
205.102 57.6631 204.58 58.1841 203.94 58.1841 cv
203.299 58.1841 202.779 57.6631 202.779 57.0231 cv
202.779 56.3821 203.299 55.8622 203.94 55.8622 cv
204.58 55.8622 205.102 56.3821 205.102 57.0231 cv
ef
205.102 57.0231 mo
205.102 57.6631 204.58 58.1841 203.94 58.1841 cv
203.299 58.1841 202.779 57.6631 202.779 57.0231 cv
202.779 56.3821 203.299 55.8622 203.94 55.8622 cv
204.58 55.8622 205.102 56.3821 205.102 57.0231 cv
cp
@
209.676 68.4582 mo
209.676 69.0992 209.155 69.6202 208.513 69.6202 cv
207.873 69.6202 207.353 69.0992 207.353 68.4582 cv
207.353 67.8171 207.873 67.2972 208.513 67.2972 cv
209.155 67.2972 209.676 67.8171 209.676 68.4582 cv
ef
209.676 68.4582 mo
209.676 69.0992 209.155 69.6202 208.513 69.6202 cv
207.873 69.6202 207.353 69.0992 207.353 68.4582 cv
207.353 67.8171 207.873 67.2972 208.513 67.2972 cv
209.155 67.2972 209.676 67.8171 209.676 68.4582 cv
cp
@
214.338 81.6531 mo
214.338 82.2942 213.818 82.8152 213.177 82.8152 cv
212.535 82.8152 212.015 82.2942 212.015 81.6531 cv
212.015 81.0121 212.535 80.4922 213.177 80.4922 cv
213.818 80.4922 214.338 81.0121 214.338 81.6531 cv
ef
214.338 81.6531 mo
214.338 82.2942 213.818 82.8152 213.177 82.8152 cv
212.535 82.8152 212.015 82.2942 212.015 81.6531 cv
212.015 81.0121 212.535 80.4922 213.177 80.4922 cv
213.818 80.4922 214.338 81.0121 214.338 81.6531 cv
cp
@
220.406 92.3851 mo
220.406 93.0262 219.887 93.5461 219.245 93.5461 cv
218.606 93.5461 218.084 93.0262 218.084 92.3851 cv
218.084 91.7441 218.606 91.2242 219.245 91.2242 cv
219.887 91.2242 220.406 91.7441 220.406 92.3851 cv
ef
220.406 92.3851 mo
220.406 93.0262 219.887 93.5461 219.245 93.5461 cv
218.606 93.5461 218.084 93.0262 218.084 92.3851 cv
218.084 91.7441 218.606 91.2242 219.245 91.2242 cv
219.887 91.2242 220.406 91.7441 220.406 92.3851 cv
cp
@
230.259 103.644 mo
230.259 104.286 229.738 104.806 229.098 104.806 cv
228.457 104.806 227.937 104.286 227.937 103.644 cv
227.937 103.003 228.457 102.483 229.098 102.483 cv
229.738 102.483 230.259 103.003 230.259 103.644 cv
ef
230.259 103.644 mo
230.259 104.286 229.738 104.806 229.098 104.806 cv
228.457 104.806 227.937 104.286 227.937 103.644 cv
227.937 103.003 228.457 102.483 229.098 102.483 cv
229.738 102.483 230.259 103.003 230.259 103.644 cv
cp
@
238.351 111.21 mo
238.351 111.851 237.833 112.371 237.19 112.371 cv
236.55 112.371 236.029 111.851 236.029 111.21 cv
236.029 110.569 236.55 110.049 237.19 110.049 cv
237.833 110.049 238.351 110.569 238.351 111.21 cv
ef
238.351 111.21 mo
238.351 111.851 237.833 112.371 237.19 112.371 cv
236.55 112.371 236.029 111.851 236.029 111.21 cv
236.029 110.569 236.55 110.049 237.19 110.049 cv
237.833 110.049 238.351 110.569 238.351 111.21 cv
cp
@
246.005 115.08 mo
246.005 115.721 245.485 116.241 244.843 116.241 cv
244.204 116.241 243.681 115.721 243.681 115.08 cv
243.681 114.439 244.204 113.919 244.843 113.919 cv
245.485 113.919 246.005 114.439 246.005 115.08 cv
ef
246.005 115.08 mo
246.005 115.721 245.485 116.241 244.843 116.241 cv
244.204 116.241 243.681 115.721 243.681 115.08 cv
243.681 114.439 244.204 113.919 244.843 113.919 cv
245.485 113.919 246.005 114.439 246.005 115.08 cv
cp
@
257.616 120.182 mo
257.616 120.823 257.096 121.344 256.455 121.344 cv
255.814 121.344 255.293 120.823 255.293 120.182 cv
255.293 119.541 255.814 119.021 256.455 119.021 cv
257.096 119.021 257.616 119.541 257.616 120.182 cv
ef
257.616 120.182 mo
257.616 120.823 257.096 121.344 256.455 121.344 cv
255.814 121.344 255.293 120.823 255.293 120.182 cv
255.293 119.541 255.814 119.021 256.455 119.021 cv
257.096 119.021 257.616 119.541 257.616 120.182 cv
cp
@
269.668 123.876 mo
269.668 124.518 269.147 125.038 268.507 125.038 cv
267.865 125.038 267.346 124.518 267.346 123.876 cv
267.346 123.236 267.865 122.715 268.507 122.715 cv
269.147 122.715 269.668 123.236 269.668 123.876 cv
ef
269.668 123.876 mo
269.668 124.518 269.147 125.038 268.507 125.038 cv
267.865 125.038 267.346 124.518 267.346 123.876 cv
267.346 123.236 267.865 122.715 268.507 122.715 cv
269.147 122.715 269.668 123.236 269.668 123.876 cv
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
88.524 122.241 mo
89.79 124.563 li
87.152 124.563 li
88.524 122.241 li
.95346 .916228 .0104982 .0011902 cmyk
ef
88.524 122.241 mo
89.79 124.563 li
87.152 124.563 li
88.524 122.241 li
cp
@
grestore
98.761 122.874 mo
100.028 125.196 li
97.39 125.196 li
98.761 122.874 li
.95346 .916228 .0104982 .0011902 cmyk
ef
98.761 122.874 mo
100.028 125.196 li
97.39 125.196 li
98.761 122.874 li
cp
@
103.089 122.874 mo
104.356 125.196 li
101.717 125.196 li
103.089 122.874 li
ef
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
103.089 122.874 mo
104.356 125.196 li
101.717 125.196 li
103.089 122.874 li
cp
106.572 134.275 mo
107.84 136.598 li
105.2 136.598 li
106.572 134.275 li
cp
@
grestore
111.112 120.34 mo
112.378 122.663 li
109.739 122.663 li
111.112 120.34 li
ef
111.112 120.34 mo
112.378 122.663 li
109.739 122.663 li
111.112 120.34 li
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
113.116 133.008 mo
114.383 135.331 li
111.744 135.331 li
113.116 133.008 li
ef
113.116 133.008 mo
114.383 135.331 li
111.744 135.331 li
113.116 133.008 li
cp
@
grestore
117.339 124.774 mo
118.605 127.097 li
115.967 127.097 li
117.339 124.774 li
ef
117.339 124.774 mo
118.605 127.097 li
115.967 127.097 li
117.339 124.774 li
cp
@
121.983 120.974 mo
123.25 123.296 li
120.611 123.296 li
121.983 120.974 li
ef
121.983 120.974 mo
123.25 123.296 li
120.611 123.296 li
121.983 120.974 li
cp
@
125.466 124.141 mo
126.733 126.463 li
124.094 126.463 li
125.466 124.141 li
ef
125.466 124.141 mo
126.733 126.463 li
124.094 126.463 li
125.466 124.141 li
cp
@
127.683 120.974 mo
128.949 123.296 li
126.311 123.296 li
127.683 120.974 li
ef
127.683 120.974 mo
128.949 123.296 li
126.311 123.296 li
127.683 120.974 li
cp
@
132.327 120.34 mo
133.593 122.663 li
130.955 122.663 li
132.327 120.34 li
ef
132.327 120.34 mo
133.593 122.663 li
130.955 122.663 li
132.327 120.34 li
cp
@
135.81 110.311 mo
137.077 112.634 li
134.438 112.634 li
135.81 110.311 li
ef
135.81 110.311 mo
137.077 112.634 li
134.438 112.634 li
135.81 110.311 li
cp
@
139.61 98.9102 mo
140.876 101.233 li
138.238 101.233 li
139.61 98.9102 li
ef
139.61 98.9102 mo
140.876 101.233 li
138.238 101.233 li
139.61 98.9102 li
cp
@
141.51 88.8812 mo
142.777 91.2042 li
140.137 91.2042 li
141.51 88.8812 li
ef
141.51 88.8812 mo
142.777 91.2042 li
140.137 91.2042 li
141.51 88.8812 li
cp
@
148.16 84.4482 mo
149.426 86.7701 li
146.787 86.7701 li
148.16 84.4482 li
ef
148.16 84.4482 mo
149.426 86.7701 li
146.787 86.7701 li
148.16 84.4482 li
cp
@
150.693 85.0801 mo
151.96 87.4031 li
149.321 87.4031 li
150.693 85.0801 li
ef
150.693 85.0801 mo
151.96 87.4031 li
149.321 87.4031 li
150.693 85.0801 li
cp
@
155.443 83.8141 mo
156.709 86.1371 li
154.07 86.1371 li
155.443 83.8141 li
ef
155.443 83.8141 mo
156.709 86.1371 li
154.07 86.1371 li
155.443 83.8141 li
cp
@
158.292 88.2471 mo
159.559 90.5702 li
156.92 90.5702 li
158.292 88.2471 li
ef
158.292 88.2471 mo
159.559 90.5702 li
156.92 90.5702 li
158.292 88.2471 li
cp
@
163.886 83.8141 mo
165.153 86.1371 li
162.514 86.1371 li
163.886 83.8141 li
ef
163.886 83.8141 mo
165.153 86.1371 li
162.514 86.1371 li
163.886 83.8141 li
cp
@
167.37 75.5792 mo
168.636 77.9022 li
165.998 77.9022 li
167.37 75.5792 li
ef
167.37 75.5792 mo
168.636 77.9022 li
165.998 77.9022 li
167.37 75.5792 li
cp
@
170.853 69.8782 mo
172.12 72.2021 li
169.481 72.2021 li
170.853 69.8782 li
ef
170.853 69.8782 mo
172.12 72.2021 li
169.481 72.2021 li
170.853 69.8782 li
cp
@
175.498 51.6152 mo
176.763 53.9382 li
174.127 53.9382 li
175.498 51.6152 li
ef
175.498 51.6152 mo
176.763 53.9382 li
174.127 53.9382 li
175.498 51.6152 li
cp
@
177.608 50.3492 mo
178.875 52.6711 li
176.236 52.6711 li
177.608 50.3492 li
ef
177.608 50.3492 mo
178.875 52.6711 li
176.236 52.6711 li
177.608 50.3492 li
cp
@
182.253 42.2202 mo
183.519 44.5432 li
180.882 44.5432 li
182.253 42.2202 li
ef
182.253 42.2202 mo
183.519 44.5432 li
180.882 44.5432 li
182.253 42.2202 li
cp
@
184.891 35.8862 mo
186.157 38.2082 li
183.519 38.2082 li
184.891 35.8862 li
ef
184.891 35.8862 mo
186.157 38.2082 li
183.519 38.2082 li
184.891 35.8862 li
cp
@
189.114 32.7192 mo
190.38 35.0411 li
187.74 35.0411 li
189.114 32.7192 li
ef
189.114 32.7192 mo
190.38 35.0411 li
187.74 35.0411 li
189.114 32.7192 li
cp
@
192.068 35.2532 mo
193.336 37.5762 li
190.697 37.5762 li
192.068 35.2532 li
ef
192.068 35.2532 mo
193.336 37.5762 li
190.697 37.5762 li
192.068 35.2532 li
cp
@
196.713 38.4192 mo
197.979 40.7422 li
195.342 40.7422 li
196.713 38.4192 li
ef
196.713 38.4192 mo
197.979 40.7422 li
195.342 40.7422 li
196.713 38.4192 li
cp
@
199.563 47.1822 mo
200.829 49.5042 li
198.19 49.5042 li
199.563 47.1822 li
ef
199.563 47.1822 mo
200.829 49.5042 li
198.19 49.5042 li
199.563 47.1822 li
cp
@
202.835 50.9822 mo
204.101 53.3052 li
201.463 53.3052 li
202.835 50.9822 li
ef
202.835 50.9822 mo
204.101 53.3052 li
201.463 53.3052 li
202.835 50.9822 li
cp
@
206.107 57.3162 mo
207.374 59.6392 li
204.734 59.6392 li
206.107 57.3162 li
ef
206.107 57.3162 mo
207.374 59.6392 li
204.734 59.6392 li
206.107 57.3162 li
cp
@
210.963 73.0461 mo
212.228 75.3691 li
209.59 75.3691 li
210.963 73.0461 li
ef
210.963 73.0461 mo
212.228 75.3691 li
209.59 75.3691 li
210.963 73.0461 li
cp
@
213.179 78.1132 mo
214.445 80.4362 li
211.806 80.4362 li
213.179 78.1132 li
ef
213.179 78.1132 mo
214.445 80.4362 li
211.806 80.4362 li
213.179 78.1132 li
cp
@
217.612 84.4482 mo
218.879 86.7701 li
216.24 86.7701 li
217.612 84.4482 li
ef
217.612 84.4482 mo
218.879 86.7701 li
216.24 86.7701 li
217.612 84.4482 li
cp
@
219.511 88.2471 mo
220.779 90.5702 li
218.139 90.5702 li
219.511 88.2471 li
ef
219.511 88.2471 mo
220.779 90.5702 li
218.139 90.5702 li
219.511 88.2471 li
cp
@
224.895 99.5432 mo
226.162 101.866 li
223.523 101.866 li
224.895 99.5432 li
ef
224.895 99.5432 mo
226.162 101.866 li
223.523 101.866 li
224.895 99.5432 li
cp
@
230.279 105.244 mo
231.544 107.567 li
228.905 107.567 li
230.279 105.244 li
ef
230.279 105.244 mo
231.544 107.567 li
228.905 107.567 li
230.279 105.244 li
cp
@
240.517 114.112 mo
241.782 116.434 li
239.144 116.434 li
240.517 114.112 li
ef
240.517 114.112 mo
241.782 116.434 li
239.144 116.434 li
240.517 114.112 li
cp
@
244.949 115.379 mo
246.217 117.701 li
243.578 117.701 li
244.949 115.379 li
ef
244.949 115.379 mo
246.217 117.701 li
243.578 117.701 li
244.949 115.379 li
cp
@
248.855 116.645 mo
250.121 118.968 li
247.482 118.968 li
248.855 116.645 li
ef
248.855 116.645 mo
250.121 118.968 li
247.482 118.968 li
248.855 116.645 li
cp
@
257.51 119.179 mo
258.777 121.501 li
256.138 121.501 li
257.51 119.179 li
ef
257.51 119.179 mo
258.777 121.501 li
256.138 121.501 li
257.51 119.179 li
cp
@
272.499 123.507 mo
273.763 125.83 li
271.126 125.83 li
272.499 123.507 li
ef
272.499 123.507 mo
273.763 125.83 li
271.126 125.83 li
272.499 123.507 li
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
280.837 127.308 mo
282.102 129.63 li
279.465 129.63 li
280.837 127.308 li
ef
280.837 127.308 mo
282.102 129.63 li
279.465 129.63 li
280.837 127.308 li
cp
@
88.313 131.32 mo
88.524 132.164 li
89.579 132.164 li
88.734 132.797 li
89.051 133.748 li
88.313 133.114 li
87.468 133.748 li
87.784 132.797 li
86.94 132.164 li
87.995 132.164 li
88.313 131.32 li
.839353 .0960403 .972992 .00726329 cmyk
ef
88.313 131.32 mo
88.524 132.164 li
89.579 132.164 li
88.734 132.797 li
89.051 133.748 li
88.313 133.114 li
87.468 133.748 li
87.784 132.797 li
86.94 132.164 li
87.995 132.164 li
88.313 131.32 li
cp
@
grestore
92.007 126.886 mo
92.217 127.73 li
93.273 127.73 li
92.428 128.363 li
92.746 129.313 li
92.007 128.68 li
91.162 129.313 li
91.479 128.363 li
90.634 127.73 li
91.69 127.73 li
92.007 126.886 li
.839353 .0960403 .972992 .00726329 cmyk
ef
92.007 126.886 mo
92.217 127.73 li
93.273 127.73 li
92.428 128.363 li
92.746 129.313 li
92.007 128.68 li
91.162 129.313 li
91.479 128.363 li
90.634 127.73 li
91.69 127.73 li
92.007 126.886 li
cp
@
95.912 126.886 mo
96.123 127.73 li
97.178 127.73 li
96.334 128.363 li
96.651 129.313 li
95.912 128.68 li
95.068 129.313 li
95.384 128.363 li
94.539 127.73 li
95.595 127.73 li
95.912 126.886 li
ef
95.912 126.886 mo
96.123 127.73 li
97.178 127.73 li
96.334 128.363 li
96.651 129.313 li
95.912 128.68 li
95.068 129.313 li
95.384 128.363 li
94.539 127.73 li
95.595 127.73 li
95.912 126.886 li
cp
@
102.773 124.985 mo
102.984 125.83 li
104.039 125.83 li
103.195 126.463 li
103.512 127.413 li
102.773 126.78 li
101.928 127.413 li
102.245 126.463 li
101.401 125.83 li
102.456 125.83 li
102.773 124.985 li
ef
102.773 124.985 mo
102.984 125.83 li
104.039 125.83 li
103.195 126.463 li
103.512 127.413 li
102.773 126.78 li
101.928 127.413 li
102.245 126.463 li
101.401 125.83 li
102.456 125.83 li
102.773 124.985 li
cp
@
106.045 124.985 mo
106.256 125.83 li
107.311 125.83 li
106.467 126.463 li
106.784 127.413 li
106.045 126.78 li
105.2 127.413 li
105.517 126.463 li
104.673 125.83 li
105.728 125.83 li
106.045 124.985 li
ef
106.045 124.985 mo
106.256 125.83 li
107.311 125.83 li
106.467 126.463 li
106.784 127.413 li
106.045 126.78 li
105.2 127.413 li
105.517 126.463 li
104.673 125.83 li
105.728 125.83 li
106.045 124.985 li
cp
@
110.162 128.152 mo
110.372 128.997 li
111.428 128.997 li
110.583 129.63 li
110.9 130.581 li
110.162 129.946 li
109.317 130.581 li
109.633 129.63 li
108.789 128.997 li
109.844 128.997 li
110.162 128.152 li
ef
110.162 128.152 mo
110.372 128.997 li
111.428 128.997 li
110.583 129.63 li
110.9 130.581 li
110.162 129.946 li
109.317 130.581 li
109.633 129.63 li
108.789 128.997 li
109.844 128.997 li
110.162 128.152 li
cp
@
114.067 116.856 mo
114.278 117.701 li
115.334 117.701 li
114.489 118.334 li
114.805 119.285 li
114.067 118.651 li
113.222 119.285 li
113.539 118.334 li
112.695 117.701 li
113.75 117.701 li
114.067 116.856 li
ef
114.067 116.856 mo
114.278 117.701 li
115.334 117.701 li
114.489 118.334 li
114.805 119.285 li
114.067 118.651 li
113.222 119.285 li
113.539 118.334 li
112.695 117.701 li
113.75 117.701 li
114.067 116.856 li
cp
@
117.656 131.32 mo
117.867 132.164 li
118.922 132.164 li
118.077 132.797 li
118.394 133.748 li
117.656 133.114 li
116.811 133.748 li
117.127 132.797 li
116.283 132.164 li
117.339 132.164 li
117.656 131.32 li
ef
117.656 131.32 mo
117.867 132.164 li
118.922 132.164 li
118.077 132.797 li
118.394 133.748 li
117.656 133.114 li
116.811 133.748 li
117.127 132.797 li
116.283 132.164 li
117.339 132.164 li
117.656 131.32 li
cp
@
120.294 128.152 mo
120.505 128.997 li
121.561 128.997 li
120.716 129.63 li
121.033 130.581 li
120.294 129.946 li
119.45 130.581 li
119.767 129.63 li
118.922 128.997 li
119.978 128.997 li
120.294 128.152 li
ef
120.294 128.152 mo
120.505 128.997 li
121.561 128.997 li
120.716 129.63 li
121.033 130.581 li
120.294 129.946 li
119.45 130.581 li
119.767 129.63 li
118.922 128.997 li
119.978 128.997 li
120.294 128.152 li
cp
@
123.883 120.023 mo
124.094 120.868 li
125.149 120.868 li
124.305 121.501 li
124.621 122.452 li
123.883 121.818 li
123.038 122.452 li
123.355 121.501 li
122.511 120.868 li
123.567 120.868 li
123.883 120.023 li
ef
123.883 120.023 mo
124.094 120.868 li
125.149 120.868 li
124.305 121.501 li
124.621 122.452 li
123.883 121.818 li
123.038 122.452 li
123.355 121.501 li
122.511 120.868 li
123.567 120.868 li
123.883 120.023 li
cp
@
128.105 121.185 mo
128.316 122.029 li
129.371 122.029 li
128.527 122.663 li
128.843 123.613 li
128.105 122.98 li
127.26 123.613 li
127.577 122.663 li
126.733 122.029 li
127.788 122.029 li
128.105 121.185 li
ef
128.105 121.185 mo
128.316 122.029 li
129.371 122.029 li
128.527 122.663 li
128.843 123.613 li
128.105 122.98 li
127.26 123.613 li
127.577 122.663 li
126.733 122.029 li
127.788 122.029 li
128.105 121.185 li
cp
@
131.905 104.821 mo
132.116 105.666 li
133.171 105.666 li
132.327 106.3 li
132.643 107.25 li
131.905 106.616 li
131.061 107.25 li
131.377 106.3 li
130.532 105.666 li
131.588 105.666 li
131.905 104.821 li
ef
131.905 104.821 mo
132.116 105.666 li
133.171 105.666 li
132.327 106.3 li
132.643 107.25 li
131.905 106.616 li
131.061 107.25 li
131.377 106.3 li
130.532 105.666 li
131.588 105.666 li
131.905 104.821 li
cp
@
135.071 106.722 mo
135.282 107.567 li
136.338 107.567 li
135.493 108.2 li
135.81 109.15 li
135.071 108.517 li
134.227 109.15 li
134.544 108.2 li
133.699 107.567 li
134.755 107.567 li
135.071 106.722 li
ef
135.071 106.722 mo
135.282 107.567 li
136.338 107.567 li
135.493 108.2 li
135.81 109.15 li
135.071 108.517 li
134.227 109.15 li
134.544 108.2 li
133.699 107.567 li
134.755 107.567 li
135.071 106.722 li
cp
@
138.026 104.821 mo
138.238 105.666 li
139.293 105.666 li
138.449 106.3 li
138.766 107.25 li
138.026 106.616 li
137.182 107.25 li
137.499 106.3 li
136.654 105.666 li
137.71 105.666 li
138.026 104.821 li
ef
138.026 104.821 mo
138.238 105.666 li
139.293 105.666 li
138.449 106.3 li
138.766 107.25 li
138.026 106.616 li
137.182 107.25 li
137.499 106.3 li
136.654 105.666 li
137.71 105.666 li
138.026 104.821 li
cp
@
142.882 96.5872 mo
143.093 97.4322 li
144.149 97.4322 li
143.304 98.0652 li
143.621 99.0162 li
142.882 98.3821 li
142.038 99.0162 li
142.354 98.0652 li
141.51 97.4322 li
142.566 97.4322 li
142.882 96.5872 li
ef
142.882 96.5872 mo
143.093 97.4322 li
144.149 97.4322 li
143.304 98.0652 li
143.621 99.0162 li
142.882 98.3821 li
142.038 99.0162 li
142.354 98.0652 li
141.51 97.4322 li
142.566 97.4322 li
142.882 96.5872 li
cp
@
145.415 90.9932 mo
145.626 91.8372 li
146.681 91.8372 li
145.837 92.4702 li
146.155 93.4202 li
145.415 92.7872 li
144.571 93.4202 li
144.887 92.4702 li
144.043 91.8372 li
145.099 91.8372 li
145.415 90.9932 li
ef
145.415 90.9932 mo
145.626 91.8372 li
146.681 91.8372 li
145.837 92.4702 li
146.155 93.4202 li
145.415 92.7872 li
144.571 93.4202 li
144.887 92.4702 li
144.043 91.8372 li
145.099 91.8372 li
145.415 90.9932 li
cp
@
152.17 75.7911 mo
152.381 76.6351 li
153.437 76.6351 li
152.593 77.2692 li
152.909 78.2192 li
152.17 77.5851 li
151.326 78.2192 li
151.643 77.2692 li
150.798 76.6351 li
151.854 76.6351 li
152.17 75.7911 li
ef
152.17 75.7911 mo
152.381 76.6351 li
153.437 76.6351 li
152.593 77.2692 li
152.909 78.2192 li
152.17 77.5851 li
151.326 78.2192 li
151.643 77.2692 li
150.798 76.6351 li
151.854 76.6351 li
152.17 75.7911 li
cp
@
154.915 82.7582 mo
155.126 83.6031 li
156.181 83.6031 li
155.337 84.2361 li
155.654 85.1862 li
154.915 84.5532 li
154.07 85.1862 li
154.387 84.2361 li
153.543 83.6031 li
154.598 83.6031 li
154.915 82.7582 li
ef
154.915 82.7582 mo
155.126 83.6031 li
156.181 83.6031 li
155.337 84.2361 li
155.654 85.1862 li
154.915 84.5532 li
154.07 85.1862 li
154.387 84.2361 li
153.543 83.6031 li
154.598 83.6031 li
154.915 82.7582 li
cp
@
159.031 80.2252 mo
159.242 81.0692 li
160.298 81.0692 li
159.454 81.7021 li
159.77 82.6531 li
159.031 82.0192 li
158.187 82.6531 li
158.504 81.7021 li
157.659 81.0692 li
158.715 81.0692 li
159.031 80.2252 li
ef
159.031 80.2252 mo
159.242 81.0692 li
160.298 81.0692 li
159.454 81.7021 li
159.77 82.6531 li
159.031 82.0192 li
158.187 82.6531 li
158.504 81.7021 li
157.659 81.0692 li
158.715 81.0692 li
159.031 80.2252 li
cp
@
161.143 83.3922 mo
161.353 84.2361 li
162.409 84.2361 li
161.564 84.8691 li
161.881 85.8202 li
161.143 85.1862 li
160.298 85.8202 li
160.614 84.8691 li
159.77 84.2361 li
160.825 84.2361 li
161.143 83.3922 li
ef
161.143 83.3922 mo
161.353 84.2361 li
162.409 84.2361 li
161.564 84.8691 li
161.881 85.8202 li
161.143 85.1862 li
160.298 85.8202 li
160.614 84.8691 li
159.77 84.2361 li
160.825 84.2361 li
161.143 83.3922 li
cp
@
168.107 82.7582 mo
168.32 83.6031 li
169.375 83.6031 li
168.531 84.2361 li
168.846 85.1862 li
168.107 84.5532 li
167.264 85.1862 li
167.582 84.2361 li
166.736 83.6031 li
167.792 83.6031 li
168.107 82.7582 li
ef
168.107 82.7582 mo
168.32 83.6031 li
169.375 83.6031 li
168.531 84.2361 li
168.846 85.1862 li
168.107 84.5532 li
167.264 85.1862 li
167.582 84.2361 li
166.736 83.6031 li
167.792 83.6031 li
168.107 82.7582 li
cp
@
170.536 72.6241 mo
170.747 73.4681 li
171.803 73.4681 li
170.959 74.1011 li
171.275 75.0522 li
170.536 74.4182 li
169.691 75.0522 li
170.008 74.1011 li
169.165 73.4681 li
170.219 73.4681 li
170.536 72.6241 li
ef
170.536 72.6241 mo
170.747 73.4681 li
171.803 73.4681 li
170.959 74.1011 li
171.275 75.0522 li
170.536 74.4182 li
169.691 75.0522 li
170.008 74.1011 li
169.165 73.4681 li
170.219 73.4681 li
170.536 72.6241 li
cp
@
174.865 63.8622 mo
175.075 64.7062 li
176.13 64.7062 li
175.286 65.3392 li
175.603 66.2902 li
174.865 65.6562 li
174.019 66.2902 li
174.336 65.3392 li
173.491 64.7062 li
174.547 64.7062 li
174.865 63.8622 li
ef
174.865 63.8622 mo
175.075 64.7062 li
176.13 64.7062 li
175.286 65.3392 li
175.603 66.2902 li
174.865 65.6562 li
174.019 66.2902 li
174.336 65.3392 li
173.491 64.7062 li
174.547 64.7062 li
174.865 63.8622 li
cp
@
177.713 51.1942 mo
177.925 52.0381 li
178.981 52.0381 li
178.136 52.6711 li
178.452 53.6212 li
177.713 52.9891 li
176.869 53.6212 li
177.185 52.6711 li
176.342 52.0381 li
177.398 52.0381 li
177.713 51.1942 li
ef
177.713 51.1942 mo
177.925 52.0381 li
178.981 52.0381 li
178.136 52.6711 li
178.452 53.6212 li
177.713 52.9891 li
176.869 53.6212 li
177.185 52.6711 li
176.342 52.0381 li
177.398 52.0381 li
177.713 51.1942 li
cp
@
182.675 42.4312 mo
182.885 43.2762 li
183.942 43.2762 li
183.096 43.9102 li
183.413 44.8592 li
182.675 44.2261 li
181.83 44.8592 li
182.146 43.9102 li
181.302 43.2762 li
182.359 43.2762 li
182.675 42.4312 li
ef
182.675 42.4312 mo
182.885 43.2762 li
183.942 43.2762 li
183.096 43.9102 li
183.413 44.8592 li
182.675 44.2261 li
181.83 44.8592 li
182.146 43.9102 li
181.302 43.2762 li
182.359 43.2762 li
182.675 42.4312 li
cp
@
185.103 39.2642 mo
185.313 40.1092 li
186.368 40.1092 li
185.525 40.7422 li
185.843 41.6921 li
185.103 41.0591 li
184.258 41.6921 li
184.574 40.7422 li
183.73 40.1092 li
184.785 40.1092 li
185.103 39.2642 li
ef
185.103 39.2642 mo
185.313 40.1092 li
186.368 40.1092 li
185.525 40.7422 li
185.843 41.6921 li
185.103 41.0591 li
184.258 41.6921 li
184.574 40.7422 li
183.73 40.1092 li
184.785 40.1092 li
185.103 39.2642 li
cp
@
188.585 32.2972 mo
188.797 33.1422 li
189.851 33.1422 li
189.008 33.7751 li
189.326 34.7252 li
188.585 34.0912 li
187.74 34.7252 li
188.057 33.7751 li
187.214 33.1422 li
188.268 33.1422 li
188.585 32.2972 li
ef
188.585 32.2972 mo
188.797 33.1422 li
189.851 33.1422 li
189.008 33.7751 li
189.326 34.7252 li
188.585 34.0912 li
187.74 34.7252 li
188.057 33.7751 li
187.214 33.1422 li
188.268 33.1422 li
188.585 32.2972 li
cp
@
192.703 37.9971 mo
192.912 38.8422 li
193.968 38.8422 li
193.124 39.4752 li
193.441 40.4261 li
192.703 39.7922 li
191.858 40.4261 li
192.175 39.4752 li
191.329 38.8422 li
192.385 38.8422 li
192.703 37.9971 li
ef
192.703 37.9971 mo
192.912 38.8422 li
193.968 38.8422 li
193.124 39.4752 li
193.441 40.4261 li
192.703 39.7922 li
191.858 40.4261 li
192.175 39.4752 li
191.329 38.8422 li
192.385 38.8422 li
192.703 37.9971 li
cp
@
196.607 37.3641 mo
196.819 38.2082 li
197.873 38.2082 li
197.029 38.8422 li
197.345 39.7922 li
196.607 39.1592 li
195.763 39.7922 li
196.08 38.8422 li
195.235 38.2082 li
196.29 38.2082 li
196.607 37.3641 li
ef
196.607 37.3641 mo
196.819 38.2082 li
197.873 38.2082 li
197.029 38.8422 li
197.345 39.7922 li
196.607 39.1592 li
195.763 39.7922 li
196.08 38.8422 li
195.235 38.2082 li
196.29 38.2082 li
196.607 37.3641 li
cp
@
199.352 42.4312 mo
199.563 43.2762 li
200.618 43.2762 li
199.773 43.9102 li
200.091 44.8592 li
199.352 44.2261 li
198.506 44.8592 li
198.825 43.9102 li
197.979 43.2762 li
199.035 43.2762 li
199.352 42.4312 li
ef
199.352 42.4312 mo
199.563 43.2762 li
200.618 43.2762 li
199.773 43.9102 li
200.091 44.8592 li
199.352 44.2261 li
198.506 44.8592 li
198.825 43.9102 li
197.979 43.2762 li
199.035 43.2762 li
199.352 42.4312 li
cp
@
203.045 51.8271 mo
203.257 52.6711 li
204.313 52.6711 li
203.468 53.3052 li
203.784 54.2552 li
203.045 53.6212 li
202.203 54.2552 li
202.518 53.3052 li
201.674 52.6711 li
202.729 52.6711 li
203.045 51.8271 li
ef
203.045 51.8271 mo
203.257 52.6711 li
204.313 52.6711 li
203.468 53.3052 li
203.784 54.2552 li
203.045 53.6212 li
202.203 54.2552 li
202.518 53.3052 li
201.674 52.6711 li
202.729 52.6711 li
203.045 51.8271 li
cp
@
206.528 56.8942 mo
206.74 57.7391 li
207.797 57.7391 li
206.951 58.3721 li
207.267 59.3232 li
206.528 58.6891 li
205.684 59.3232 li
206.002 58.3721 li
205.157 57.7391 li
206.212 57.7391 li
206.528 56.8942 li
ef
206.528 56.8942 mo
206.74 57.7391 li
207.797 57.7391 li
206.951 58.3721 li
207.267 59.3232 li
206.528 58.6891 li
205.684 59.3232 li
206.002 58.3721 li
205.157 57.7391 li
206.212 57.7391 li
206.528 56.8942 li
cp
@
210.644 66.3951 mo
210.857 67.2402 li
211.912 67.2402 li
211.068 67.8732 li
211.383 68.8232 li
210.644 68.1902 li
209.802 68.8232 li
210.118 67.8732 li
209.273 67.2402 li
210.329 67.2402 li
210.644 66.3951 li
ef
210.644 66.3951 mo
210.857 67.2402 li
211.912 67.2402 li
211.068 67.8732 li
211.383 68.8232 li
210.644 68.1902 li
209.802 68.8232 li
210.118 67.8732 li
209.273 67.2402 li
210.329 67.2402 li
210.644 66.3951 li
cp
@
213.495 75.7911 mo
213.706 76.6351 li
214.762 76.6351 li
213.919 77.2692 li
214.234 78.2192 li
213.495 77.5851 li
212.651 78.2192 li
212.968 77.2692 li
212.124 76.6351 li
213.179 76.6351 li
213.495 75.7911 li
ef
213.495 75.7911 mo
213.706 76.6351 li
214.762 76.6351 li
213.919 77.2692 li
214.234 78.2192 li
213.495 77.5851 li
212.651 78.2192 li
212.968 77.2692 li
212.124 76.6351 li
213.179 76.6351 li
213.495 75.7911 li
cp
@
217.402 82.1252 mo
217.612 82.9702 li
218.667 82.9702 li
217.824 83.6031 li
218.139 84.5532 li
217.402 83.9192 li
216.556 84.5532 li
216.873 83.6031 li
216.028 82.9702 li
217.084 82.9702 li
217.402 82.1252 li
ef
217.402 82.1252 mo
217.612 82.9702 li
218.667 82.9702 li
217.824 83.6031 li
218.139 84.5532 li
217.402 83.9192 li
216.556 84.5532 li
216.873 83.6031 li
216.028 82.9702 li
217.084 82.9702 li
217.402 82.1252 li
cp
@
222.257 90.3592 mo
222.467 91.2042 li
223.523 91.2042 li
222.678 91.8372 li
222.995 92.7872 li
222.257 92.1542 li
221.411 92.7872 li
221.727 91.8372 li
220.884 91.2042 li
221.939 91.2042 li
222.257 90.3592 li
ef
222.257 90.3592 mo
222.467 91.2042 li
223.523 91.2042 li
222.678 91.8372 li
222.995 92.7872 li
222.257 92.1542 li
221.411 92.7872 li
221.727 91.8372 li
220.884 91.2042 li
221.939 91.2042 li
222.257 90.3592 li
cp
@
228.061 102.289 mo
228.272 103.133 li
229.328 103.133 li
228.482 103.766 li
228.801 104.717 li
228.061 104.083 li
227.218 104.717 li
227.534 103.766 li
226.689 103.133 li
227.744 103.133 li
228.061 102.289 li
ef
228.061 102.289 mo
228.272 103.133 li
229.328 103.133 li
228.482 103.766 li
228.801 104.717 li
228.061 104.083 li
227.218 104.717 li
227.534 103.766 li
226.689 103.133 li
227.744 103.133 li
228.061 102.289 li
cp
@
234.289 107.989 mo
234.501 108.833 li
235.555 108.833 li
234.711 109.467 li
235.027 110.417 li
234.289 109.784 li
233.444 110.417 li
233.762 109.467 li
232.916 108.833 li
233.972 108.833 li
234.289 107.989 li
ef
234.289 107.989 mo
234.501 108.833 li
235.555 108.833 li
234.711 109.467 li
235.027 110.417 li
234.289 109.784 li
233.444 110.417 li
233.762 109.467 li
232.916 108.833 li
233.972 108.833 li
234.289 107.989 li
cp
@
243.154 114.956 mo
243.366 115.801 li
244.422 115.801 li
243.578 116.434 li
243.894 117.384 li
243.154 116.75 li
242.31 117.384 li
242.628 116.434 li
241.782 115.801 li
242.84 115.801 li
243.154 114.956 li
ef
243.154 114.956 mo
243.366 115.801 li
244.422 115.801 li
243.578 116.434 li
243.894 117.384 li
243.154 116.75 li
242.31 117.384 li
242.628 116.434 li
241.782 115.801 li
242.84 115.801 li
243.154 114.956 li
cp
@
251.599 119.391 mo
251.809 120.235 li
252.866 120.235 li
252.02 120.868 li
252.339 121.818 li
251.599 121.185 li
250.756 121.818 li
251.072 120.868 li
250.226 120.235 li
251.283 120.235 li
251.599 119.391 li
ef
251.599 119.391 mo
251.809 120.235 li
252.866 120.235 li
252.02 120.868 li
252.339 121.818 li
251.599 121.185 li
250.756 121.818 li
251.072 120.868 li
250.226 120.235 li
251.283 120.235 li
251.599 119.391 li
cp
@
259.41 120.552 mo
259.621 121.396 li
260.677 121.396 li
259.832 122.029 li
260.148 122.98 li
259.41 122.346 li
258.565 122.98 li
258.882 122.029 li
258.038 121.396 li
259.093 121.396 li
259.41 120.552 li
ef
259.41 120.552 mo
259.621 121.396 li
260.677 121.396 li
259.832 122.029 li
260.148 122.98 li
259.41 122.346 li
258.565 122.98 li
258.882 122.029 li
258.038 121.396 li
259.093 121.396 li
259.41 120.552 li
cp
@
271.231 123.719 mo
271.441 124.563 li
272.499 124.563 li
271.654 125.196 li
271.97 126.147 li
271.231 125.513 li
270.386 126.147 li
270.704 125.196 li
269.859 124.563 li
270.916 124.563 li
271.231 123.719 li
ef
271.231 123.719 mo
271.441 124.563 li
272.499 124.563 li
271.654 125.196 li
271.97 126.147 li
271.231 125.513 li
270.386 126.147 li
270.704 125.196 li
269.859 124.563 li
270.916 124.563 li
271.231 123.719 li
cp
@
gsave
89.579 7.80518 mo
279.676 7.80518 li
279.676 134.064 li
89.579 134.064 li
cp
eclp
268.276 124.035 mo
268.699 124.035 li
268.487 124.035 mo
268.487 125.091 li
268.276 123.719 mo
268.699 123.719 li
268.487 123.719 mo
268.487 122.558 li
256.243 120.34 mo
256.665 120.34 li
256.455 120.34 mo
256.455 121.396 li
256.243 119.812 mo
256.665 119.812 li
256.455 119.812 mo
256.455 118.862 li
244.633 115.379 mo
245.054 115.379 li
244.843 115.379 mo
244.843 116.329 li
244.633 114.746 mo
245.054 114.746 li
244.843 114.746 mo
244.843 113.795 li
237.034 111.473 mo
237.456 111.473 li
237.244 111.473 mo
237.244 112.528 li
237.034 111.05 mo
237.456 111.05 li
237.244 111.05 mo
237.244 109.994 li
228.905 103.977 mo
229.328 103.977 li
229.117 103.977 mo
229.117 104.927 li
228.905 103.449 mo
229.328 103.449 li
229.117 103.449 mo
229.117 102.394 li
219.09 92.7872 mo
219.511 92.7872 li
219.302 92.7872 mo
219.302 93.6321 li
219.09 91.8372 mo
219.511 91.8372 li
219.302 91.8372 mo
219.302 91.0981 li
212.968 82.6531 mo
213.389 82.6531 li
213.179 82.6531 mo
213.179 82.8641 li
212.968 80.6462 mo
213.389 80.6462 li
213.179 80.6462 mo
213.179 80.3301 li
208.323 68.9291 mo
208.745 68.9291 li
208.535 68.9291 mo
208.535 69.6682 li
208.323 67.7672 mo
208.745 67.7672 li
208.535 67.7672 mo
208.535 67.1342 li
203.679 58.0552 mo
204.101 58.0552 li
203.889 58.0552 mo
203.889 58.2672 li
203.679 55.9442 mo
204.101 55.9442 li
203.889 55.9442 mo
203.889 55.7332 li
198.613 45.9152 mo
199.035 45.9152 li
198.825 45.9152 mo
198.825 46.3381 li
198.613 44.1212 mo
199.035 44.1212 li
198.825 44.1212 mo
198.825 43.8041 li
195.024 35.3582 mo
195.446 35.3582 li
195.235 35.3582 mo
195.235 34.9352 li
195.024 31.9802 mo
195.446 31.9802 li
195.235 31.9802 mo
195.235 32.4022 li
192.597 35.0411 mo
193.018 35.0411 li
192.806 35.0411 mo
192.806 34.9352 li
192.597 32.2972 mo
193.018 32.2972 li
192.806 32.2972 mo
192.806 32.4022 li
189.429 37.1531 mo
189.851 37.1531 li
189.64 37.1531 mo
189.64 37.4692 li
189.429 35.2532 mo
189.851 35.2532 li
189.64 35.2532 mo
189.64 34.9352 li
184.574 35.2532 mo
184.997 35.2532 li
184.785 35.2532 mo
184.785 35.5702 li
184.574 33.3522 mo
184.997 33.3522 li
184.785 33.3522 mo
184.785 33.0361 li
181.408 42.8542 mo
181.83 42.8542 li
181.62 42.8542 mo
181.62 42.5372 li
181.408 39.5812 mo
181.83 39.5812 li
181.62 39.5812 mo
181.62 40.0032 li
178.03 48.1321 mo
178.452 48.1321 li
178.242 48.1321 mo
178.242 48.1321 li
178.03 45.7042 mo
178.452 45.7042 li
178.242 45.7042 mo
178.242 45.5981 li
174.865 55.5222 mo
175.286 55.5222 li
175.075 55.5222 mo
175.075 55.7332 li
174.865 53.4102 mo
175.286 53.4102 li
175.075 53.4102 mo
175.075 53.1992 li
170.431 67.4512 mo
170.853 67.4512 li
170.643 67.4512 mo
170.643 67.7672 li
170.431 65.5511 mo
170.853 65.5511 li
170.643 65.5511 mo
170.643 65.2342 li
168.32 73.9962 mo
168.743 73.9962 li
168.531 73.9962 mo
168.531 73.3622 li
168.32 70.3011 mo
168.743 70.3011 li
168.531 70.3011 mo
168.531 70.8292 li
163.465 86.5582 mo
163.886 86.5582 li
163.676 86.5582 mo
163.676 86.6642 li
163.465 84.2361 mo
163.886 84.2361 li
163.676 84.2361 mo
163.676 84.1302 li
159.981 85.8202 mo
160.404 85.8202 li
160.193 85.8202 mo
160.193 86.0312 li
159.981 83.7082 mo
160.404 83.7082 li
160.193 83.7082 mo
160.193 83.4971 li
156.603 93.2092 mo
157.026 93.2092 li
156.815 93.2092 mo
156.815 92.9982 li
156.603 90.1481 mo
157.026 90.1481 li
156.815 90.1481 mo
156.815 90.4651 li
151.22 91.2042 mo
151.643 91.2042 li
151.431 91.2042 mo
151.431 90.4651 li
151.22 87.1921 mo
151.643 87.1921 li
151.431 87.1921 mo
151.431 87.9322 li
148.16 91.2042 mo
148.582 91.2042 li
148.37 91.2042 mo
148.37 91.7311 li
148.16 89.6202 mo
148.582 89.6202 li
148.37 89.6202 mo
148.37 89.1982 li
143.41 92.6822 mo
143.832 92.6822 li
143.621 92.6822 mo
143.621 92.9982 li
143.41 90.7812 mo
143.832 90.7812 li
143.621 90.7812 mo
143.621 90.4651 li
140.876 95.3212 mo
141.299 95.3212 li
141.088 95.3212 mo
141.088 95.5322 li
140.876 93.1042 mo
141.299 93.1042 li
141.088 93.1042 mo
141.088 92.9982 li
133.805 111.473 mo
134.227 111.473 li
134.016 111.473 mo
134.016 109.362 li
133.805 104.717 mo
134.227 104.717 li
134.016 104.717 mo
134.016 106.828 li
132.221 111.05 mo
132.643 111.05 li
132.432 111.05 mo
132.432 109.994 li
132.221 106.405 mo
132.643 106.405 li
132.432 106.405 mo
132.432 107.461 li
128.738 125.408 mo
129.16 125.408 li
128.949 125.408 mo
128.949 122.029 li
128.738 116.012 mo
129.16 116.012 li
128.949 116.012 mo
128.949 119.496 li
125.256 130.791 mo
125.677 130.791 li
125.466 130.791 mo
125.466 129.525 li
125.256 125.724 mo
125.677 125.724 li
125.466 125.724 mo
125.466 126.991 li
120.083 131.425 mo
120.505 131.425 li
120.294 131.425 mo
120.294 130.158 li
120.083 126.463 mo
120.505 126.463 li
120.294 126.463 mo
120.294 127.624 li
117.867 137.654 mo
117.867 135.225 li
117.656 130.264 mo
118.077 130.264 li
117.867 130.264 mo
117.867 132.692 li
115.122 135.014 mo
115.545 135.014 li
115.334 135.014 mo
115.334 132.058 li
115.122 126.568 mo
115.545 126.568 li
115.334 126.568 mo
115.334 129.525 li
110.478 131.953 mo
110.9 131.953 li
110.689 131.953 mo
110.689 130.158 li
110.478 125.83 mo
110.9 125.83 li
110.689 125.83 mo
110.689 127.624 li
103.195 130.264 mo
103.618 130.264 li
103.406 130.264 mo
103.406 127.624 li
103.195 122.452 mo
103.618 122.452 li
103.406 122.452 mo
103.406 125.091 li
96.545 137.125 mo
96.545 133.325 li
96.334 126.991 mo
96.757 126.991 li
96.545 126.991 mo
96.545 130.791 li
91.901 130.053 mo
92.323 130.053 li
92.112 130.053 mo
92.112 128.258 li
91.901 124.035 mo
92.323 124.035 li
92.112 124.035 mo
92.112 125.724 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
280.625 129.313 mo
281.048 129.313 li
280.837 129.313 mo
280.837 130.475 li
280.625 128.469 mo
281.048 128.469 li
280.837 128.469 mo
280.837 127.308 li
272.287 125.408 mo
272.71 125.408 li
272.499 125.408 mo
272.499 126.674 li
272.287 124.879 mo
272.71 124.879 li
272.499 124.879 mo
272.499 123.507 li
257.3 121.079 mo
257.72 121.079 li
257.51 121.079 mo
257.51 122.346 li
257.3 120.446 mo
257.72 120.446 li
257.51 120.446 mo
257.51 119.179 li
248.643 118.545 mo
249.065 118.545 li
248.855 118.545 mo
248.855 119.812 li
248.643 117.807 mo
249.065 117.807 li
248.855 117.807 mo
248.855 116.645 li
244.739 117.384 mo
245.161 117.384 li
244.949 117.384 mo
244.949 118.545 li
244.739 116.434 mo
245.161 116.434 li
244.949 116.434 mo
244.949 115.379 li
240.305 116.012 mo
240.727 116.012 li
240.517 116.012 mo
240.517 117.279 li
240.305 115.379 mo
240.727 115.379 li
240.517 115.379 mo
240.517 114.112 li
230.066 107.567 mo
230.489 107.567 li
230.279 107.567 mo
230.279 108.411 li
230.066 106.089 mo
230.489 106.089 li
230.279 106.089 mo
230.279 105.244 li
224.682 101.972 mo
225.105 101.972 li
224.895 101.972 mo
224.895 102.71 li
224.682 100.388 mo
225.105 100.388 li
224.895 100.388 mo
224.895 99.5432 li
219.302 90.6752 mo
219.723 90.6752 li
219.511 90.6752 mo
219.511 91.4142 li
219.302 88.9872 mo
219.723 88.9872 li
219.511 88.9872 mo
219.511 88.2471 li
217.402 87.1921 mo
217.824 87.1921 li
217.612 87.1921 mo
217.612 87.6152 li
217.402 84.8691 mo
217.824 84.8691 li
217.612 84.8691 mo
217.612 84.4482 li
212.968 80.8582 mo
213.389 80.8582 li
213.179 80.8582 mo
213.179 81.2812 li
212.968 78.5352 mo
213.389 78.5352 li
213.179 78.5352 mo
213.179 78.1132 li
210.751 76.3192 mo
211.173 76.3192 li
210.963 76.3192 mo
210.963 76.2131 li
210.751 72.9412 mo
211.173 72.9412 li
210.963 72.9412 mo
210.963 73.0461 li
205.896 59.7452 mo
206.318 59.7452 li
206.107 59.7452 mo
206.107 60.4842 li
205.896 58.0552 mo
206.318 58.0552 li
206.107 58.0552 mo
206.107 57.3162 li
202.625 53.9382 mo
203.045 53.9382 li
202.835 53.9382 mo
202.835 54.1492 li
202.625 51.1942 mo
203.045 51.1942 li
202.835 51.1942 mo
202.835 50.9822 li
199.352 49.7162 mo
199.773 49.7162 li
199.563 49.7162 mo
199.563 50.3492 li
199.352 47.9211 mo
199.773 47.9211 li
199.563 47.9211 mo
199.563 47.1822 li
196.502 41.5872 mo
196.925 41.5872 li
196.713 41.5872 mo
196.713 41.5872 li
196.502 38.4192 mo
196.925 38.4192 li
196.713 38.4192 mo
196.713 38.4192 li
191.858 37.6812 mo
192.28 37.6812 li
192.068 37.6812 mo
192.068 38.4192 li
191.858 35.9922 mo
192.28 35.9922 li
192.068 35.9922 mo
192.068 35.2532 li
188.903 35.7812 mo
189.326 35.7812 li
189.114 35.7812 mo
189.114 35.8862 li
188.903 32.8251 mo
189.326 32.8251 li
189.114 32.8251 mo
189.114 32.7192 li
184.68 38.4192 mo
185.103 38.4192 li
184.891 38.4192 mo
184.891 39.0532 li
184.68 36.5192 mo
185.103 36.5192 li
184.891 36.5192 mo
184.891 35.8862 li
182.042 44.8592 mo
182.465 44.8592 li
182.253 44.8592 mo
182.253 45.3882 li
182.042 42.6422 mo
182.465 42.6422 li
182.253 42.6422 mo
182.253 42.2202 li
177.398 52.8832 mo
177.819 52.8832 li
177.608 52.8832 mo
177.608 53.5162 li
177.398 51.0881 mo
177.819 51.0881 li
177.608 51.0881 mo
177.608 50.3492 li
175.286 56.1562 mo
175.708 56.1562 li
175.498 56.1562 mo
175.498 54.7822 li
175.286 50.2432 mo
175.708 50.2432 li
175.498 50.2432 mo
175.498 51.6152 li
170.643 72.5182 mo
171.064 72.5182 li
170.853 72.5182 mo
170.853 73.0461 li
170.643 70.5132 mo
171.064 70.5132 li
170.853 70.5132 mo
170.853 69.8782 li
167.16 78.2192 mo
167.582 78.2192 li
167.37 78.2192 mo
167.37 78.7462 li
167.16 76.1082 mo
167.582 76.1082 li
167.37 76.1082 mo
167.37 75.5792 li
163.676 86.8752 mo
164.097 86.8752 li
163.886 86.8752 mo
163.886 86.9811 li
163.676 83.9192 mo
164.097 83.9192 li
163.886 83.9192 mo
163.886 83.8141 li
158.081 92.4702 mo
158.504 92.4702 li
158.292 92.4702 mo
158.292 91.4142 li
158.081 87.0862 mo
158.504 87.0862 li
158.292 87.0862 mo
158.292 88.2471 li
155.231 86.2422 mo
155.654 86.2422 li
155.443 86.2422 mo
155.443 86.9811 li
155.231 84.5532 mo
155.654 84.5532 li
155.443 84.5532 mo
155.443 83.8141 li
150.482 87.5082 mo
150.904 87.5082 li
150.693 87.5082 mo
150.693 88.2471 li
150.482 85.8202 mo
150.904 85.8202 li
150.693 85.8202 mo
150.693 85.0801 li
147.948 87.1921 mo
148.37 87.1921 li
148.16 87.1921 mo
148.16 87.6152 li
147.948 84.8691 mo
148.37 84.8691 li
148.16 84.8691 mo
148.16 84.4482 li
141.299 95.2151 mo
141.721 95.2151 li
141.51 95.2151 mo
141.51 92.0482 li
141.299 85.7142 mo
141.721 85.7142 li
141.51 85.7142 mo
141.51 88.8812 li
139.399 102.394 mo
139.82 102.394 li
139.61 102.394 mo
139.61 102.077 li
139.399 98.5942 mo
139.82 98.5942 li
139.61 98.5942 mo
139.61 98.9102 li
135.599 116.54 mo
136.021 116.54 li
135.81 116.54 mo
135.81 113.478 li
135.599 107.25 mo
136.021 107.25 li
135.81 107.25 mo
135.81 110.311 li
132.116 124.457 mo
132.538 124.457 li
132.327 124.457 mo
132.327 123.507 li
132.116 119.496 mo
132.538 119.496 li
132.327 119.496 mo
132.327 120.34 li
127.471 126.358 mo
127.894 126.358 li
127.683 126.358 mo
127.683 124.141 li
127.471 118.862 mo
127.894 118.862 li
127.683 118.862 mo
127.683 120.974 li
125.256 128.258 mo
125.677 128.258 li
125.466 128.258 mo
125.466 127.308 li
125.256 123.296 mo
125.677 123.296 li
125.466 123.296 mo
125.466 124.141 li
121.772 126.78 mo
122.194 126.78 li
121.983 126.78 mo
121.983 124.141 li
121.772 118.334 mo
122.194 118.334 li
121.983 118.334 mo
121.983 120.974 li
117.127 129.525 mo
117.55 129.525 li
117.339 129.525 mo
117.339 127.942 li
117.127 123.296 mo
117.55 123.296 li
117.339 123.296 mo
117.339 124.774 li
110.9 124.352 mo
111.322 124.352 li
111.112 124.352 mo
111.112 123.507 li
110.9 119.602 mo
111.322 119.602 li
111.112 119.602 mo
111.112 120.34 li
102.878 129.525 mo
103.3 129.525 li
103.089 129.525 mo
103.089 126.041 li
102.878 119.496 mo
103.3 119.496 li
103.089 119.496 mo
103.089 122.874 li
98.551 127.942 mo
98.973 127.942 li
98.761 127.942 mo
98.761 126.041 li
98.551 121.079 mo
98.973 121.079 li
98.761 121.079 mo
98.761 122.874 li
88.313 126.358 mo
88.734 126.358 li
88.524 126.358 mo
88.524 125.408 li
88.313 121.396 mo
88.734 121.396 li
88.524 121.396 mo
88.524 122.241 li
.95346 .916228 .0104982 .0011902 cmyk
@
271.019 125.302 mo
271.441 125.302 li
271.231 125.302 mo
271.231 126.463 li
271.019 124.985 mo
271.441 124.985 li
271.231 124.985 mo
271.231 123.719 li
259.2 122.241 mo
259.621 122.241 li
259.41 122.241 mo
259.41 123.296 li
259.2 121.712 mo
259.621 121.712 li
259.41 121.712 mo
259.41 120.552 li
251.387 120.868 mo
251.809 120.868 li
251.599 120.868 mo
251.599 122.135 li
251.387 120.552 mo
251.809 120.552 li
251.599 120.552 mo
251.599 119.391 li
242.943 116.434 mo
243.366 116.434 li
243.154 116.434 mo
243.154 117.701 li
242.943 116.118 mo
243.366 116.118 li
243.154 116.118 mo
243.154 114.956 li
234.078 109.889 mo
234.501 109.889 li
234.289 109.889 mo
234.289 110.734 li
234.078 108.833 mo
234.501 108.833 li
234.289 108.833 mo
234.289 107.989 li
227.849 104.294 mo
228.272 104.294 li
228.061 104.294 mo
228.061 105.033 li
227.849 103.133 mo
228.272 103.133 li
228.061 103.133 mo
228.061 102.289 li
222.045 92.0482 mo
222.467 92.0482 li
222.257 92.0482 mo
222.257 93.1042 li
222.045 91.3091 mo
222.467 91.3091 li
222.257 91.3091 mo
222.257 90.3592 li
217.19 84.3422 mo
217.612 84.3422 li
217.402 84.3422 mo
217.402 84.8691 li
217.19 82.6531 mo
217.612 82.6531 li
217.402 82.6531 mo
217.402 82.1252 li
213.283 78.1132 mo
213.706 78.1132 li
213.495 78.1132 mo
213.495 78.5352 li
213.283 76.3192 mo
213.706 76.3192 li
213.495 76.3192 mo
213.495 75.7911 li
210.434 68.7181 mo
210.857 68.7181 li
210.644 68.7181 mo
210.644 69.1401 li
210.434 66.7112 mo
210.857 66.7112 li
210.644 66.7112 mo
210.644 66.3951 li
206.318 59.1111 mo
206.74 59.1111 li
206.528 59.1111 mo
206.528 59.6392 li
206.318 57.4222 mo
206.74 57.4222 li
206.528 57.4222 mo
206.528 56.8942 li
202.835 53.9382 mo
203.257 53.9382 li
203.045 53.9382 mo
203.045 54.5721 li
202.835 52.4601 mo
203.257 52.4601 li
203.045 52.4601 mo
203.045 51.8271 li
199.141 44.8592 mo
199.563 44.8592 li
199.352 44.8592 mo
199.352 45.1761 li
199.141 42.6422 mo
199.563 42.6422 li
199.352 42.6422 mo
199.352 42.4312 li
196.395 39.7922 mo
196.819 39.7922 li
196.607 39.7922 mo
196.607 40.1092 li
196.395 37.6812 mo
196.819 37.6812 li
196.607 37.6812 mo
196.607 37.3641 li
192.491 40.5312 mo
192.912 40.5312 li
192.703 40.5312 mo
192.703 40.7422 li
192.491 38.1031 mo
192.912 38.1031 li
192.703 38.1031 mo
192.703 37.9971 li
188.375 34.4092 mo
188.797 34.4092 li
188.585 34.4092 mo
188.585 35.0411 li
188.375 32.9312 mo
188.797 32.9312 li
188.585 32.9312 mo
188.585 32.2972 li
184.891 41.7982 mo
185.313 41.7982 li
185.103 41.7982 mo
185.103 42.0092 li
184.891 39.3702 mo
185.313 39.3702 li
185.103 39.3702 mo
185.103 39.2642 li
182.465 44.5432 mo
182.885 44.5432 li
182.675 44.5432 mo
182.675 45.1761 li
182.465 42.9592 mo
182.885 42.9592 li
182.675 42.9592 mo
182.675 42.4312 li
177.503 53.8332 mo
177.925 53.8332 li
177.713 53.8332 mo
177.713 53.9382 li
177.503 51.4052 mo
177.925 51.4052 li
177.713 51.4052 mo
177.713 51.1942 li
174.652 66.6061 mo
175.075 66.6061 li
174.865 66.6061 mo
174.865 66.6061 li
174.652 63.8622 mo
175.075 63.8622 li
174.865 63.8622 mo
174.865 63.8622 li
170.326 75.4742 mo
170.747 75.4742 li
170.536 75.4742 mo
170.536 75.3691 li
170.326 72.6241 mo
170.747 72.6241 li
170.536 72.6241 mo
170.536 72.6241 li
167.897 87.4031 mo
168.32 87.4031 li
168.107 87.4031 mo
168.107 85.5032 li
167.897 80.8582 mo
168.32 80.8582 li
168.107 80.8582 mo
168.107 82.7582 li
160.931 85.6092 mo
161.353 85.6092 li
161.143 85.6092 mo
161.143 86.1371 li
160.931 83.9192 mo
161.353 83.9192 li
161.143 83.9192 mo
161.143 83.3922 li
158.82 82.8641 mo
159.242 82.8641 li
159.031 82.8641 mo
159.031 82.9702 li
158.82 80.3301 mo
159.242 80.3301 li
159.031 80.3301 mo
159.031 80.2252 li
154.704 84.8691 mo
155.126 84.8691 li
154.915 84.8691 mo
154.915 85.5032 li
154.704 83.3922 mo
155.126 83.3922 li
154.915 83.3922 mo
154.915 82.7582 li
151.96 80.1191 mo
152.381 80.1191 li
152.17 80.1191 mo
152.17 78.5352 li
151.96 74.3121 mo
152.381 74.3121 li
152.17 74.3121 mo
152.17 75.7911 li
145.204 94.3712 mo
145.626 94.3712 li
145.415 94.3712 mo
145.415 93.7372 li
145.204 90.3592 mo
145.626 90.3592 li
145.415 90.3592 mo
145.415 90.9932 li
142.671 100.599 mo
143.093 100.599 li
142.882 100.599 mo
142.882 99.3322 li
142.671 95.4272 mo
143.093 95.4272 li
142.882 95.4272 mo
142.882 96.5872 li
137.816 108.517 mo
138.238 108.517 li
138.026 108.517 mo
138.026 107.567 li
137.816 103.977 mo
138.238 103.977 li
138.026 103.977 mo
138.026 104.821 li
134.86 111.367 mo
135.282 111.367 li
135.071 111.367 mo
135.071 109.467 li
134.86 104.821 mo
135.282 104.821 li
135.071 104.821 mo
135.071 106.722 li
131.694 108.2 mo
132.116 108.2 li
131.905 108.2 mo
131.905 107.567 li
131.694 104.188 mo
132.116 104.188 li
131.905 104.188 mo
131.905 104.821 li
127.894 125.408 mo
128.316 125.408 li
128.105 125.408 mo
128.105 123.93 li
127.894 119.812 mo
128.316 119.812 li
128.105 119.812 mo
128.105 121.185 li
123.672 127.942 mo
124.094 127.942 li
123.883 127.942 mo
123.883 122.769 li
123.672 114.746 mo
124.094 114.746 li
123.883 114.746 mo
123.883 120.023 li
120.083 134.803 mo
120.505 134.803 li
120.294 134.803 mo
120.294 130.897 li
120.083 124.352 mo
120.505 124.352 li
120.294 124.352 mo
120.294 128.152 li
117.444 134.698 mo
117.867 134.698 li
117.656 134.698 mo
117.656 134.064 li
117.444 130.791 mo
117.867 130.791 li
117.656 130.791 mo
117.656 131.32 li
113.855 121.396 mo
114.278 121.396 li
114.067 121.396 mo
114.067 119.602 li
113.855 114.956 mo
114.278 114.956 li
114.067 114.956 mo
114.067 116.856 li
109.95 135.437 mo
110.372 135.437 li
110.162 135.437 mo
110.162 130.897 li
109.95 123.719 mo
110.372 123.719 li
110.162 123.719 mo
110.162 128.152 li
105.834 130.686 mo
106.256 130.686 li
106.045 130.686 mo
106.045 127.73 li
105.834 122.135 mo
106.256 122.135 li
106.045 122.135 mo
106.045 124.985 li
102.562 129.208 mo
102.984 129.208 li
102.773 129.208 mo
102.773 127.73 li
102.562 123.613 mo
102.984 123.613 li
102.773 123.613 mo
102.773 124.985 li
95.7 130.897 mo
96.123 130.897 li
95.912 130.897 mo
95.912 129.63 li
95.7 125.724 mo
96.123 125.724 li
95.912 125.724 mo
95.912 126.886 li
91.796 130.475 mo
92.217 130.475 li
92.007 130.475 mo
92.007 129.63 li
91.796 126.147 mo
92.217 126.147 li
92.007 126.147 mo
92.007 126.886 li
88.313 136.281 mo
88.313 134.064 li
88.101 129.102 mo
88.524 129.102 li
88.313 129.102 mo
88.313 131.32 li
.839353 .0960403 .972992 .00726329 cmyk
@
.528 lw
281.048 129.736 mo
281.26 129.736 li
277.881 129.63 mo
278.62 129.63 li
276.509 129.63 mo
277.881 129.63 li
276.509 129.63 mo
276.509 129.63 li
273.237 129.63 mo
274.081 129.63 li
271.97 129.736 mo
273.237 129.63 li
268.593 129.841 mo
269.543 129.841 li
267.432 129.841 mo
268.593 129.841 li
264.898 129.841 mo
265.004 129.841 li
263.948 129.736 mo
264.898 129.841 li
262.893 129.63 mo
263.948 129.736 li
260.254 129.313 mo
260.465 129.313 li
259.303 129.208 mo
260.254 129.313 li
258.354 128.997 mo
259.303 129.208 li
255.505 128.152 mo
255.927 128.258 li
254.555 127.836 mo
255.505 128.152 li
253.816 127.519 mo
254.555 127.836 li
250.86 126.041 mo
251.387 126.358 li
249.91 125.513 mo
250.86 126.041 li
249.277 125.196 mo
249.91 125.513 li
246.217 122.98 mo
246.849 123.507 li
245.265 122.241 mo
246.217 122.98 li
244.739 121.818 mo
245.265 122.241 li
241.571 118.968 mo
242.31 119.707 li
240.621 117.913 mo
241.571 118.968 li
240.411 117.596 mo
240.621 117.913 li
236.927 113.373 mo
238.3 115.167 li
236.717 113.057 mo
236.927 113.373 li
234.501 110.206 mo
234.816 110.628 li
233.551 108.728 mo
234.501 110.206 li
233.444 108.517 mo
233.551 108.728 li
231.226 104.821 mo
231.966 106.089 li
230.805 103.977 mo
231.226 104.821 li
228.905 100.599 mo
229.433 101.549 li
228.379 99.4382 mo
228.905 100.599 li
226.689 95.7432 mo
227.218 97.0101 li
226.266 94.8981 mo
226.689 95.7432 li
224.367 90.3592 mo
225.211 92.4702 li
224.367 90.3592 mo
224.367 90.3592 li
222.995 87.0862 mo
223.311 87.9322 li
222.467 85.8202 mo
222.995 87.0862 li
220.779 81.2812 mo
221.624 83.3922 li
219.723 78.2192 mo
219.934 78.8522 li
219.195 76.7411 mo
219.723 78.2192 li
217.612 72.2021 mo
218.35 74.3121 li
216.135 67.6622 mo
216.766 69.7731 li
215.079 64.4952 mo
215.29 65.2342 li
214.551 63.1221 mo
215.079 64.4952 li
213.706 60.4842 mo
213.706 60.6942 li
213.073 58.5832 mo
213.706 60.4842 li
211.489 54.0442 mo
212.228 56.1562 li
210.329 50.3492 mo
210.751 51.6152 li
210.011 49.5042 mo
210.329 50.3492 li
208.957 46.4432 mo
209.168 47.0762 li
208.323 44.9651 mo
208.957 46.4432 li
206.635 40.4261 mo
207.374 42.5372 li
206.635 40.4261 mo
206.635 40.4261 li
204.524 35.8862 mo
205.58 37.9971 li
201.885 31.6631 mo
203.151 33.4582 li
201.567 31.3472 mo
201.885 31.6631 li
198.613 29.5522 mo
199.141 29.6581 li
197.241 29.7632 mo
198.613 29.5522 li
197.029 29.8691 mo
197.241 29.7632 li
193.968 32.8251 mo
194.707 31.8741 li
193.336 33.9861 mo
193.968 32.8251 li
191.646 37.4692 mo
192.068 36.4142 li
191.224 38.5251 mo
191.646 37.4692 li
189.429 43.0652 mo
190.168 40.9542 li
187.952 47.6042 mo
188.69 45.4932 li
187.003 50.8771 mo
187.214 50.0322 li
186.58 52.1442 mo
187.003 50.8771 li
185.631 55.4161 mo
185.843 54.5721 li
185.207 56.6832 mo
185.631 55.4161 li
183.942 61.2231 mo
184.468 59.1111 li
182.675 65.7621 mo
183.203 63.6501 li
181.302 70.3011 mo
181.935 68.1902 li
180.035 74.6302 mo
180.564 72.7292 li
179.929 74.8401 mo
180.035 74.6302 li
178.664 78.8522 mo
179.191 77.2692 li
178.452 79.3802 mo
178.664 78.8522 li
176.763 83.9192 mo
177.608 81.8082 li
175.286 87.1921 mo
175.708 86.3481 li
174.652 88.4582 mo
175.286 87.1921 li
172.965 91.5201 mo
173.385 90.8871 li
172.014 92.9982 mo
172.965 91.5201 li
169.165 95.4272 mo
169.691 95.1092 li
168.214 95.8492 mo
169.165 95.4272 li
167.582 96.0591 mo
168.214 95.8492 li
164.52 95.5322 mo
165.153 95.8492 li
163.57 95.0042 mo
164.52 95.5322 li
163.042 94.5822 mo
163.57 95.0042 li
159.875 91.9432 mo
160.614 92.6822 li
158.926 90.9932 mo
159.875 91.9432 li
158.504 90.5702 mo
158.926 90.9932 li
155.231 87.0862 mo
156.287 88.1422 li
154.281 86.2422 mo
155.231 87.0862 li
154.176 86.1371 mo
154.281 86.2422 li
150.587 83.6031 mo
151.748 84.2361 li
149.637 83.2861 mo
150.587 83.6031 li
149.637 83.2861 mo
149.637 83.2861 li
145.837 83.1812 mo
147.21 82.9702 li
145.099 83.6031 mo
145.837 83.1812 li
142.566 85.0801 mo
142.671 84.9752 li
141.193 86.3481 mo
142.566 85.0801 li
140.666 86.9811 mo
141.193 86.3481 li
137.921 90.5702 mo
138.766 89.4092 li
137.288 91.5201 mo
137.921 90.5702 li
135.599 94.2651 mo
135.81 93.9492 li
134.544 96.0591 mo
135.599 94.2651 li
131.905 100.599 mo
133.171 98.4882 li
131.905 100.599 mo
131.905 100.599 li
129.583 104.505 mo
130.532 103.027 li
129.266 105.139 mo
129.583 104.505 li
127.26 108.306 mo
127.788 107.567 li
126.416 109.678 mo
127.26 108.306 li
123.883 113.267 mo
124.727 112.106 li
123.25 114.217 mo
123.883 113.267 li
120.189 118.018 mo
121.349 116.645 li
119.45 118.757 mo
120.189 118.018 li
116.917 121.29 mo
117.022 121.185 li
115.545 122.558 mo
116.917 121.29 li
114.911 122.98 mo
115.545 122.558 li
112.272 124.774 mo
112.484 124.563 li
110.9 125.724 mo
112.272 124.774 li
110.372 125.936 mo
110.9 125.724 li
107.628 127.203 mo
107.945 127.097 li
106.256 127.836 mo
107.628 127.203 li
105.834 128.047 mo
106.256 127.836 li
102.878 128.892 mo
103.406 128.786 li
101.506 129.208 mo
102.878 128.892 li
101.295 129.313 mo
101.506 129.208 li
98.234 129.946 mo
98.867 129.841 li
96.862 130.158 mo
98.234 129.946 li
96.757 130.158 mo
96.862 130.158 li
93.59 130.686 mo
94.329 130.581 li
92.217 130.897 mo
93.59 130.686 li
92.217 130.897 mo
92.217 130.897 li
88.945 131.214 mo
89.79 131.108 li
87.679 131.32 mo
88.945 131.214 li
.694423 .677272 .637385 .738643 cmyk
@
grestore
91.977 273.594 mo
91.977 274.234 91.457 274.755 90.816 274.755 cv
90.174 274.755 89.655 274.234 89.655 273.594 cv
89.655 272.954 90.174 272.433 90.816 272.433 cv
91.457 272.433 91.977 272.954 91.977 273.594 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
ef
91.977 273.594 mo
91.977 274.234 91.457 274.755 90.816 274.755 cv
90.174 274.755 89.655 274.234 89.655 273.594 cv
89.655 272.954 90.174 272.433 90.816 272.433 cv
91.457 272.433 91.977 272.954 91.977 273.594 cv
cp
@
101.301 268.493 mo
101.301 269.133 100.781 269.653 100.14 269.653 cv
99.5 269.653 98.979 269.133 98.979 268.493 cv
98.979 267.851 99.5 267.332 100.14 267.332 cv
100.781 267.332 101.301 267.851 101.301 268.493 cv
ef
101.301 268.493 mo
101.301 269.133 100.781 269.653 100.14 269.653 cv
99.5 269.653 98.979 269.133 98.979 268.493 cv
98.979 267.851 99.5 267.332 100.14 267.332 cv
100.781 267.332 101.301 267.851 101.301 268.493 cv
cp
@
109.042 268.493 mo
109.042 269.133 108.522 269.653 107.881 269.653 cv
107.24 269.653 106.72 269.133 106.72 268.493 cv
106.72 267.851 107.24 267.332 107.881 267.332 cv
108.522 267.332 109.042 267.851 109.042 268.493 cv
ef
109.042 268.493 mo
109.042 269.133 108.522 269.653 107.881 269.653 cv
107.24 269.653 106.72 269.133 106.72 268.493 cv
106.72 267.851 107.24 267.332 107.881 267.332 cv
108.522 267.332 109.042 267.851 109.042 268.493 cv
cp
@
112.737 262.334 mo
112.737 262.976 112.216 263.497 111.575 263.497 cv
110.935 263.497 110.414 262.976 110.414 262.334 cv
110.414 261.694 110.935 261.173 111.575 261.173 cv
112.216 261.173 112.737 261.694 112.737 262.334 cv
ef
112.737 262.334 mo
112.737 262.976 112.216 263.497 111.575 263.497 cv
110.935 263.497 110.414 262.976 110.414 262.334 cv
110.414 261.694 110.935 261.173 111.575 261.173 cv
112.216 261.173 112.737 261.694 112.737 262.334 cv
cp
@
119.334 264.796 mo
119.334 265.439 118.814 265.958 118.173 265.958 cv
117.532 265.958 117.012 265.439 117.012 264.796 cv
117.012 264.157 117.532 263.636 118.173 263.636 cv
118.814 263.636 119.334 264.157 119.334 264.796 cv
ef
119.334 264.796 mo
119.334 265.439 118.814 265.958 118.173 265.958 cv
117.532 265.958 117.012 265.439 117.012 264.796 cv
117.012 264.157 117.532 263.636 118.173 263.636 cv
118.814 263.636 119.334 264.157 119.334 264.796 cv
cp
@
121.885 257.233 mo
121.885 257.873 121.365 258.393 120.724 258.393 cv
120.084 258.393 119.563 257.873 119.563 257.233 cv
119.563 256.591 120.084 256.071 120.724 256.071 cv
121.365 256.071 121.885 256.591 121.885 257.233 cv
ef
121.885 257.233 mo
121.885 257.873 121.365 258.393 120.724 258.393 cv
120.084 258.393 119.563 257.873 119.563 257.233 cv
119.563 256.591 120.084 256.071 120.724 256.071 cv
121.365 256.071 121.885 256.591 121.885 257.233 cv
cp
@
125.404 256.617 mo
125.404 257.257 124.883 257.778 124.243 257.778 cv
123.602 257.778 123.082 257.257 123.082 256.617 cv
123.082 255.976 123.602 255.456 124.243 255.456 cv
124.883 255.456 125.404 255.976 125.404 256.617 cv
ef
125.404 256.617 mo
125.404 257.257 124.883 257.778 124.243 257.778 cv
123.602 257.778 123.082 257.257 123.082 256.617 cv
123.082 255.976 123.602 255.456 124.243 255.456 cv
124.883 255.456 125.404 255.976 125.404 256.617 cv
cp
@
129.802 256.001 mo
129.802 256.642 129.282 257.162 128.641 257.162 cv
128 257.162 127.48 256.642 127.48 256.001 cv
127.48 255.36 128 254.84 128.641 254.84 cv
129.282 254.84 129.802 255.36 129.802 256.001 cv
ef
129.802 256.001 mo
129.802 256.642 129.282 257.162 128.641 257.162 cv
128 257.162 127.48 256.642 127.48 256.001 cv
127.48 255.36 128 254.84 128.641 254.84 cv
129.282 254.84 129.802 255.36 129.802 256.001 cv
cp
@
134.112 242.103 mo
134.112 242.744 133.592 243.264 132.952 243.264 cv
132.311 243.264 131.791 242.744 131.791 242.103 cv
131.791 241.461 132.311 240.941 132.952 240.941 cv
133.592 240.941 134.112 241.461 134.112 242.103 cv
ef
134.112 242.103 mo
134.112 242.744 133.592 243.264 132.952 243.264 cv
132.311 243.264 131.791 242.744 131.791 242.103 cv
131.791 241.461 132.311 240.941 132.952 240.941 cv
133.592 240.941 134.112 241.461 134.112 242.103 cv
cp
@
136.839 245.269 mo
136.839 245.911 136.32 246.43 135.678 246.43 cv
135.037 246.43 134.517 245.911 134.517 245.269 cv
134.517 244.628 135.037 244.108 135.678 244.108 cv
136.32 244.108 136.839 244.628 136.839 245.269 cv
ef
136.839 245.269 mo
136.839 245.911 136.32 246.43 135.678 246.43 cv
135.037 246.43 134.517 245.911 134.517 245.269 cv
134.517 244.628 135.037 244.108 135.678 244.108 cv
136.32 244.108 136.839 244.628 136.839 245.269 cv
cp
@
141.942 232.074 mo
141.942 232.716 141.422 233.235 140.78 233.235 cv
140.139 233.235 139.619 232.716 139.619 232.074 cv
139.619 231.433 140.139 230.913 140.78 230.913 cv
141.422 230.913 141.942 231.433 141.942 232.074 cv
ef
141.942 232.074 mo
141.942 232.716 141.422 233.235 140.78 233.235 cv
140.139 233.235 139.619 232.716 139.619 232.074 cv
139.619 231.433 140.139 230.913 140.78 230.913 cv
141.422 230.913 141.942 231.433 141.942 232.074 cv
cp
@
145.988 233.921 mo
145.988 234.563 145.468 235.082 144.826 235.082 cv
144.185 235.082 143.666 234.563 143.666 233.921 cv
143.666 233.282 144.185 232.76 144.826 232.76 cv
145.468 232.76 145.988 233.282 145.988 233.921 cv
ef
145.988 233.921 mo
145.988 234.563 145.468 235.082 144.826 235.082 cv
144.185 235.082 143.666 234.563 143.666 233.921 cv
143.666 233.282 144.185 232.76 144.826 232.76 cv
145.468 232.76 145.988 233.282 145.988 233.921 cv
cp
@
149.154 230.139 mo
149.154 230.781 148.635 231.3 147.994 231.3 cv
147.353 231.3 146.832 230.781 146.832 230.139 cv
146.832 229.498 147.353 228.977 147.994 228.977 cv
148.635 228.977 149.154 229.498 149.154 230.139 cv
ef
149.154 230.139 mo
149.154 230.781 148.635 231.3 147.994 231.3 cv
147.353 231.3 146.832 230.781 146.832 230.139 cv
146.832 229.498 147.353 228.977 147.994 228.977 cv
148.635 228.977 149.154 229.498 149.154 230.139 cv
cp
@
152.849 225.741 mo
152.849 226.381 152.329 226.902 151.688 226.902 cv
151.047 226.902 150.527 226.381 150.527 225.741 cv
150.527 225.099 151.047 224.579 151.688 224.579 cv
152.329 224.579 152.849 225.099 152.849 225.741 cv
ef
152.849 225.741 mo
152.849 226.381 152.329 226.902 151.688 226.902 cv
151.047 226.902 150.527 226.381 150.527 225.741 cv
150.527 225.099 151.047 224.579 151.688 224.579 cv
152.329 224.579 152.849 225.099 152.849 225.741 cv
cp
@
157.424 225.038 mo
157.424 225.677 156.903 226.198 156.262 226.198 cv
155.621 226.198 155.101 225.677 155.101 225.038 cv
155.101 224.396 155.621 223.876 156.262 223.876 cv
156.903 223.876 157.424 224.396 157.424 225.038 cv
ef
157.424 225.038 mo
157.424 225.677 156.903 226.198 156.262 226.198 cv
155.621 226.198 155.101 225.677 155.101 225.038 cv
155.101 224.396 155.621 223.876 156.262 223.876 cv
156.903 223.876 157.424 224.396 157.424 225.038 cv
cp
@
161.822 218.088 mo
161.822 218.728 161.302 219.249 160.661 219.249 cv
160.02 219.249 159.5 218.728 159.5 218.088 cv
159.5 217.446 160.02 216.927 160.661 216.927 cv
161.302 216.927 161.822 217.446 161.822 218.088 cv
ef
161.822 218.088 mo
161.822 218.728 161.302 219.249 160.661 219.249 cv
160.02 219.249 159.5 218.728 159.5 218.088 cv
159.5 217.446 160.02 216.927 160.661 216.927 cv
161.302 216.927 161.822 217.446 161.822 218.088 cv
cp
@
165.341 209.379 mo
165.341 210.02 164.82 210.541 164.179 210.541 cv
163.538 210.541 163.018 210.02 163.018 209.379 cv
163.018 208.738 163.538 208.217 164.179 208.217 cv
164.82 208.217 165.341 208.738 165.341 209.379 cv
ef
165.341 209.379 mo
165.341 210.02 164.82 210.541 164.179 210.541 cv
163.538 210.541 163.018 210.02 163.018 209.379 cv
163.018 208.738 163.538 208.217 164.179 208.217 cv
164.82 208.217 165.341 208.738 165.341 209.379 cv
cp
@
168.682 208.06 mo
168.682 208.701 168.163 209.221 167.522 209.221 cv
166.882 209.221 166.361 208.701 166.361 208.06 cv
166.361 207.418 166.882 206.899 167.522 206.899 cv
168.163 206.899 168.682 207.418 168.682 208.06 cv
ef
168.682 208.06 mo
168.682 208.701 168.163 209.221 167.522 209.221 cv
166.882 209.221 166.361 208.701 166.361 208.06 cv
166.361 207.418 166.882 206.899 167.522 206.899 cv
168.163 206.899 168.682 207.418 168.682 208.06 cv
cp
@
171.586 207.443 mo
171.586 208.085 171.066 208.604 170.426 208.604 cv
169.783 208.604 169.264 208.085 169.264 207.443 cv
169.264 206.803 169.783 206.283 170.426 206.283 cv
171.066 206.283 171.586 206.803 171.586 207.443 cv
ef
171.586 207.443 mo
171.586 208.085 171.066 208.604 170.426 208.604 cv
169.783 208.604 169.264 208.085 169.264 207.443 cv
169.264 206.803 169.783 206.283 170.426 206.283 cv
171.066 206.283 171.586 206.803 171.586 207.443 cv
cp
@
175.016 199.174 mo
175.016 199.817 174.497 200.336 173.854 200.336 cv
173.216 200.336 172.693 199.817 172.693 199.174 cv
172.693 198.534 173.216 198.013 173.854 198.013 cv
174.497 198.013 175.016 198.534 175.016 199.174 cv
ef
175.016 199.174 mo
175.016 199.817 174.497 200.336 173.854 200.336 cv
173.216 200.336 172.693 199.817 172.693 199.174 cv
172.693 198.534 173.216 198.013 173.854 198.013 cv
174.497 198.013 175.016 198.534 175.016 199.174 cv
cp
@
180.295 201.111 mo
180.295 201.75 179.774 202.272 179.134 202.272 cv
178.492 202.272 177.973 201.75 177.973 201.111 cv
177.973 200.468 178.492 199.95 179.134 199.95 cv
179.774 199.95 180.295 200.468 180.295 201.111 cv
ef
180.295 201.111 mo
180.295 201.75 179.774 202.272 179.134 202.272 cv
178.492 202.272 177.973 201.75 177.973 201.111 cv
177.973 200.468 178.492 199.95 179.134 199.95 cv
179.774 199.95 180.295 200.468 180.295 201.111 cv
cp
@
182.229 193.545 mo
182.229 194.187 181.709 194.706 181.068 194.706 cv
180.427 194.706 179.907 194.187 179.907 193.545 cv
179.907 192.905 180.427 192.384 181.068 192.384 cv
181.709 192.384 182.229 192.905 182.229 193.545 cv
ef
182.229 193.545 mo
182.229 194.187 181.709 194.706 181.068 194.706 cv
180.427 194.706 179.907 194.187 179.907 193.545 cv
179.907 192.905 180.427 192.384 181.068 192.384 cv
181.709 192.384 182.229 192.905 182.229 193.545 cv
cp
@
185.837 189.85 mo
185.837 190.492 185.316 191.012 184.675 191.012 cv
184.035 191.012 183.513 190.492 183.513 189.85 cv
183.513 189.21 184.035 188.69 184.675 188.69 cv
185.316 188.69 185.837 189.21 185.837 189.85 cv
ef
185.837 189.85 mo
185.837 190.492 185.316 191.012 184.675 191.012 cv
184.035 191.012 183.513 190.492 183.513 189.85 cv
183.513 189.21 184.035 188.69 184.675 188.69 cv
185.316 188.69 185.837 189.21 185.837 189.85 cv
cp
@
190.146 191.611 mo
190.146 192.25 189.627 192.771 188.986 192.771 cv
188.344 192.771 187.825 192.25 187.825 191.611 cv
187.825 190.969 188.344 190.449 188.986 190.449 cv
189.627 190.449 190.146 190.969 190.146 191.611 cv
ef
190.146 191.611 mo
190.146 192.25 189.627 192.771 188.986 192.771 cv
188.344 192.771 187.825 192.25 187.825 191.611 cv
187.825 190.969 188.344 190.449 188.986 190.449 cv
189.627 190.449 190.146 190.969 190.146 191.611 cv
cp
@
195.424 198.559 mo
195.424 199.201 194.904 199.721 194.262 199.721 cv
193.623 199.721 193.101 199.201 193.101 198.559 cv
193.101 197.918 193.623 197.398 194.262 197.398 cv
194.904 197.398 195.424 197.918 195.424 198.559 cv
ef
195.424 198.559 mo
195.424 199.201 194.904 199.721 194.262 199.721 cv
193.623 199.721 193.101 199.201 193.101 198.559 cv
193.101 197.918 193.623 197.398 194.262 197.398 cv
194.904 197.398 195.424 197.918 195.424 198.559 cv
cp
@
201.934 208.676 mo
201.934 209.316 201.415 209.837 200.772 209.837 cv
200.132 209.837 199.612 209.316 199.612 208.676 cv
199.612 208.034 200.132 207.514 200.772 207.514 cv
201.415 207.514 201.934 208.034 201.934 208.676 cv
ef
201.934 208.676 mo
201.934 209.316 201.415 209.837 200.772 209.837 cv
200.132 209.837 199.612 209.316 199.612 208.676 cv
199.612 208.034 200.132 207.514 200.772 207.514 cv
201.415 207.514 201.934 208.034 201.934 208.676 cv
cp
@
210.115 221.871 mo
210.115 222.511 209.593 223.032 208.955 223.032 cv
208.312 223.032 207.794 222.511 207.794 221.871 cv
207.794 221.229 208.312 220.707 208.955 220.707 cv
209.593 220.707 210.115 221.229 210.115 221.871 cv
ef
210.115 221.871 mo
210.115 222.511 209.593 223.032 208.955 223.032 cv
208.312 223.032 207.794 222.511 207.794 221.871 cv
207.794 221.229 208.312 220.707 208.955 220.707 cv
209.593 220.707 210.115 221.229 210.115 221.871 cv
cp
@
216.713 230.754 mo
216.713 231.396 216.191 231.917 215.552 231.917 cv
214.911 231.917 214.39 231.396 214.39 230.754 cv
214.39 230.114 214.911 229.594 215.552 229.594 cv
216.191 229.594 216.713 230.114 216.713 230.754 cv
ef
216.713 230.754 mo
216.713 231.396 216.191 231.917 215.552 231.917 cv
214.911 231.917 214.39 231.396 214.39 230.754 cv
214.39 230.114 214.911 229.594 215.552 229.594 cv
216.191 229.594 216.713 230.114 216.713 230.754 cv
cp
@
227.005 241.399 mo
227.005 242.04 226.484 242.56 225.843 242.56 cv
225.203 242.56 224.68 242.04 224.68 241.399 cv
224.68 240.758 225.203 240.238 225.843 240.238 cv
226.484 240.238 227.005 240.758 227.005 241.399 cv
ef
227.005 241.399 mo
227.005 242.04 226.484 242.56 225.843 242.56 cv
225.203 242.56 224.68 242.04 224.68 241.399 cv
224.68 240.758 225.203 240.238 225.843 240.238 cv
226.484 240.238 227.005 240.758 227.005 241.399 cv
cp
@
234.922 250.284 mo
234.922 250.923 234.402 251.445 233.76 251.445 cv
233.118 251.445 232.599 250.923 232.599 250.284 cv
232.599 249.642 233.118 249.122 233.76 249.122 cv
234.402 249.122 234.922 249.642 234.922 250.284 cv
ef
234.922 250.284 mo
234.922 250.923 234.402 251.445 233.76 251.445 cv
233.118 251.445 232.599 250.923 232.599 250.284 cv
232.599 249.642 233.118 249.122 233.76 249.122 cv
234.402 249.122 234.922 249.642 234.922 250.284 cv
cp
@
243.894 257.937 mo
243.894 258.578 243.373 259.098 242.733 259.098 cv
242.092 259.098 241.571 258.578 241.571 257.937 cv
241.571 257.294 242.092 256.775 242.733 256.775 cv
243.373 256.775 243.894 257.294 243.894 257.937 cv
ef
243.894 257.937 mo
243.894 258.578 243.373 259.098 242.733 259.098 cv
242.092 259.098 241.571 258.578 241.571 257.937 cv
241.571 257.294 242.092 256.775 242.733 256.775 cv
243.373 256.775 243.894 257.294 243.894 257.937 cv
cp
@
251.283 261.63 mo
251.283 262.272 250.762 262.792 250.122 262.792 cv
249.48 262.792 248.962 262.272 248.962 261.63 cv
248.962 260.991 249.48 260.469 250.122 260.469 cv
250.762 260.469 251.283 260.991 251.283 261.63 cv
ef
251.283 261.63 mo
251.283 262.272 250.762 262.792 250.122 262.792 cv
249.48 262.792 248.962 262.272 248.962 261.63 cv
248.962 260.991 249.48 260.469 250.122 260.469 cv
250.762 260.469 251.283 260.991 251.283 261.63 cv
cp
@
266.501 268.493 mo
266.501 269.133 265.981 269.653 265.341 269.653 cv
264.698 269.653 264.179 269.133 264.179 268.493 cv
264.179 267.851 264.698 267.332 265.341 267.332 cv
265.981 267.332 266.501 267.851 266.501 268.493 cv
ef
266.501 268.493 mo
266.501 269.133 265.981 269.653 265.341 269.653 cv
264.698 269.653 264.179 269.133 264.179 268.493 cv
264.179 267.851 264.698 267.332 265.341 267.332 cv
265.981 267.332 266.501 267.851 266.501 268.493 cv
cp
@
274.769 270.428 mo
274.769 271.068 274.25 271.588 273.609 271.588 cv
272.968 271.588 272.447 271.068 272.447 270.428 cv
272.447 269.786 272.968 269.266 273.609 269.266 cv
274.25 269.266 274.769 269.786 274.769 270.428 cv
ef
gsave
89.579 151.905 mo
279.676 151.905 li
279.676 278.164 li
89.579 278.164 li
cp
eclp
274.769 270.428 mo
274.769 271.068 274.25 271.588 273.609 271.588 cv
272.968 271.588 272.447 271.068 272.447 270.428 cv
272.447 269.786 272.968 269.266 273.609 269.266 cv
274.25 269.266 274.769 269.786 274.769 270.428 cv
cp
@
87.362 272.674 mo
88.629 274.997 li
85.99 274.997 li
87.362 272.674 li
cp
.95346 .916228 .0104982 .0011902 cmyk
@
grestore
97.39 267.607 mo
98.656 269.93 li
96.018 269.93 li
97.39 267.607 li
.95346 .916228 .0104982 .0011902 cmyk
ef
97.39 267.607 mo
98.656 269.93 li
96.018 269.93 li
97.39 267.607 li
cp
@
106.784 265.707 mo
108.05 268.029 li
105.411 268.029 li
106.784 265.707 li
ef
106.784 265.707 mo
108.05 268.029 li
105.411 268.029 li
106.784 265.707 li
cp
@
114.067 256.946 mo
115.334 259.267 li
112.695 259.267 li
114.067 256.946 li
ef
114.067 256.946 mo
115.334 259.267 li
112.695 259.267 li
114.067 256.946 li
cp
@
117.972 258.844 mo
119.238 261.167 li
116.6 261.167 li
117.972 258.844 li
ef
117.972 258.844 mo
119.238 261.167 li
116.6 261.167 li
117.972 258.844 li
cp
@
124.938 252.51 mo
126.205 254.834 li
123.567 254.834 li
124.938 252.51 li
ef
124.938 252.51 mo
126.205 254.834 li
123.567 254.834 li
124.938 252.51 li
cp
@
127.683 245.542 mo
128.949 247.866 li
126.311 247.866 li
127.683 245.542 li
ef
127.683 245.542 mo
128.949 247.866 li
126.311 247.866 li
127.683 245.542 li
cp
@
131.166 244.277 mo
132.432 246.599 li
129.794 246.599 li
131.166 244.277 li
ef
131.166 244.277 mo
132.432 246.599 li
129.794 246.599 li
131.166 244.277 li
cp
@
135.493 244.911 mo
136.76 247.232 li
134.121 247.232 li
135.493 244.911 li
ef
135.493 244.911 mo
136.76 247.232 li
134.121 247.232 li
135.493 244.911 li
cp
@
140.032 239.208 mo
141.299 241.533 li
138.66 241.533 li
140.032 239.208 li
ef
140.032 239.208 mo
141.299 241.533 li
138.66 241.533 li
140.032 239.208 li
cp
@
142.777 240.476 mo
144.043 242.798 li
141.404 242.798 li
142.777 240.476 li
ef
142.777 240.476 mo
144.043 242.798 li
141.404 242.798 li
142.777 240.476 li
cp
@
147.843 227.914 mo
149.11 230.236 li
146.47 230.236 li
147.843 227.914 li
ef
147.843 227.914 mo
149.11 230.236 li
146.47 230.236 li
147.843 227.914 li
cp
@
151.96 226.013 mo
153.225 228.336 li
150.587 228.336 li
151.96 226.013 li
ef
151.96 226.013 mo
153.225 228.336 li
150.587 228.336 li
151.96 226.013 li
cp
@
155.231 220.946 mo
156.498 223.269 li
153.859 223.269 li
155.231 220.946 li
ef
155.231 220.946 mo
156.498 223.269 li
153.859 223.269 li
155.231 220.946 li
cp
@
158.82 216.513 mo
160.087 218.834 li
157.448 218.834 li
158.82 216.513 li
ef
158.82 216.513 mo
160.087 218.834 li
157.448 218.834 li
158.82 216.513 li
cp
@
163.465 219.045 mo
164.73 221.369 li
162.092 221.369 li
163.465 219.045 li
ef
163.465 219.045 mo
164.73 221.369 li
162.092 221.369 li
163.465 219.045 li
cp
@
168.004 209.017 mo
169.27 211.34 li
166.631 211.34 li
168.004 209.017 li
ef
168.004 209.017 mo
169.27 211.34 li
166.631 211.34 li
168.004 209.017 li
cp
@
171.592 202.683 mo
172.858 205.006 li
170.219 205.006 li
171.592 202.683 li
ef
171.592 202.683 mo
172.858 205.006 li
170.219 205.006 li
171.592 202.683 li
cp
@
174.759 202.683 mo
176.025 205.006 li
173.385 205.006 li
174.759 202.683 li
ef
174.759 202.683 mo
176.025 205.006 li
173.385 205.006 li
174.759 202.683 li
cp
@
177.713 199.515 mo
178.981 201.838 li
176.342 201.838 li
177.713 199.515 li
ef
177.713 199.515 mo
178.981 201.838 li
176.342 201.838 li
177.713 199.515 li
cp
@
181.513 196.349 mo
182.78 198.671 li
180.141 198.671 li
181.513 196.349 li
ef
181.513 196.349 mo
182.78 198.671 li
180.141 198.671 li
181.513 196.349 li
cp
@
186.368 200.783 mo
187.635 203.105 li
184.997 203.105 li
186.368 200.783 li
ef
186.368 200.783 mo
187.635 203.105 li
184.997 203.105 li
186.368 200.783 li
cp
@
188.48 194.449 mo
189.746 196.771 li
187.107 196.771 li
188.48 194.449 li
ef
188.48 194.449 mo
189.746 196.771 li
187.107 196.771 li
188.48 194.449 li
cp
@
192.385 193.181 mo
193.651 195.503 li
191.013 195.503 li
192.385 193.181 li
ef
192.385 193.181 mo
193.651 195.503 li
191.013 195.503 li
192.385 193.181 li
cp
@
196.819 197.615 mo
198.084 199.938 li
195.446 199.938 li
196.819 197.615 li
ef
196.819 197.615 mo
198.084 199.938 li
195.446 199.938 li
196.819 197.615 li
cp
@
201.779 206.483 mo
203.045 208.805 li
200.406 208.805 li
201.779 206.483 li
ef
201.779 206.483 mo
203.045 208.805 li
200.406 208.805 li
201.779 206.483 li
cp
@
208.428 219.679 mo
209.696 222.001 li
207.057 222.001 li
208.428 219.679 li
ef
208.428 219.679 mo
209.696 222.001 li
207.057 222.001 li
208.428 219.679 li
cp
@
216.978 232.347 mo
218.244 234.669 li
215.606 234.669 li
216.978 232.347 li
ef
216.978 232.347 mo
218.244 234.669 li
215.606 234.669 li
216.978 232.347 li
cp
@
223.628 241.109 mo
224.895 243.432 li
222.257 243.432 li
223.628 241.109 li
ef
223.628 241.109 mo
224.895 243.432 li
222.257 243.432 li
223.628 241.109 li
cp
@
234.078 248.709 mo
235.343 251.033 li
232.705 251.033 li
234.078 248.709 li
ef
234.078 248.709 mo
235.343 251.033 li
232.705 251.033 li
234.078 248.709 li
cp
@
242.1 255.045 mo
243.366 257.367 li
240.727 257.367 li
242.1 255.045 li
ef
242.1 255.045 mo
243.366 257.367 li
240.727 257.367 li
242.1 255.045 li
cp
@
251.177 261.379 mo
252.443 263.701 li
249.803 263.701 li
251.177 261.379 li
ef
251.177 261.379 mo
252.443 263.701 li
249.803 263.701 li
251.177 261.379 li
cp
@
258.565 263.912 mo
259.832 266.235 li
257.193 266.235 li
258.565 263.912 li
ef
258.565 263.912 mo
259.832 266.235 li
257.193 266.235 li
258.565 263.912 li
cp
@
274.081 268.873 mo
275.348 271.197 li
272.71 271.197 li
274.081 268.873 li
ef
274.081 268.873 mo
275.348 271.197 li
272.71 271.197 li
274.081 268.873 li
cp
@
92.323 270.985 mo
92.534 271.83 li
93.59 271.83 li
92.746 272.462 li
93.062 273.414 li
92.323 272.78 li
91.479 273.414 li
91.796 272.462 li
90.951 271.83 li
92.007 271.83 li
92.323 270.985 li
.839353 .0960403 .972992 .00726329 cmyk
ef
92.323 270.985 mo
92.534 271.83 li
93.59 271.83 li
92.746 272.462 li
93.062 273.414 li
92.323 272.78 li
91.479 273.414 li
91.796 272.462 li
90.951 271.83 li
92.007 271.83 li
92.323 270.985 li
cp
@
102.139 266.552 mo
102.351 267.395 li
103.406 267.395 li
102.562 268.029 li
102.878 268.979 li
102.139 268.346 li
101.295 268.979 li
101.612 268.029 li
100.767 267.395 li
101.823 267.395 li
102.139 266.552 li
ef
102.139 266.552 mo
102.351 267.395 li
103.406 267.395 li
102.562 268.029 li
102.878 268.979 li
102.139 268.346 li
101.295 268.979 li
101.612 268.029 li
100.767 267.395 li
101.823 267.395 li
102.139 266.552 li
cp
@
111.112 262.856 mo
111.322 263.701 li
112.378 263.701 li
111.533 264.334 li
111.85 265.285 li
111.112 264.651 li
110.267 265.285 li
110.583 264.334 li
109.739 263.701 li
110.795 263.701 li
111.112 262.856 li
ef
111.112 262.856 mo
111.322 263.701 li
112.378 263.701 li
111.533 264.334 li
111.85 265.285 li
111.112 264.651 li
110.267 265.285 li
110.583 264.334 li
109.739 263.701 li
110.795 263.701 li
111.112 262.856 li
cp
@
119.028 259.689 mo
119.238 260.534 li
120.294 260.534 li
119.45 261.167 li
119.767 262.118 li
119.028 261.484 li
118.183 262.118 li
118.5 261.167 li
117.656 260.534 li
118.712 260.534 li
119.028 259.689 li
ef
119.028 259.689 mo
119.238 260.534 li
120.294 260.534 li
119.45 261.167 li
119.767 262.118 li
119.028 261.484 li
118.183 262.118 li
118.5 261.167 li
117.656 260.534 li
118.712 260.534 li
119.028 259.689 li
cp
@
123.25 250.822 mo
123.461 251.666 li
124.517 251.666 li
123.672 252.299 li
123.988 253.249 li
123.25 252.616 li
122.405 253.249 li
122.721 252.299 li
121.878 251.666 li
122.932 251.666 li
123.25 250.822 li
ef
123.25 250.822 mo
123.461 251.666 li
124.517 251.666 li
123.672 252.299 li
123.988 253.249 li
123.25 252.616 li
122.405 253.249 li
122.721 252.299 li
121.878 251.666 li
122.932 251.666 li
123.25 250.822 li
cp
@
130.744 247.021 mo
130.955 247.866 li
132.01 247.866 li
131.166 248.499 li
131.482 249.45 li
130.744 248.815 li
129.899 249.45 li
130.216 248.499 li
129.371 247.866 li
130.426 247.866 li
130.744 247.021 li
ef
130.744 247.021 mo
130.955 247.866 li
132.01 247.866 li
131.166 248.499 li
131.482 249.45 li
130.744 248.815 li
129.899 249.45 li
130.216 248.499 li
129.371 247.866 li
130.426 247.866 li
130.744 247.021 li
cp
@
132.643 241.954 mo
132.855 242.798 li
133.91 242.798 li
133.066 243.432 li
133.383 244.381 li
132.643 243.748 li
131.799 244.381 li
132.116 243.432 li
131.271 242.798 li
132.327 242.798 li
132.643 241.954 li
ef
132.643 241.954 mo
132.855 242.798 li
133.91 242.798 li
133.066 243.432 li
133.383 244.381 li
132.643 243.748 li
131.799 244.381 li
132.116 243.432 li
131.271 242.798 li
132.327 242.798 li
132.643 241.954 li
cp
@
137.182 240.054 mo
137.393 240.898 li
138.449 240.898 li
137.605 241.533 li
137.921 242.482 li
137.182 241.848 li
136.338 242.482 li
136.654 241.533 li
135.81 240.898 li
136.866 240.898 li
137.182 240.054 li
ef
137.182 240.054 mo
137.393 240.898 li
138.449 240.898 li
137.605 241.533 li
137.921 242.482 li
137.182 241.848 li
136.338 242.482 li
136.654 241.533 li
135.81 240.898 li
136.866 240.898 li
137.182 240.054 li
cp
@
140.771 247.655 mo
140.982 248.499 li
142.038 248.499 li
141.193 249.132 li
141.51 250.083 li
140.771 249.45 li
139.926 250.083 li
140.243 249.132 li
139.399 248.499 li
140.455 248.499 li
140.771 247.655 li
ef
140.771 247.655 mo
140.982 248.499 li
142.038 248.499 li
141.193 249.132 li
141.51 250.083 li
140.771 249.45 li
139.926 250.083 li
140.243 249.132 li
139.399 248.499 li
140.455 248.499 li
140.771 247.655 li
cp
@
146.576 233.825 mo
146.787 234.669 li
147.843 234.669 li
146.999 235.303 li
147.315 236.253 li
146.576 235.62 li
145.732 236.253 li
146.049 235.303 li
145.204 234.669 li
146.26 234.669 li
146.576 233.825 li
ef
146.576 233.825 mo
146.787 234.669 li
147.843 234.669 li
146.999 235.303 li
147.315 236.253 li
146.576 235.62 li
145.732 236.253 li
146.049 235.303 li
145.204 234.669 li
146.26 234.669 li
146.576 233.825 li
cp
@
148.687 234.458 mo
148.898 235.303 li
149.954 235.303 li
149.11 235.936 li
149.426 236.886 li
148.687 236.253 li
147.843 236.886 li
148.16 235.936 li
147.315 235.303 li
148.37 235.303 li
148.687 234.458 li
ef
148.687 234.458 mo
148.898 235.303 li
149.954 235.303 li
149.11 235.936 li
149.426 236.886 li
148.687 236.253 li
147.843 236.886 li
148.16 235.936 li
147.315 235.303 li
148.37 235.303 li
148.687 234.458 li
cp
@
153.543 219.891 mo
153.754 220.735 li
154.809 220.735 li
153.965 221.369 li
154.281 222.318 li
153.543 221.685 li
152.698 222.318 li
153.015 221.369 li
152.17 220.735 li
153.225 220.735 li
153.543 219.891 li
ef
153.543 219.891 mo
153.754 220.735 li
154.809 220.735 li
153.965 221.369 li
154.281 222.318 li
153.543 221.685 li
152.698 222.318 li
153.015 221.369 li
152.17 220.735 li
153.225 220.735 li
153.543 219.891 li
cp
@
155.76 213.028 mo
155.97 213.873 li
157.026 213.873 li
156.181 214.506 li
156.498 215.456 li
155.76 214.824 li
154.915 215.456 li
155.231 214.506 li
154.387 213.873 li
155.443 213.873 li
155.76 213.028 li
ef
155.76 213.028 mo
155.97 213.873 li
157.026 213.873 li
156.181 214.506 li
156.498 215.456 li
155.76 214.824 li
154.915 215.456 li
155.231 214.506 li
154.387 213.873 li
155.443 213.873 li
155.76 213.028 li
cp
@
160.193 215.456 mo
160.404 216.301 li
161.459 216.301 li
160.614 216.934 li
160.931 217.885 li
160.193 217.25 li
159.348 217.885 li
159.664 216.934 li
158.82 216.301 li
159.875 216.301 li
160.193 215.456 li
ef
160.193 215.456 mo
160.404 216.301 li
161.459 216.301 li
160.614 216.934 li
160.931 217.885 li
160.193 217.25 li
159.348 217.885 li
159.664 216.934 li
158.82 216.301 li
159.875 216.301 li
160.193 215.456 li
cp
@
163.57 210.494 mo
163.781 211.34 li
164.836 211.34 li
163.992 211.972 li
164.309 212.923 li
163.57 212.29 li
162.725 212.923 li
163.042 211.972 li
162.198 211.34 li
163.254 211.34 li
163.57 210.494 li
ef
163.57 210.494 mo
163.781 211.34 li
164.836 211.34 li
163.992 211.972 li
164.309 212.923 li
163.57 212.29 li
162.725 212.923 li
163.042 211.972 li
162.198 211.34 li
163.254 211.34 li
163.57 210.494 li
cp
@
167.685 211.762 mo
167.897 212.606 li
168.953 212.606 li
168.107 213.24 li
168.426 214.189 li
167.685 213.556 li
166.843 214.189 li
167.16 213.24 li
166.313 212.606 li
167.37 212.606 li
167.685 211.762 li
ef
167.685 211.762 mo
167.897 212.606 li
168.953 212.606 li
168.107 213.24 li
168.426 214.189 li
167.685 213.556 li
166.843 214.189 li
167.16 213.24 li
166.313 212.606 li
167.37 212.606 li
167.685 211.762 li
cp
@
171.275 212.394 mo
171.485 213.24 li
172.543 213.24 li
171.697 213.873 li
172.014 214.824 li
171.275 214.189 li
170.431 214.824 li
170.747 213.873 li
169.903 213.24 li
170.959 213.24 li
171.275 212.394 li
ef
171.275 212.394 mo
171.485 213.24 li
172.543 213.24 li
171.697 213.873 li
172.014 214.824 li
171.275 214.189 li
170.431 214.824 li
170.747 213.873 li
169.903 213.24 li
170.959 213.24 li
171.275 212.394 li
cp
@
173.385 204.794 mo
173.597 205.638 li
174.652 205.638 li
173.807 206.272 li
174.127 207.221 li
173.385 206.589 li
172.543 207.221 li
172.858 206.272 li
172.014 205.638 li
173.068 205.638 li
173.385 204.794 li
ef
173.385 204.794 mo
173.597 205.638 li
174.652 205.638 li
173.807 206.272 li
174.127 207.221 li
173.385 206.589 li
172.543 207.221 li
172.858 206.272 li
172.014 205.638 li
173.068 205.638 li
173.385 204.794 li
cp
@
178.558 197.827 mo
178.769 198.671 li
179.825 198.671 li
178.981 199.304 li
179.298 200.254 li
178.558 199.622 li
177.713 200.254 li
178.03 199.304 li
177.185 198.671 li
178.242 198.671 li
178.558 197.827 li
ef
178.558 197.827 mo
178.769 198.671 li
179.825 198.671 li
178.981 199.304 li
179.298 200.254 li
178.558 199.622 li
177.713 200.254 li
178.03 199.304 li
177.185 198.671 li
178.242 198.671 li
178.558 197.827 li
cp
@
181.935 202.894 mo
182.146 203.738 li
183.203 203.738 li
182.359 204.372 li
182.675 205.321 li
181.935 204.688 li
181.091 205.321 li
181.408 204.372 li
180.564 203.738 li
181.62 203.738 li
181.935 202.894 li
ef
181.935 202.894 mo
182.146 203.738 li
183.203 203.738 li
182.359 204.372 li
182.675 205.321 li
181.935 204.688 li
181.091 205.321 li
181.408 204.372 li
180.564 203.738 li
181.62 203.738 li
181.935 202.894 li
cp
@
186.052 193.393 mo
186.263 194.238 li
187.319 194.238 li
186.474 194.872 li
186.791 195.821 li
186.052 195.188 li
185.207 195.821 li
185.525 194.872 li
184.68 194.238 li
185.736 194.238 li
186.052 193.393 li
ef
186.052 193.393 mo
186.263 194.238 li
187.319 194.238 li
186.474 194.872 li
186.791 195.821 li
186.052 195.188 li
185.207 195.821 li
185.525 194.872 li
184.68 194.238 li
185.736 194.238 li
186.052 193.393 li
cp
@
187.952 196.56 mo
188.164 197.404 li
189.219 197.404 li
188.375 198.039 li
188.69 198.988 li
187.952 198.355 li
187.107 198.988 li
187.426 198.039 li
186.58 197.404 li
187.635 197.404 li
187.952 196.56 li
ef
187.952 196.56 mo
188.164 197.404 li
189.219 197.404 li
188.375 198.039 li
188.69 198.988 li
187.952 198.355 li
187.107 198.988 li
187.426 198.039 li
186.58 197.404 li
187.635 197.404 li
187.952 196.56 li
cp
@
192.491 199.093 mo
192.703 199.938 li
193.758 199.938 li
192.912 200.572 li
193.229 201.522 li
192.491 200.887 li
191.646 201.522 li
191.964 200.572 li
191.118 199.938 li
192.175 199.938 li
192.491 199.093 li
ef
192.491 199.093 mo
192.703 199.938 li
193.758 199.938 li
192.912 200.572 li
193.229 201.522 li
192.491 200.887 li
191.646 201.522 li
191.964 200.572 li
191.118 199.938 li
192.175 199.938 li
192.491 199.093 li
cp
@
196.607 190.859 mo
196.819 191.705 li
197.873 191.705 li
197.029 192.336 li
197.345 193.288 li
196.607 192.654 li
195.763 193.288 li
196.08 192.336 li
195.235 191.705 li
196.29 191.705 li
196.607 190.859 li
ef
196.607 190.859 mo
196.819 191.705 li
197.873 191.705 li
197.029 192.336 li
197.345 193.288 li
196.607 192.654 li
195.763 193.288 li
196.08 192.336 li
195.235 191.705 li
196.29 191.705 li
196.607 190.859 li
cp
@
199.457 205.427 mo
199.667 206.272 li
200.724 206.272 li
199.88 206.907 li
200.196 207.856 li
199.457 207.221 li
198.613 207.856 li
198.929 206.907 li
198.084 206.272 li
199.141 206.272 li
199.457 205.427 li
ef
199.457 205.427 mo
199.667 206.272 li
200.724 206.272 li
199.88 206.907 li
200.196 207.856 li
199.457 207.221 li
198.613 207.856 li
198.929 206.907 li
198.084 206.272 li
199.141 206.272 li
199.457 205.427 li
cp
@
203.151 202.894 mo
203.363 203.738 li
204.418 203.738 li
203.574 204.372 li
203.889 205.321 li
203.151 204.688 li
202.306 205.321 li
202.625 204.372 li
201.779 203.738 li
202.835 203.738 li
203.151 202.894 li
ef
203.151 202.894 mo
203.363 203.738 li
204.418 203.738 li
203.574 204.372 li
203.889 205.321 li
203.151 204.688 li
202.306 205.321 li
202.625 204.372 li
201.779 203.738 li
202.835 203.738 li
203.151 202.894 li
cp
@
207.901 218.623 mo
208.111 219.468 li
209.168 219.468 li
208.323 220.102 li
208.64 221.051 li
207.901 220.417 li
207.057 221.051 li
207.374 220.102 li
206.528 219.468 li
207.585 219.468 li
207.901 218.623 li
ef
207.901 218.623 mo
208.111 219.468 li
209.168 219.468 li
208.323 220.102 li
208.64 221.051 li
207.901 220.417 li
207.057 221.051 li
207.374 220.102 li
206.528 219.468 li
207.585 219.468 li
207.901 218.623 li
cp
@
215.818 233.192 mo
216.028 234.037 li
217.084 234.037 li
216.24 234.669 li
216.556 235.62 li
215.818 234.988 li
214.972 235.62 li
215.29 234.669 li
214.445 234.037 li
215.502 234.037 li
215.818 233.192 li
ef
215.818 233.192 mo
216.028 234.037 li
217.084 234.037 li
216.24 234.669 li
216.556 235.62 li
215.818 234.988 li
214.972 235.62 li
215.29 234.669 li
214.445 234.037 li
215.502 234.037 li
215.818 233.192 li
cp
@
223.1 239.42 mo
223.311 240.265 li
224.367 240.265 li
223.523 240.898 li
223.84 241.848 li
223.1 241.215 li
222.257 241.848 li
222.574 240.898 li
221.727 240.265 li
222.784 240.265 li
223.1 239.42 li
ef
223.1 239.42 mo
223.311 240.265 li
224.367 240.265 li
223.523 240.898 li
223.84 241.848 li
223.1 241.215 li
222.257 241.848 li
222.574 240.898 li
221.727 240.265 li
222.784 240.265 li
223.1 239.42 li
cp
@
229.328 247.021 mo
229.539 247.866 li
230.594 247.866 li
229.75 248.499 li
230.066 249.45 li
229.328 248.815 li
228.482 249.45 li
228.801 248.499 li
227.955 247.866 li
229.011 247.866 li
229.328 247.021 li
ef
229.328 247.021 mo
229.539 247.866 li
230.594 247.866 li
229.75 248.499 li
230.066 249.45 li
229.328 248.815 li
228.482 249.45 li
228.801 248.499 li
227.955 247.866 li
229.011 247.866 li
229.328 247.021 li
cp
@
240.094 253.356 mo
240.305 254.2 li
241.361 254.2 li
240.517 254.834 li
240.833 255.784 li
240.094 255.15 li
239.25 255.784 li
239.566 254.834 li
238.72 254.2 li
239.777 254.2 li
240.094 253.356 li
ef
240.094 253.356 mo
240.305 254.2 li
241.361 254.2 li
240.517 254.834 li
240.833 255.784 li
240.094 255.15 li
239.25 255.784 li
239.566 254.834 li
238.72 254.2 li
239.777 254.2 li
240.094 253.356 li
cp
@
248.116 259.056 mo
248.326 259.901 li
249.383 259.901 li
248.538 260.534 li
248.855 261.484 li
248.116 260.85 li
247.272 261.484 li
247.588 260.534 li
246.743 259.901 li
247.801 259.901 li
248.116 259.056 li
ef
248.116 259.056 mo
248.326 259.901 li
249.383 259.901 li
248.538 260.534 li
248.855 261.484 li
248.116 260.85 li
247.272 261.484 li
247.588 260.534 li
246.743 259.901 li
247.801 259.901 li
248.116 259.056 li
cp
@
257.403 264.123 mo
257.616 264.968 li
258.671 264.968 li
257.827 265.601 li
258.142 266.552 li
257.403 265.917 li
256.56 266.552 li
256.877 265.601 li
256.032 264.968 li
257.088 264.968 li
257.403 264.123 li
ef
257.403 264.123 mo
257.616 264.968 li
258.671 264.968 li
257.827 265.601 li
258.142 266.552 li
257.403 265.917 li
256.56 266.552 li
256.877 265.601 li
256.032 264.968 li
257.088 264.968 li
257.403 264.123 li
cp
@
264.898 266.552 mo
265.11 267.395 li
266.165 267.395 li
265.32 268.029 li
265.637 268.979 li
264.898 268.346 li
264.054 268.979 li
264.371 268.029 li
263.525 267.395 li
264.582 267.395 li
264.898 266.552 li
ef
264.898 266.552 mo
265.11 267.395 li
266.165 267.395 li
265.32 268.029 li
265.637 268.979 li
264.898 268.346 li
264.054 268.979 li
264.371 268.029 li
263.525 267.395 li
264.582 267.395 li
264.898 266.552 li
cp
@
gsave
89.579 151.905 mo
279.676 151.905 li
279.676 278.164 li
89.579 278.164 li
cp
eclp
280.415 270.985 mo
280.625 271.83 li
281.68 271.83 li
280.837 272.462 li
281.154 273.414 li
280.415 272.78 li
279.571 273.414 li
279.885 272.462 li
279.042 271.83 li
280.097 271.83 li
280.415 270.985 li
ef
280.415 270.985 mo
280.625 271.83 li
281.68 271.83 li
280.837 272.462 li
281.154 273.414 li
280.415 272.78 li
279.571 273.414 li
279.885 272.462 li
279.042 271.83 li
280.097 271.83 li
280.415 270.985 li
cp
@
.528 lw
254.449 264.545 mo
254.555 264.545 li
254.555 264.651 li
254.871 264.651 li
254.871 264.756 li
255.187 264.756 li
255.293 264.863 li
255.717 264.863 li
255.717 264.968 li
256.138 264.968 li
256.138 265.074 li
256.665 265.074 li
256.665 265.178 li
257.088 265.178 li
257.193 265.285 li
257.616 265.285 li
257.616 265.389 li
258.038 265.389 li
258.142 265.496 li
258.565 265.496 li
258.565 265.601 li
259.093 265.601 li
259.093 265.707 li
259.726 265.707 li
259.726 265.812 li
260.254 265.812 li
260.254 265.917 li
260.677 265.917 li
260.677 266.023 li
261.204 266.023 li
261.204 266.128 li
261.626 266.128 li
261.626 266.235 li
262.365 266.235 li
262.365 266.34 li
263.21 266.34 li
263.21 266.446 li
263.843 266.446 li
263.843 266.552 li
264.477 266.552 li
264.477 266.657 li
265.004 266.657 li
265.11 266.762 li
265.955 266.762 li
265.955 266.868 li
266.693 266.868 li
266.799 266.973 li
267.432 266.973 li
267.538 267.079 li
268.276 267.079 li
268.381 267.184 li
269.438 267.184 li
269.543 267.29 li
270.28 267.29 li
270.386 267.395 li
271.019 267.395 li
271.019 267.501 li
271.865 267.501 li
271.865 267.607 li
273.025 267.607 li
273.025 267.713 li
274.187 267.713 li
274.293 267.818 li
275.454 267.818 li
275.454 267.924 li
277.248 267.924 li
226.689 246.283 mo
226.795 246.283 li
226.901 246.388 li
226.901 246.494 li
227.006 246.494 li
227.006 246.599 li
227.111 246.599 li
227.111 246.705 li
227.218 246.705 li
227.218 246.81 li
227.322 246.916 li
227.428 247.021 li
227.428 247.126 li
227.534 247.126 li
227.534 247.232 li
227.64 247.232 li
227.64 247.337 li
227.744 247.337 li
227.744 247.443 li
227.849 247.548 li
227.955 247.548 li
227.955 247.655 li
228.061 247.76 li
228.061 247.866 li
228.167 247.866 li
228.167 247.971 li
228.272 247.971 li
228.272 248.078 li
228.379 248.078 li
228.379 248.182 li
228.482 248.182 li
228.482 248.289 li
228.589 248.394 li
228.694 248.499 li
228.801 248.605 li
228.801 248.709 li
228.905 248.709 li
228.905 248.815 li
229.011 248.815 li
229.011 248.92 li
229.117 248.92 li
229.117 249.027 li
229.223 249.027 li
229.223 249.132 li
229.328 249.132 li
229.328 249.239 li
229.433 249.239 li
229.433 249.343 li
229.539 249.343 li
229.539 249.45 li
229.643 249.45 li
229.643 249.554 li
229.75 249.554 li
229.75 249.661 li
229.855 249.661 li
229.855 249.766 li
229.962 249.766 li
229.962 249.873 li
230.066 249.873 li
230.066 249.977 li
230.173 249.977 li
230.173 250.083 li
230.279 250.083 li
230.279 250.189 li
230.383 250.189 li
230.383 250.293 li
230.489 250.293 li
230.489 250.399 li
230.594 250.399 li
230.701 250.504 li
230.701 250.611 li
230.805 250.611 li
230.805 250.715 li
230.912 250.715 li
231.017 250.822 li
231.124 250.926 li
231.124 251.033 li
231.226 251.033 li
231.333 251.138 li
231.439 251.244 li
231.439 251.35 li
231.544 251.35 li
231.65 251.456 li
231.756 251.561 li
231.862 251.666 li
231.966 251.772 li
232.072 251.877 li
232.177 251.983 li
232.283 252.087 li
232.389 252.194 li
232.495 252.299 li
232.601 252.405 li
232.705 252.405 li
232.705 252.51 li
232.811 252.616 li
232.916 252.722 li
233.021 252.722 li
233.021 252.828 li
233.127 252.828 li
233.127 252.933 li
233.233 252.933 li
233.233 253.039 li
233.339 253.039 li
233.339 253.144 li
233.444 253.144 li
233.444 253.249 li
233.551 253.249 li
233.551 253.356 li
233.656 253.356 li
233.656 253.462 li
233.762 253.462 li
233.866 253.567 li
233.972 253.671 li
234.078 253.671 li
234.078 253.777 li
234.183 253.777 li
234.183 253.882 li
234.289 253.882 li
234.289 253.988 li
234.395 253.988 li
234.395 254.094 li
234.604 254.094 li
234.604 254.2 li
234.711 254.2 li
234.711 254.305 li
234.816 254.305 li
234.816 254.411 li
234.922 254.411 li
234.922 254.516 li
235.027 254.516 li
235.134 254.623 li
235.239 254.623 li
235.239 254.727 li
235.343 254.727 li
235.343 254.834 li
235.449 254.834 li
235.662 255.045 li
235.766 255.15 li
235.873 255.15 li
235.873 255.255 li
235.978 255.255 li
235.978 255.36 li
236.083 255.36 li
236.083 255.466 li
236.294 255.466 li
236.294 255.572 li
236.399 255.572 li
236.399 255.677 li
236.505 255.677 li
236.505 255.784 li
236.61 255.784 li
236.717 255.888 li
236.823 255.995 li
236.927 255.995 li
236.927 256.099 li
237.034 256.099 li
237.034 256.206 li
237.139 256.206 li
237.244 256.311 li
237.349 256.311 li
237.349 256.417 li
237.456 256.417 li
237.456 256.522 li
237.561 256.522 li
237.667 256.628 li
237.772 256.628 li
237.772 256.734 li
237.879 256.734 li
237.982 256.839 li
238.088 256.839 li
238.088 256.946 li
238.194 256.946 li
238.194 257.049 li
238.405 257.049 li
238.405 257.156 li
238.51 257.156 li
238.617 257.26 li
238.72 257.367 li
238.827 257.367 li
238.827 257.471 li
239.039 257.471 li
239.039 257.578 li
239.144 257.578 li
239.144 257.683 li
239.356 257.683 li
239.356 257.79 li
239.462 257.79 li
239.462 257.895 li
239.671 257.895 li
239.671 258 li
239.777 258 li
239.882 258.106 li
239.988 258.106 li
239.988 258.211 li
240.094 258.211 li
240.2 258.318 li
240.305 258.318 li
240.305 258.422 li
240.517 258.422 li
240.517 258.529 li
240.621 258.529 li
240.727 258.633 li
240.833 258.633 li
240.833 258.739 li
240.939 258.739 li
241.044 258.844 li
241.15 258.844 li
241.15 258.95 li
241.256 258.95 li
241.361 259.056 li
241.466 259.056 li
241.466 259.162 li
241.677 259.162 li
241.677 259.267 li
241.782 259.267 li
241.888 259.373 li
241.994 259.373 li
241.994 259.478 li
242.205 259.478 li
242.205 259.583 li
242.31 259.583 li
242.31 259.689 li
242.521 259.689 li
242.521 259.794 li
242.628 259.794 li
242.733 259.901 li
242.84 259.901 li
242.943 260.007 li
243.049 260.007 li
243.049 260.112 li
243.26 260.112 li
243.26 260.217 li
243.471 260.217 li
243.471 260.323 li
243.681 260.323 li
243.681 260.428 li
243.894 260.428 li
243.894 260.534 li
244.104 260.534 li
244.104 260.639 li
244.316 260.639 li
244.422 260.745 li
244.528 260.745 li
244.633 260.85 li
244.739 260.85 li
244.843 260.956 li
245.054 260.956 li
245.054 261.061 li
245.161 261.061 li
245.265 261.167 li
245.477 261.167 li
245.477 261.273 li
245.582 261.273 li
245.688 261.379 li
245.794 261.379 li
245.9 261.484 li
246.005 261.484 li
246.111 261.59 li
246.32 261.59 li
246.32 261.695 li
246.532 261.695 li
246.532 261.801 li
246.743 261.801 li
246.743 261.906 li
247.061 261.906 li
247.061 262.011 li
247.272 262.011 li
247.377 262.118 li
247.588 262.118 li
247.588 262.222 li
247.801 262.222 li
247.801 262.329 li
248.01 262.329 li
248.116 262.433 li
248.326 262.433 li
248.326 262.54 li
248.538 262.54 li
248.538 262.645 li
248.855 262.645 li
248.855 262.751 li
249.065 262.751 li
249.172 262.856 li
249.383 262.856 li
249.488 262.962 li
249.699 262.962 li
249.803 263.067 li
250.015 263.067 li
250.015 263.173 li
250.333 263.173 li
250.333 263.279 li
250.648 263.279 li
250.648 263.384 li
250.966 263.384 li
250.966 263.491 li
251.177 263.491 li
251.177 263.595 li
251.494 263.595 li
251.494 263.701 li
251.809 263.701 li
251.809 263.805 li
252.127 263.805 li
252.127 263.912 li
252.443 263.912 li
252.443 264.017 li
252.866 264.017 li
252.866 264.123 li
252.97 264.123 li
253.077 264.123 li
253.181 264.123 li
253.181 264.229 li
253.499 264.229 li
253.499 264.334 li
253.816 264.334 li
253.816 264.44 li
254.239 264.44 li
254.239 264.545 li
254.449 264.545 li
199.035 207.011 mo
199.141 207.011 li
199.141 207.117 li
199.246 207.221 li
199.246 207.328 li
199.352 207.328 li
199.352 207.432 li
199.457 207.432 li
199.457 207.539 li
199.563 207.539 li
199.563 207.644 li
199.667 207.75 li
199.667 207.856 li
199.773 207.856 li
199.773 207.961 li
199.88 207.961 li
199.88 208.067 li
199.984 208.172 li
199.984 208.278 li
200.091 208.278 li
200.091 208.383 li
200.196 208.49 li
200.302 208.594 li
200.302 208.7 li
200.406 208.7 li
200.406 208.805 li
200.618 209.017 li
200.618 209.123 li
200.724 209.123 li
200.724 209.228 li
200.935 209.439 li
200.935 209.544 li
201.042 209.544 li
201.042 209.65 li
201.144 209.755 li
201.251 209.862 li
201.251 209.968 li
201.356 209.968 li
201.356 210.073 li
201.463 210.179 li
201.567 210.284 li
201.567 210.389 li
201.674 210.389 li
201.674 210.494 li
201.779 210.494 li
201.779 210.6 li
201.885 210.706 li
201.99 210.811 li
201.99 210.916 li
202.096 210.916 li
202.096 211.022 li
202.203 211.022 li
202.203 211.128 li
202.306 211.234 li
202.306 211.34 li
202.413 211.34 li
202.413 211.445 li
202.518 211.445 li
202.518 211.551 li
202.625 211.656 li
202.625 211.762 li
202.729 211.762 li
202.729 211.867 li
202.835 211.867 li
202.835 211.972 li
202.94 212.078 li
202.94 212.183 li
203.045 212.29 li
203.151 212.394 li
203.151 212.5 li
203.257 212.5 li
203.257 212.606 li
203.363 212.712 li
203.468 212.817 li
203.468 212.923 li
203.574 212.923 li
203.574 213.134 li
203.679 213.134 li
203.679 213.24 li
203.784 213.345 li
203.889 213.452 li
203.889 213.556 li
203.996 213.556 li
203.996 213.662 li
204.101 213.766 li
204.207 213.873 li
204.207 213.977 li
204.313 214.084 li
204.313 214.189 li
204.418 214.189 li
204.418 214.295 li
204.524 214.401 li
204.628 214.506 li
204.628 214.612 li
204.734 214.717 li
204.734 214.824 li
204.84 214.824 li
204.84 214.929 li
204.945 215.035 li
205.051 215.14 li
205.051 215.246 li
205.157 215.35 li
205.157 215.456 li
205.263 215.456 li
205.263 215.562 li
205.368 215.667 li
205.368 215.773 li
205.473 215.773 li
205.473 215.878 li
205.58 215.984 li
205.684 216.089 li
205.684 216.196 li
205.79 216.301 li
205.79 216.407 li
205.896 216.407 li
205.896 216.513 li
206.002 216.618 li
206.002 216.724 li
206.107 216.724 li
206.107 216.829 li
206.212 216.934 li
206.212 217.04 li
206.318 217.04 li
206.318 217.145 li
206.425 217.25 li
206.528 217.356 li
206.528 217.461 li
206.635 217.568 li
206.74 217.674 li
206.74 217.779 li
206.845 217.779 li
206.845 217.885 li
206.951 217.99 li
206.951 218.096 li
207.057 218.096 li
207.057 218.201 li
207.163 218.307 li
207.163 218.413 li
207.267 218.413 li
207.267 218.519 li
207.374 218.623 li
207.374 218.728 li
207.479 218.834 li
207.585 218.939 li
207.585 219.045 li
207.69 219.045 li
207.69 219.257 li
207.797 219.257 li
207.797 219.362 li
207.901 219.362 li
207.901 219.468 li
208.006 219.573 li
208.006 219.679 li
208.111 219.786 li
208.218 219.891 li
208.218 219.997 li
208.323 219.997 li
208.323 220.207 li
208.428 220.207 li
208.428 220.311 li
208.535 220.417 li
208.64 220.523 li
208.64 220.629 li
208.745 220.735 li
208.745 220.84 li
208.851 220.84 li
208.851 220.946 li
208.957 221.051 li
208.957 221.158 li
209.063 221.158 li
209.063 221.263 li
209.168 221.369 li
209.168 221.474 li
209.273 221.474 li
209.273 221.58 li
209.38 221.685 li
209.38 221.79 li
209.484 221.897 li
209.59 222.001 li
209.59 222.107 li
209.696 222.212 li
209.696 222.318 li
209.802 222.318 li
209.802 222.423 li
209.906 222.423 li
209.906 222.635 li
210.011 222.635 li
210.011 222.741 li
210.118 222.741 li
210.118 222.952 li
210.223 222.952 li
210.223 223.058 li
210.329 223.058 li
210.329 223.269 li
210.434 223.269 li
210.434 223.374 li
210.541 223.374 li
210.541 223.481 li
210.644 223.585 li
210.644 223.69 li
210.751 223.795 li
210.857 223.901 li
210.857 224.007 li
210.963 224.113 li
210.963 224.219 li
211.068 224.219 li
211.068 224.324 li
211.173 224.43 li
211.173 224.535 li
211.279 224.535 li
211.279 224.641 li
211.383 224.747 li
211.383 224.853 li
211.489 224.853 li
211.489 224.957 li
211.594 225.064 li
211.594 225.169 li
211.701 225.274 li
211.806 225.379 li
211.806 225.485 li
211.912 225.591 li
211.912 225.696 li
212.018 225.696 li
212.018 225.907 li
212.124 225.907 li
212.124 226.013 li
212.228 226.013 li
212.228 226.118 li
212.335 226.224 li
212.335 226.331 li
212.545 226.541 li
212.545 226.647 li
212.651 226.752 li
212.651 226.858 li
212.757 226.963 li
212.757 227.068 li
212.862 227.068 li
212.862 227.174 li
212.968 227.174 li
212.968 227.385 li
213.073 227.385 li
213.073 227.491 li
213.179 227.596 li
213.179 227.703 li
213.283 227.808 li
213.389 227.914 li
213.389 228.019 li
213.495 228.124 li
213.495 228.23 li
213.601 228.23 li
213.601 228.336 li
213.706 228.336 li
213.706 228.547 li
213.812 228.547 li
213.812 228.652 li
213.919 228.757 li
214.024 228.863 li
214.024 228.968 li
214.129 229.075 li
214.129 229.18 li
214.234 229.18 li
214.234 229.286 li
214.341 229.391 li
214.341 229.497 li
214.445 229.497 li
214.445 229.603 li
214.551 229.707 li
214.551 229.815 li
214.656 229.815 li
214.656 229.919 li
214.762 230.026 li
214.866 230.13 li
214.866 230.236 li
214.972 230.34 li
215.079 230.447 li
215.079 230.552 li
215.183 230.552 li
215.183 230.658 li
215.29 230.764 li
215.29 230.869 li
215.395 230.869 li
215.395 230.975 li
215.502 231.08 li
215.502 231.186 li
215.606 231.186 li
215.606 231.291 li
215.712 231.398 li
215.712 231.502 li
215.818 231.609 li
215.924 231.714 li
215.924 231.82 li
216.028 231.82 li
216.028 231.926 li
216.135 232.03 li
216.135 232.136 li
216.24 232.136 li
216.24 232.241 li
216.344 232.347 li
216.344 232.452 li
216.451 232.558 li
216.556 232.664 li
216.556 232.77 li
216.663 232.77 li
216.663 232.875 li
216.766 232.981 li
216.766 233.086 li
216.873 233.192 li
216.978 233.298 li
216.978 233.403 li
217.084 233.403 li
217.084 233.509 li
217.296 233.719 li
217.296 233.825 li
217.402 233.93 li
217.402 234.037 li
217.506 234.037 li
217.506 234.142 li
217.612 234.248 li
217.718 234.353 li
217.718 234.458 li
217.824 234.458 li
217.824 234.669 li
217.927 234.669 li
217.927 234.775 li
218.034 234.881 li
218.139 234.988 li
218.139 235.092 li
218.244 235.092 li
218.244 235.199 li
218.35 235.303 li
218.456 235.409 li
218.456 235.514 li
218.562 235.62 li
218.562 235.725 li
218.667 235.725 li
218.667 235.831 li
218.773 235.831 li
218.773 235.936 li
218.879 236.041 li
218.879 236.148 li
218.983 236.148 li
218.983 236.253 li
219.09 236.36 li
219.09 236.464 li
219.195 236.464 li
219.195 236.571 li
219.302 236.675 li
219.406 236.782 li
219.406 236.886 li
219.511 236.886 li
219.511 236.992 li
219.617 236.992 li
219.617 237.203 li
219.723 237.203 li
219.723 237.309 li
219.828 237.309 li
219.828 237.414 li
219.934 237.52 li
220.04 237.625 li
220.04 237.732 li
220.144 237.732 li
220.144 237.836 li
220.25 237.943 li
220.356 238.047 li
220.356 238.154 li
220.463 238.154 li
220.463 238.259 li
220.567 238.365 li
220.674 238.471 li
220.674 238.576 li
220.779 238.576 li
220.779 238.681 li
220.884 238.786 li
220.989 238.892 li
220.989 238.998 li
221.095 238.998 li
221.095 239.104 li
221.2 239.208 li
221.305 239.315 li
221.305 239.42 li
221.411 239.42 li
221.411 239.631 li
221.517 239.631 li
221.517 239.737 li
221.624 239.843 li
221.727 239.949 li
221.727 240.054 li
221.834 240.054 li
221.834 240.159 li
221.939 240.265 li
222.045 240.37 li
222.045 240.476 li
222.15 240.476 li
222.15 240.582 li
222.257 240.687 li
222.257 240.792 li
222.362 240.792 li
222.362 240.898 li
222.467 240.898 li
222.467 241.003 li
222.574 241.109 li
222.678 241.215 li
222.678 241.321 li
222.784 241.321 li
222.784 241.426 li
222.888 241.426 li
222.888 241.533 li
222.995 241.637 li
222.995 241.744 li
223.1 241.744 li
223.1 241.848 li
223.206 241.848 li
223.206 241.954 li
223.311 242.059 li
223.311 242.165 li
223.418 242.165 li
223.418 242.27 li
223.523 242.375 li
223.628 242.482 li
223.628 242.587 li
223.734 242.587 li
223.734 242.694 li
223.84 242.798 li
223.84 242.905 li
223.945 242.905 li
223.945 243.009 li
224.051 243.009 li
224.051 243.116 li
224.157 243.22 li
224.157 243.327 li
224.262 243.327 li
224.367 243.432 li
224.367 243.538 li
224.472 243.538 li
224.472 243.643 li
224.578 243.748 li
224.682 243.854 li
224.682 243.959 li
224.789 243.959 li
224.789 244.065 li
224.895 244.065 li
224.895 244.17 li
225.001 244.17 li
225.001 244.277 li
225.105 244.381 li
225.105 244.488 li
225.211 244.488 li
225.317 244.592 li
225.317 244.699 li
225.423 244.699 li
225.423 244.805 li
225.528 244.805 li
225.528 244.911 li
225.634 244.911 li
225.634 245.016 li
225.74 245.016 li
225.74 245.122 li
225.843 245.227 li
225.95 245.227 li
225.95 245.331 li
226.057 245.437 li
226.057 245.542 li
226.162 245.542 li
226.266 245.649 li
226.266 245.754 li
226.372 245.754 li
226.372 245.86 li
226.478 245.86 li
226.478 245.965 li
226.583 245.965 li
226.583 246.071 li
226.689 246.177 li
226.689 246.283 li
171.382 205.006 mo
171.485 204.9 li
171.592 204.9 li
171.592 204.794 li
171.697 204.794 li
171.697 204.688 li
171.803 204.583 li
171.908 204.583 li
171.908 204.477 li
172.014 204.477 li
172.014 204.372 li
172.12 204.372 li
172.12 204.266 li
172.226 204.266 li
172.226 204.161 li
172.33 204.161 li
172.33 204.055 li
172.436 204.055 li
172.543 203.949 li
172.647 203.843 li
172.753 203.738 li
172.858 203.632 li
172.965 203.528 li
173.068 203.423 li
173.175 203.423 li
173.175 203.316 li
173.28 203.316 li
173.28 203.21 li
173.385 203.21 li
173.385 203.105 li
173.491 203.105 li
173.491 202.999 li
173.597 202.999 li
173.597 202.894 li
173.704 202.894 li
173.807 202.789 li
173.915 202.683 li
174.019 202.683 li
174.019 202.577 li
174.127 202.577 li
174.127 202.471 li
174.23 202.471 li
174.23 202.366 li
174.336 202.366 li
174.336 202.26 li
174.547 202.26 li
174.547 202.155 li
174.652 202.155 li
174.652 202.048 li
174.759 202.048 li
174.759 201.944 li
174.865 201.944 li
174.968 201.838 li
175.075 201.733 li
175.18 201.733 li
175.18 201.627 li
175.286 201.627 li
175.286 201.522 li
175.391 201.522 li
175.498 201.416 li
175.603 201.416 li
175.603 201.311 li
175.708 201.311 li
175.708 201.205 li
175.814 201.205 li
175.92 201.098 li
176.025 201.098 li
176.025 200.994 li
176.13 200.994 li
176.236 200.887 li
176.342 200.887 li
176.342 200.783 li
176.446 200.783 li
176.446 200.676 li
176.658 200.676 li
176.658 200.572 li
176.763 200.572 li
176.869 200.465 li
176.975 200.465 li
176.975 200.36 li
177.081 200.36 li
177.185 200.254 li
177.291 200.254 li
177.291 200.15 li
177.398 200.15 li
177.503 200.044 li
177.608 200.044 li
177.608 199.938 li
177.819 199.938 li
177.819 199.832 li
177.925 199.832 li
178.03 199.727 li
178.136 199.727 li
178.242 199.622 li
178.346 199.622 li
178.346 199.515 li
178.558 199.515 li
178.558 199.411 li
178.769 199.411 li
178.769 199.304 li
178.981 199.304 li
178.981 199.2 li
179.086 199.2 li
179.191 199.093 li
179.298 199.093 li
179.402 198.988 li
179.508 198.988 li
179.613 198.881 li
179.825 198.881 li
179.825 198.776 li
180.035 198.776 li
180.035 198.671 li
180.247 198.671 li
180.247 198.566 li
180.564 198.566 li
180.564 198.461 li
180.882 198.461 li
180.882 198.355 li
181.091 198.355 li
181.091 198.249 li
181.408 198.249 li
181.408 198.143 li
181.725 198.143 li
181.725 198.039 li
182.042 198.039 li
182.146 197.932 li
182.569 197.932 li
182.569 197.827 li
183.096 197.827 li
183.203 197.721 li
184.046 197.721 li
184.152 197.615 li
184.997 197.615 li
185.103 197.721 li
185.946 197.721 li
186.052 197.827 li
186.58 197.827 li
186.684 197.932 li
187.107 197.932 li
187.107 198.039 li
187.529 198.039 li
187.529 198.143 li
187.952 198.143 li
187.952 198.249 li
188.268 198.249 li
188.268 198.355 li
188.585 198.355 li
188.585 198.461 li
188.903 198.461 li
188.903 198.566 li
189.114 198.566 li
189.114 198.671 li
189.326 198.671 li
189.326 198.776 li
189.535 198.776 li
189.64 198.881 li
189.746 198.881 li
189.851 198.988 li
189.958 198.988 li
190.064 199.093 li
190.168 199.093 li
190.274 199.2 li
190.38 199.2 li
190.38 199.304 li
190.591 199.304 li
190.591 199.411 li
190.802 199.411 li
190.802 199.515 li
191.013 199.515 li
191.013 199.622 li
191.224 199.622 li
191.224 199.727 li
191.329 199.727 li
191.435 199.832 li
191.541 199.832 li
191.646 199.938 li
191.752 199.938 li
191.752 200.044 li
191.858 200.044 li
191.964 200.15 li
192.068 200.15 li
192.068 200.254 li
192.175 200.254 li
192.28 200.36 li
192.385 200.36 li
192.385 200.465 li
192.491 200.465 li
192.597 200.572 li
192.703 200.676 li
192.806 200.676 li
192.806 200.783 li
192.912 200.783 li
192.912 200.887 li
193.018 200.887 li
193.018 200.994 li
193.229 200.994 li
193.229 201.098 li
193.336 201.098 li
193.336 201.205 li
193.441 201.205 li
193.441 201.311 li
193.546 201.311 li
193.546 201.416 li
193.651 201.416 li
193.651 201.522 li
193.758 201.522 li
193.758 201.627 li
193.863 201.627 li
193.968 201.733 li
194.074 201.838 li
194.284 202.048 li
194.39 202.048 li
194.39 202.155 li
194.496 202.155 li
194.496 202.26 li
194.601 202.26 li
194.601 202.366 li
194.707 202.366 li
194.707 202.471 li
194.812 202.471 li
194.812 202.577 li
194.919 202.577 li
195.024 202.683 li
195.235 202.894 li
195.342 202.999 li
195.446 203.105 li
195.552 203.21 li
195.658 203.21 li
195.658 203.316 li
195.763 203.316 li
195.763 203.423 li
195.869 203.423 li
195.869 203.528 li
195.974 203.528 li
195.974 203.632 li
196.08 203.632 li
196.08 203.738 li
196.183 203.738 li
196.183 203.843 li
196.29 203.843 li
196.29 203.949 li
196.395 203.949 li
196.395 204.055 li
196.502 204.055 li
196.502 204.161 li
196.607 204.161 li
196.607 204.266 li
196.713 204.266 li
196.713 204.372 li
196.819 204.372 li
196.819 204.477 li
196.925 204.477 li
196.925 204.583 li
197.029 204.583 li
197.029 204.688 li
197.135 204.688 li
197.135 204.794 li
197.241 204.794 li
197.241 204.9 li
197.345 204.9 li
197.345 205.006 li
197.452 205.111 li
197.558 205.217 li
197.664 205.321 li
197.664 205.427 li
197.767 205.427 li
197.767 205.533 li
197.873 205.533 li
197.873 205.638 li
197.979 205.638 li
197.979 205.745 li
198.084 205.745 li
198.084 205.849 li
198.19 205.956 li
198.296 206.06 li
198.402 206.166 li
198.402 206.272 li
198.506 206.272 li
198.506 206.378 li
198.613 206.378 li
198.613 206.483 li
198.719 206.483 li
198.719 206.589 li
198.825 206.695 li
198.825 206.8 li
198.929 206.8 li
198.929 206.907 li
199.035 206.907 li
199.035 207.011 li
143.727 234.988 mo
143.832 234.881 li
143.937 234.775 li
144.043 234.669 li
144.149 234.564 li
144.149 234.458 li
144.254 234.458 li
144.36 234.353 li
144.36 234.248 li
144.466 234.248 li
144.466 234.142 li
144.571 234.142 li
144.571 234.037 li
144.677 234.037 li
144.677 233.93 li
144.782 233.93 li
144.782 233.825 li
144.887 233.825 li
144.887 233.719 li
144.993 233.719 li
144.993 233.614 li
145.099 233.614 li
145.099 233.509 li
145.204 233.403 li
145.31 233.403 li
145.31 233.298 li
145.415 233.192 li
145.52 233.086 li
145.52 232.981 li
145.626 232.981 li
145.732 232.875 li
145.732 232.77 li
145.837 232.77 li
145.837 232.664 li
145.943 232.664 li
145.943 232.558 li
146.049 232.558 li
146.049 232.452 li
146.155 232.452 li
146.155 232.347 li
146.26 232.347 li
146.26 232.241 li
146.365 232.136 li
146.47 232.136 li
146.47 232.03 li
146.576 231.926 li
146.681 231.82 li
146.681 231.714 li
146.787 231.714 li
146.893 231.609 li
146.893 231.502 li
146.999 231.502 li
146.999 231.398 li
147.105 231.398 li
147.105 231.291 li
147.21 231.291 li
147.21 231.186 li
147.315 231.186 li
147.315 231.08 li
147.421 231.08 li
147.421 230.975 li
147.526 230.975 li
147.526 230.869 li
147.632 230.869 li
147.632 230.764 li
147.737 230.658 li
147.843 230.658 li
147.843 230.552 li
147.948 230.447 li
148.054 230.34 li
148.16 230.236 li
148.265 230.13 li
148.37 230.026 li
148.476 229.919 li
148.582 229.815 li
148.687 229.707 li
148.793 229.603 li
148.898 229.497 li
148.898 229.391 li
149.004 229.391 li
149.11 229.286 li
149.11 229.18 li
149.216 229.18 li
149.216 229.075 li
149.321 229.075 li
149.321 228.968 li
149.426 228.968 li
149.426 228.863 li
149.532 228.863 li
149.532 228.757 li
149.637 228.757 li
149.637 228.652 li
149.742 228.652 li
149.742 228.547 li
149.848 228.547 li
149.848 228.443 li
149.954 228.336 li
150.059 228.336 li
150.059 228.23 li
150.165 228.124 li
150.271 228.019 li
150.271 227.914 li
150.376 227.914 li
150.482 227.808 li
150.482 227.703 li
150.587 227.703 li
150.587 227.596 li
150.693 227.596 li
150.693 227.491 li
150.798 227.491 li
150.798 227.385 li
150.904 227.385 li
150.904 227.28 li
151.01 227.28 li
151.01 227.174 li
151.115 227.068 li
151.22 227.068 li
151.22 226.963 li
151.326 226.858 li
151.431 226.752 li
151.431 226.647 li
151.537 226.647 li
151.643 226.541 li
151.643 226.436 li
151.748 226.436 li
151.748 226.331 li
151.854 226.331 li
151.854 226.224 li
151.96 226.224 li
151.96 226.118 li
152.065 226.118 li
152.065 226.013 li
152.17 226.013 li
152.17 225.907 li
152.276 225.802 li
152.381 225.802 li
152.381 225.696 li
152.487 225.591 li
152.593 225.485 li
152.593 225.379 li
152.698 225.379 li
152.804 225.274 li
152.804 225.169 li
152.909 225.169 li
152.909 225.064 li
153.015 225.064 li
153.015 224.957 li
153.12 224.957 li
153.12 224.853 li
153.225 224.853 li
153.225 224.747 li
153.331 224.747 li
153.331 224.641 li
153.437 224.641 li
153.437 224.535 li
153.543 224.535 li
153.543 224.43 li
153.649 224.324 li
153.754 224.324 li
153.754 224.219 li
153.859 224.113 li
153.965 224.007 li
154.07 223.901 li
154.281 223.69 li
154.492 223.481 li
154.598 223.374 li
154.704 223.269 li
154.809 223.163 li
154.809 223.058 li
154.915 223.058 li
155.02 222.952 li
155.02 222.846 li
155.126 222.846 li
155.126 222.741 li
155.231 222.741 li
155.231 222.635 li
155.337 222.635 li
155.337 222.529 li
155.443 222.529 li
155.443 222.423 li
155.548 222.423 li
155.548 222.318 li
155.654 222.318 li
155.654 222.212 li
155.76 222.212 li
155.76 222.107 li
155.865 222.001 li
155.97 221.897 li
156.076 221.79 li
156.076 221.685 li
156.181 221.685 li
156.181 221.58 li
156.287 221.58 li
156.287 221.474 li
156.392 221.474 li
156.392 221.369 li
156.498 221.369 li
156.498 221.263 li
156.603 221.158 li
156.709 221.051 li
156.815 220.946 li
156.815 220.84 li
156.92 220.84 li
156.92 220.735 li
157.026 220.735 li
157.026 220.629 li
157.132 220.629 li
157.132 220.523 li
157.237 220.523 li
157.237 220.417 li
157.343 220.311 li
157.448 220.207 li
157.553 220.102 li
157.553 219.997 li
157.659 219.997 li
157.659 219.891 li
157.765 219.891 li
157.765 219.786 li
157.87 219.786 li
157.87 219.679 li
157.976 219.679 li
157.976 219.573 li
158.081 219.573 li
158.081 219.468 li
158.187 219.468 li
158.187 219.362 li
158.504 219.045 li
158.609 218.939 li
158.609 218.834 li
158.715 218.834 li
158.715 218.728 li
158.82 218.728 li
158.82 218.623 li
158.926 218.623 li
158.926 218.519 li
159.031 218.519 li
159.031 218.413 li
159.137 218.413 li
159.137 218.307 li
159.242 218.307 li
159.242 218.201 li
159.348 218.201 li
159.348 218.096 li
159.454 218.096 li
159.454 217.99 li
159.559 217.885 li
159.664 217.779 li
159.77 217.674 li
159.875 217.568 li
159.875 217.461 li
159.981 217.461 li
159.981 217.356 li
160.087 217.356 li
160.087 217.25 li
160.193 217.25 li
160.193 217.145 li
160.298 217.145 li
160.298 217.04 li
160.404 217.04 li
160.404 216.934 li
160.51 216.934 li
160.51 216.829 li
160.719 216.618 li
160.825 216.513 li
160.825 216.407 li
160.931 216.407 li
160.931 216.301 li
161.036 216.301 li
161.036 216.196 li
161.143 216.196 li
161.143 216.089 li
161.248 216.089 li
161.248 215.984 li
161.353 215.878 li
161.459 215.773 li
161.564 215.667 li
161.564 215.562 li
161.67 215.562 li
161.67 215.456 li
161.776 215.456 li
161.776 215.35 li
161.881 215.35 li
161.881 215.246 li
161.987 215.14 li
162.092 215.14 li
162.092 215.035 li
162.198 214.929 li
162.198 214.824 li
162.303 214.824 li
162.409 214.717 li
162.409 214.612 li
162.514 214.612 li
162.514 214.506 li
162.62 214.506 li
162.62 214.401 li
162.725 214.401 li
162.725 214.295 li
162.831 214.295 li
162.831 214.189 li
162.937 214.189 li
162.937 214.084 li
163.042 214.084 li
163.042 213.977 li
163.147 213.873 li
163.254 213.766 li
163.359 213.662 li
163.465 213.556 li
163.465 213.452 li
163.57 213.452 li
163.57 213.345 li
163.676 213.345 li
163.676 213.24 li
163.781 213.24 li
163.781 213.134 li
163.886 213.134 li
163.886 213.028 li
163.992 213.028 li
163.992 212.923 li
164.097 212.923 li
164.097 212.817 li
164.203 212.712 li
164.309 212.606 li
164.415 212.5 li
164.415 212.394 li
164.52 212.394 li
164.52 212.29 li
164.626 212.29 li
164.626 212.183 li
164.73 212.183 li
164.73 212.078 li
164.836 212.078 li
164.836 211.972 li
164.942 211.867 li
165.048 211.762 li
165.153 211.656 li
165.153 211.551 li
165.26 211.551 li
165.26 211.445 li
165.365 211.445 li
165.365 211.34 li
165.469 211.34 li
165.469 211.234 li
165.575 211.234 li
165.575 211.128 li
165.681 211.022 li
165.786 210.916 li
165.892 210.811 li
165.892 210.706 li
165.998 210.706 li
165.998 210.6 li
166.103 210.6 li
166.103 210.494 li
166.208 210.494 li
166.208 210.389 li
166.313 210.389 li
166.313 210.284 li
166.42 210.284 li
166.42 210.179 li
166.525 210.179 li
166.525 210.073 li
166.631 209.968 li
166.736 209.862 li
166.843 209.755 li
166.947 209.65 li
166.947 209.544 li
167.052 209.544 li
167.052 209.439 li
167.16 209.439 li
167.16 209.333 li
167.264 209.333 li
167.264 209.228 li
167.37 209.228 li
167.37 209.123 li
167.475 209.123 li
167.475 209.017 li
167.582 209.017 li
167.582 208.911 li
167.685 208.911 li
167.685 208.805 li
167.792 208.805 li
167.792 208.7 li
167.897 208.7 li
167.897 208.594 li
168.004 208.49 li
168.107 208.49 li
168.107 208.383 li
168.214 208.278 li
168.32 208.172 li
168.426 208.067 li
168.531 207.961 li
168.636 207.856 li
168.743 207.75 li
168.846 207.644 li
168.846 207.539 li
168.953 207.539 li
169.058 207.432 li
169.165 207.328 li
169.165 207.221 li
169.27 207.221 li
169.27 207.117 li
169.375 207.117 li
169.481 207.011 li
169.481 206.907 li
169.585 206.907 li
169.585 206.8 li
169.691 206.8 li
169.691 206.695 li
169.797 206.695 li
169.797 206.589 li
169.903 206.589 li
169.903 206.483 li
170.008 206.483 li
170.008 206.378 li
170.114 206.272 li
170.219 206.272 li
170.219 206.166 li
170.326 206.166 li
170.326 206.06 li
170.431 205.956 li
170.536 205.849 li
170.643 205.849 li
170.643 205.745 li
170.747 205.638 li
170.853 205.533 li
170.959 205.533 li
170.959 205.427 li
171.064 205.321 li
171.169 205.217 li
171.275 205.217 li
171.275 205.111 li
171.382 205.006 li
116.072 262.54 mo
116.177 262.433 li
116.283 262.329 li
116.388 262.329 li
116.388 262.222 li
116.494 262.222 li
116.6 262.118 li
116.706 262.118 li
116.706 262.011 li
116.811 262.011 li
116.811 261.906 li
116.917 261.906 li
117.022 261.801 li
117.127 261.695 li
117.233 261.695 li
117.233 261.59 li
117.339 261.59 li
117.339 261.484 li
117.444 261.484 li
117.55 261.379 li
117.656 261.379 li
117.656 261.273 li
117.761 261.273 li
117.761 261.167 li
117.867 261.167 li
117.867 261.061 li
117.972 261.061 li
118.077 260.956 li
118.183 260.85 li
118.288 260.85 li
118.288 260.745 li
118.394 260.745 li
118.394 260.639 li
118.5 260.639 li
118.5 260.534 li
118.712 260.534 li
118.712 260.428 li
118.817 260.428 li
118.817 260.323 li
118.922 260.323 li
118.922 260.217 li
119.028 260.217 li
119.133 260.112 li
119.238 260.007 li
119.344 260.007 li
119.344 259.901 li
119.45 259.901 li
119.45 259.794 li
119.555 259.794 li
119.661 259.689 li
119.767 259.583 li
119.872 259.583 li
119.872 259.478 li
119.978 259.478 li
120.083 259.373 li
120.189 259.267 li
120.294 259.267 li
120.294 259.162 li
120.4 259.162 li
120.4 259.056 li
120.505 259.056 li
120.716 258.844 li
120.822 258.739 li
120.927 258.739 li
120.927 258.633 li
121.033 258.633 li
121.033 258.529 li
121.139 258.529 li
121.139 258.422 li
121.244 258.422 li
121.244 258.318 li
121.349 258.318 li
121.349 258.211 li
121.455 258.211 li
121.561 258.106 li
121.666 258 li
121.772 257.895 li
121.878 257.79 li
121.983 257.79 li
121.983 257.683 li
122.089 257.683 li
122.089 257.578 li
122.194 257.578 li
122.194 257.471 li
122.299 257.471 li
122.299 257.367 li
122.405 257.367 li
122.405 257.26 li
122.511 257.26 li
122.511 257.156 li
122.616 257.156 li
122.721 257.049 li
122.827 256.946 li
122.827 256.839 li
122.932 256.839 li
122.932 256.734 li
123.038 256.734 li
123.144 256.628 li
123.25 256.522 li
123.355 256.417 li
123.461 256.311 li
123.567 256.206 li
123.672 256.099 li
123.777 256.099 li
123.777 255.995 li
123.883 255.888 li
123.988 255.784 li
124.094 255.784 li
124.094 255.677 li
124.2 255.677 li
124.2 255.572 li
124.305 255.466 li
124.411 255.466 li
124.411 255.36 li
124.517 255.36 li
124.517 255.255 li
124.621 255.255 li
124.621 255.15 li
124.727 255.15 li
124.727 255.045 li
124.833 255.045 li
124.833 254.939 li
124.938 254.939 li
125.044 254.834 li
125.044 254.727 li
125.149 254.727 li
125.149 254.623 li
125.256 254.623 li
125.361 254.516 li
125.466 254.411 li
125.466 254.305 li
125.571 254.305 li
125.677 254.2 li
125.783 254.094 li
125.888 253.988 li
125.994 253.882 li
126.099 253.777 li
126.205 253.671 li
126.311 253.567 li
126.416 253.462 li
126.522 253.356 li
126.627 253.249 li
126.733 253.144 li
126.839 253.039 li
126.944 252.933 li
127.049 252.828 li
127.154 252.722 li
127.26 252.616 li
127.26 252.51 li
127.366 252.51 li
127.577 252.299 li
127.577 252.194 li
127.683 252.194 li
127.683 252.087 li
127.788 252.087 li
127.894 251.983 li
127.894 251.877 li
127.999 251.877 li
127.999 251.772 li
128.105 251.772 li
128.105 251.666 li
128.21 251.666 li
128.21 251.561 li
128.316 251.561 li
128.316 251.456 li
128.422 251.456 li
128.422 251.35 li
128.527 251.244 li
128.633 251.244 li
128.633 251.138 li
128.738 251.138 li
128.738 251.033 li
128.843 250.926 li
128.949 250.822 li
129.055 250.822 li
129.055 250.715 li
129.16 250.611 li
129.266 250.504 li
129.371 250.504 li
129.371 250.399 li
129.477 250.293 li
129.583 250.189 li
129.688 250.083 li
129.794 249.977 li
129.899 249.873 li
130.005 249.766 li
130.111 249.661 li
130.216 249.554 li
130.321 249.45 li
130.426 249.343 li
130.532 249.239 li
130.638 249.132 li
130.744 249.027 li
130.849 248.92 li
130.955 248.815 li
131.061 248.709 li
131.061 248.605 li
131.166 248.605 li
131.271 248.499 li
131.271 248.394 li
131.377 248.394 li
131.377 248.289 li
131.482 248.289 li
131.482 248.182 li
131.588 248.182 li
131.588 248.078 li
131.694 248.078 li
131.694 247.971 li
131.799 247.971 li
131.799 247.866 li
131.905 247.866 li
131.905 247.76 li
132.01 247.76 li
132.01 247.655 li
132.116 247.548 li
132.221 247.443 li
132.327 247.337 li
132.327 247.232 li
132.432 247.232 li
132.432 247.126 li
132.538 247.126 li
132.538 247.021 li
132.643 247.021 li
132.643 246.916 li
132.749 246.916 li
132.749 246.81 li
132.855 246.705 li
132.961 246.599 li
133.066 246.494 li
133.066 246.388 li
133.171 246.388 li
133.171 246.283 li
133.277 246.283 li
133.277 246.177 li
133.383 246.177 li
133.383 246.071 li
133.488 246.071 li
133.488 245.965 li
133.593 245.86 li
133.699 245.754 li
133.805 245.649 li
133.805 245.542 li
133.91 245.542 li
133.91 245.437 li
134.016 245.437 li
134.016 245.331 li
134.121 245.331 li
134.121 245.227 li
134.227 245.227 li
134.227 245.122 li
134.332 245.122 li
134.332 245.016 li
134.438 245.016 li
134.438 244.911 li
134.544 244.911 li
134.544 244.805 li
134.649 244.699 li
134.755 244.699 li
134.755 244.592 li
134.86 244.488 li
134.966 244.381 li
135.071 244.277 li
135.177 244.17 li
135.282 244.065 li
135.388 243.959 li
135.493 243.854 li
135.599 243.748 li
135.704 243.643 li
135.81 243.538 li
135.81 243.432 li
135.916 243.432 li
136.021 243.327 li
136.021 243.22 li
136.127 243.22 li
136.127 243.116 li
136.233 243.116 li
136.233 243.009 li
136.338 243.009 li
136.338 242.905 li
136.443 242.905 li
136.443 242.798 li
136.549 242.798 li
136.549 242.694 li
136.654 242.694 li
136.654 242.587 li
136.76 242.587 li
136.76 242.482 li
136.866 242.375 li
136.971 242.375 li
136.971 242.27 li
137.077 242.165 li
137.182 242.059 li
137.182 241.954 li
137.288 241.954 li
137.393 241.848 li
137.393 241.744 li
137.499 241.744 li
137.499 241.637 li
137.605 241.637 li
137.605 241.533 li
137.71 241.533 li
137.71 241.426 li
137.816 241.426 li
137.816 241.321 li
137.921 241.321 li
137.921 241.215 li
138.026 241.215 li
138.026 241.109 li
138.132 241.003 li
138.238 240.898 li
138.343 240.792 li
138.449 240.687 li
138.449 240.582 li
138.555 240.582 li
138.555 240.476 li
138.66 240.476 li
138.66 240.37 li
138.766 240.37 li
138.766 240.265 li
138.871 240.265 li
138.871 240.159 li
138.976 240.159 li
138.976 240.054 li
139.082 240.054 li
139.082 239.949 li
139.188 239.949 li
139.188 239.843 li
139.293 239.843 li
139.293 239.737 li
139.399 239.631 li
139.505 239.526 li
139.61 239.42 li
139.716 239.315 li
139.716 239.208 li
139.82 239.208 li
139.82 239.104 li
139.926 239.104 li
139.926 238.998 li
140.032 238.998 li
140.032 238.892 li
140.137 238.892 li
140.137 238.786 li
140.243 238.786 li
140.243 238.681 li
140.349 238.681 li
140.349 238.576 li
140.455 238.471 li
140.56 238.471 li
140.56 238.365 li
140.666 238.259 li
140.771 238.154 li
140.771 238.047 li
140.876 238.047 li
140.982 237.943 li
140.982 237.836 li
141.088 237.836 li
141.088 237.732 li
141.193 237.732 li
141.193 237.625 li
141.299 237.625 li
141.299 237.52 li
141.404 237.52 li
141.404 237.414 li
141.51 237.414 li
141.51 237.309 li
141.615 237.203 li
141.721 237.203 li
141.721 237.097 li
141.932 236.886 li
141.932 236.782 li
142.038 236.782 li
142.143 236.675 li
142.143 236.571 li
142.248 236.571 li
142.248 236.464 li
142.354 236.464 li
142.354 236.36 li
142.46 236.36 li
142.46 236.253 li
142.566 236.253 li
142.566 236.148 li
142.671 236.148 li
142.671 236.041 li
142.777 236.041 li
142.777 235.936 li
142.882 235.936 li
142.882 235.831 li
142.988 235.725 li
143.093 235.725 li
143.093 235.62 li
143.198 235.514 li
143.304 235.409 li
143.41 235.303 li
143.515 235.199 li
143.621 235.092 li
143.727 234.988 li
88.418 274.152 mo
88.629 274.046 li
88.84 274.046 li
88.84 273.94 li
89.156 273.94 li
89.156 273.834 li
89.473 273.834 li
89.473 273.729 li
89.79 273.729 li
89.79 273.624 li
90.212 273.624 li
90.212 273.519 li
90.529 273.519 li
90.634 273.414 li
90.951 273.414 li
90.951 273.308 li
91.373 273.308 li
91.373 273.202 li
91.796 273.202 li
91.796 273.097 li
92.112 273.097 li
92.217 272.991 li
92.534 272.991 li
92.534 272.885 li
92.956 272.885 li
92.956 272.78 li
93.273 272.78 li
93.273 272.674 li
93.59 272.674 li
93.59 272.568 li
93.906 272.568 li
93.906 272.462 li
94.223 272.462 li
94.223 272.357 li
94.539 272.357 li
94.539 272.251 li
94.962 272.251 li
94.962 272.146 li
95.279 272.146 li
95.279 272.04 li
95.595 272.04 li
95.595 271.936 li
95.912 271.936 li
95.912 271.83 li
96.334 271.83 li
96.334 271.724 li
96.651 271.724 li
96.651 271.619 li
96.968 271.619 li
96.968 271.513 li
97.284 271.513 li
97.39 271.408 li
97.706 271.408 li
97.706 271.302 li
98.023 271.302 li
98.023 271.197 li
98.34 271.197 li
98.34 271.09 li
98.656 271.09 li
98.656 270.985 li
98.973 270.985 li
98.973 270.879 li
99.184 270.879 li
99.184 270.774 li
99.501 270.774 li
99.501 270.668 li
99.817 270.668 li
99.817 270.562 li
100.134 270.562 li
100.134 270.457 li
100.345 270.457 li
100.45 270.35 li
100.662 270.35 li
100.767 270.247 li
100.978 270.247 li
101.084 270.141 li
101.295 270.141 li
101.401 270.036 li
101.612 270.036 li
101.612 269.93 li
101.928 269.93 li
101.928 269.825 li
102.245 269.825 li
102.245 269.718 li
102.562 269.718 li
102.562 269.612 li
102.773 269.612 li
102.773 269.507 li
103.089 269.507 li
103.089 269.401 li
103.406 269.401 li
103.406 269.296 li
103.618 269.296 li
103.722 269.19 li
103.934 269.19 li
103.934 269.084 li
104.145 269.084 li
104.145 268.979 li
104.356 268.979 li
104.462 268.873 li
104.567 268.873 li
104.673 268.767 li
104.883 268.767 li
104.883 268.663 li
105.095 268.663 li
105.095 268.557 li
105.306 268.557 li
105.411 268.452 li
105.623 268.452 li
105.623 268.346 li
105.834 268.346 li
105.834 268.24 li
106.045 268.24 li
106.045 268.135 li
106.256 268.135 li
106.256 268.029 li
106.467 268.029 li
106.572 267.924 li
106.784 267.924 li
106.784 267.818 li
106.995 267.818 li
106.995 267.713 li
107.206 267.713 li
107.311 267.607 li
107.417 267.607 li
107.522 267.501 li
107.628 267.501 li
107.734 267.395 li
107.84 267.395 li
107.945 267.29 li
108.05 267.29 li
108.156 267.184 li
108.261 267.184 li
108.261 267.079 li
108.472 267.079 li
108.578 266.973 li
108.684 266.973 li
108.684 266.868 li
108.895 266.868 li
109 266.762 li
109.106 266.762 li
109.212 266.657 li
109.317 266.657 li
109.423 266.552 li
109.528 266.552 li
109.633 266.446 li
109.739 266.446 li
109.739 266.34 li
109.95 266.34 li
109.95 266.235 li
110.162 266.235 li
110.162 266.128 li
110.267 266.128 li
110.372 266.023 li
110.478 266.023 li
110.478 265.917 li
110.689 265.917 li
110.689 265.812 li
110.795 265.812 li
110.9 265.707 li
111.006 265.707 li
111.112 265.601 li
111.217 265.601 li
111.217 265.496 li
111.428 265.496 li
111.428 265.389 li
111.639 265.389 li
111.639 265.285 li
111.85 265.285 li
111.85 265.178 li
111.956 265.178 li
112.061 265.074 li
112.167 265.074 li
112.272 264.968 li
112.378 264.968 li
112.378 264.863 li
112.589 264.863 li
112.589 264.756 li
112.695 264.756 li
112.695 264.651 li
112.905 264.651 li
112.905 264.545 li
113.011 264.545 li
113.116 264.44 li
113.222 264.44 li
113.222 264.334 li
113.328 264.334 li
113.433 264.229 li
113.539 264.229 li
113.539 264.123 li
113.645 264.123 li
113.75 264.017 li
113.855 264.017 li
113.855 263.912 li
113.961 263.912 li
113.961 263.805 li
114.067 263.805 li
114.172 263.701 li
114.278 263.701 li
114.278 263.595 li
114.383 263.595 li
114.489 263.491 li
114.594 263.491 li
114.594 263.384 li
114.7 263.384 li
114.805 263.279 li
114.911 263.279 li
114.911 263.173 li
115.122 263.173 li
115.122 263.067 li
115.334 263.067 li
115.334 262.962 li
115.439 262.962 li
115.545 262.856 li
115.65 262.856 li
115.65 262.751 li
115.756 262.751 li
115.861 262.645 li
115.967 262.645 li
115.967 262.54 li
116.072 262.54 li
.694423 .677272 .637385 .738643 cmyk
@
.35 lw
273.342 270.668 mo
273.763 270.668 li
273.553 270.668 mo
273.553 271.724 li
273.342 270.35 mo
273.763 270.35 li
273.553 270.35 mo
273.553 269.19 li
265.11 268.767 mo
265.532 268.767 li
265.32 268.767 mo
265.32 269.825 li
265.11 268.452 mo
265.532 268.452 li
265.32 268.452 mo
265.32 267.29 li
249.91 261.906 mo
250.333 261.906 li
250.121 261.906 mo
250.121 262.962 li
249.91 261.379 mo
250.333 261.379 li
250.121 261.379 mo
250.121 260.428 li
242.521 258.106 mo
242.943 258.106 li
242.733 258.106 mo
242.733 259.162 li
242.521 257.578 mo
242.943 257.578 li
242.733 257.578 mo
242.733 256.628 li
233.551 250.504 mo
233.972 250.504 li
233.762 250.504 mo
233.762 251.561 li
233.551 250.083 mo
233.972 250.083 li
233.762 250.083 mo
233.762 249.027 li
225.634 241.744 mo
226.057 241.744 li
225.843 241.744 mo
225.843 242.694 li
225.634 241.215 mo
226.057 241.215 li
225.843 241.215 mo
225.843 240.159 li
215.29 231.186 mo
215.712 231.186 li
215.502 231.186 mo
215.502 232.03 li
215.29 230.34 mo
215.712 230.34 li
215.502 230.34 mo
215.502 229.497 li
208.745 222.318 mo
209.168 222.318 li
208.957 222.318 mo
208.957 223.163 li
208.745 221.58 mo
209.168 221.58 li
208.957 221.58 mo
208.957 220.629 li
200.618 209.439 mo
201.042 209.439 li
200.829 209.439 mo
200.829 209.968 li
200.618 207.961 mo
201.042 207.961 li
200.829 207.961 mo
200.829 207.432 li
194.074 199.622 mo
194.496 199.622 li
194.284 199.622 mo
194.284 199.832 li
194.074 197.615 mo
194.496 197.615 li
194.284 197.615 mo
194.284 197.298 li
188.797 192.759 mo
189.219 192.759 li
189.008 192.759 mo
189.008 192.866 li
188.797 190.542 mo
189.219 190.542 li
189.008 190.542 mo
189.008 190.331 li
184.468 191.598 mo
184.891 191.598 li
184.68 191.598 mo
184.68 191.07 li
184.468 187.904 mo
184.891 187.904 li
184.68 187.904 mo
184.68 188.538 li
180.882 195.082 mo
181.302 195.082 li
181.091 195.082 mo
181.091 194.766 li
180.882 191.915 mo
181.302 191.915 li
181.091 191.915 mo
181.091 192.231 li
178.875 202.999 mo
179.298 202.999 li
179.086 202.999 mo
179.086 202.366 li
178.875 199.2 mo
179.298 199.2 li
179.086 199.2 mo
179.086 199.832 li
173.704 200.36 mo
174.127 200.36 li
173.915 200.36 mo
173.915 200.465 li
173.704 198.039 mo
174.127 198.039 li
173.915 198.039 mo
173.915 197.932 li
170.219 209.544 mo
170.643 209.544 li
170.431 209.544 mo
170.431 208.7 li
170.219 205.217 mo
170.643 205.217 li
170.431 205.217 mo
170.431 206.166 li
167.37 209.333 mo
167.792 209.333 li
167.582 209.333 mo
167.582 209.333 li
167.37 206.695 mo
167.792 206.695 li
167.582 206.695 mo
167.582 206.8 li
163.992 210.916 mo
164.415 210.916 li
164.203 210.916 mo
164.203 210.6 li
163.992 207.644 mo
164.415 207.644 li
164.203 207.644 mo
164.203 208.067 li
160.404 219.679 mo
160.825 219.679 li
160.614 219.679 mo
160.614 219.362 li
160.404 216.618 mo
160.825 216.618 li
160.614 216.618 mo
160.614 216.829 li
156.076 227.808 mo
156.498 227.808 li
156.287 227.808 mo
156.287 226.331 li
156.076 222.318 mo
156.498 222.318 li
156.287 222.318 mo
156.287 223.795 li
151.537 226.752 mo
151.96 226.752 li
151.748 226.752 mo
151.748 226.963 li
151.537 224.747 mo
151.96 224.747 li
151.748 224.747 mo
151.748 224.43 li
147.843 232.03 mo
148.265 232.03 li
148.054 232.03 mo
148.054 231.398 li
147.843 228.124 mo
148.265 228.124 li
148.054 228.124 mo
148.054 228.863 li
144.571 234.881 mo
144.993 234.881 li
144.782 234.881 mo
144.782 235.199 li
144.571 232.875 mo
144.993 232.875 li
144.782 232.875 mo
144.782 232.664 li
140.56 235.62 mo
140.982 235.62 li
140.771 235.62 mo
140.771 233.298 li
140.56 228.336 mo
140.982 228.336 li
140.771 228.336 mo
140.771 230.764 li
135.493 247.337 mo
135.916 247.337 li
135.704 247.337 mo
135.704 246.494 li
135.493 243.22 mo
135.916 243.22 li
135.704 243.22 mo
135.704 243.959 li
132.749 246.494 mo
133.171 246.494 li
132.961 246.494 mo
132.961 243.327 li
132.749 237.732 mo
133.171 237.732 li
132.961 237.732 mo
132.961 240.792 li
128.422 260.007 mo
128.843 260.007 li
128.633 260.007 mo
128.633 257.26 li
128.422 251.983 mo
128.843 251.983 li
128.633 251.983 mo
128.633 254.727 li
124.094 260.323 mo
124.517 260.323 li
124.305 260.323 mo
124.305 257.895 li
124.094 252.933 mo
124.517 252.933 li
124.305 252.933 mo
124.305 255.36 li
120.505 261.167 mo
120.927 261.167 li
120.716 261.167 mo
120.716 258.529 li
120.505 253.356 mo
120.927 253.356 li
120.716 253.356 mo
120.716 255.995 li
117.972 268.767 mo
118.394 268.767 li
118.183 268.767 mo
118.183 266.128 li
117.972 260.85 mo
118.394 260.85 li
118.183 260.85 mo
118.183 263.595 li
111.428 265.496 mo
111.85 265.496 li
111.639 265.496 mo
111.639 263.595 li
111.428 259.056 mo
111.85 259.056 li
111.639 259.056 mo
111.639 261.061 li
107.734 270.247 mo
108.156 270.247 li
107.945 270.247 mo
107.945 269.825 li
107.734 266.973 mo
108.156 266.973 li
107.945 266.973 mo
107.945 267.29 li
99.923 271.513 mo
100.345 271.513 li
100.134 271.513 mo
100.134 269.825 li
99.923 265.707 mo
100.345 265.707 li
100.134 265.707 mo
100.134 267.29 li
90.634 275.208 mo
91.057 275.208 li
90.845 275.208 mo
90.845 274.892 li
90.634 272.146 mo
91.057 272.146 li
90.845 272.146 mo
90.845 272.357 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
grestore
273.87 270.668 mo
274.293 270.668 li
274.081 270.668 mo
274.081 272.04 li
273.87 270.35 mo
274.293 270.35 li
274.081 270.35 mo
274.081 268.873 li
258.354 265.707 mo
258.777 265.707 li
258.565 265.707 mo
258.565 267.079 li
258.354 265.178 mo
258.777 265.178 li
258.565 265.178 mo
258.565 263.912 li
250.966 263.173 mo
251.387 263.173 li
251.177 263.173 mo
251.177 264.545 li
250.966 262.645 mo
251.387 262.645 li
251.177 262.645 mo
251.177 261.379 li
241.888 256.839 mo
242.31 256.839 li
242.1 256.839 mo
242.1 258.211 li
241.888 256.311 mo
242.31 256.311 li
242.1 256.311 mo
242.1 255.045 li
233.866 250.504 mo
234.289 250.504 li
234.078 250.504 mo
234.078 251.877 li
233.866 250.083 mo
234.289 250.083 li
234.078 250.083 mo
234.078 248.709 li
223.418 243.116 mo
223.84 243.116 li
223.628 243.116 mo
223.628 244.277 li
223.418 242.375 mo
223.84 242.375 li
223.628 242.375 mo
223.628 241.109 li
216.766 234.248 mo
217.19 234.248 li
216.978 234.248 mo
216.978 235.514 li
216.766 233.614 mo
217.19 233.614 li
216.978 233.614 mo
216.978 232.347 li
208.218 221.79 mo
208.64 221.79 li
208.428 221.79 mo
208.428 222.846 li
208.218 220.735 mo
208.64 220.735 li
208.428 220.735 mo
208.428 219.679 li
201.567 209.017 mo
201.99 209.017 li
201.779 209.017 mo
201.779 209.65 li
201.567 207.011 mo
201.99 207.011 li
201.779 207.011 mo
201.779 206.483 li
196.607 200.15 mo
197.029 200.15 li
196.819 200.15 mo
196.819 200.783 li
196.607 198.249 mo
197.029 198.249 li
196.819 198.249 mo
196.819 197.615 li
192.175 196.455 mo
192.597 196.455 li
192.385 196.455 mo
192.385 196.349 li
192.175 193.181 mo
192.597 193.181 li
192.385 193.181 mo
192.385 193.181 li
188.268 197.298 mo
188.69 197.298 li
188.48 197.298 mo
188.48 197.615 li
188.268 194.872 mo
188.69 194.872 li
188.48 194.872 mo
188.48 194.449 li
186.157 204.266 mo
186.58 204.266 li
186.368 204.266 mo
186.368 203.949 li
186.157 200.465 mo
186.58 200.465 li
186.368 200.465 mo
186.368 200.783 li
181.302 198.988 mo
181.725 198.988 li
181.513 198.988 mo
181.513 199.515 li
181.302 196.877 mo
181.725 196.877 li
181.513 196.877 mo
181.513 196.349 li
177.503 202.789 mo
177.925 202.789 li
177.713 202.789 mo
177.713 202.683 li
177.503 199.411 mo
177.925 199.411 li
177.713 199.411 mo
177.713 199.515 li
174.547 205.533 mo
174.968 205.533 li
174.759 205.533 mo
174.759 205.849 li
174.547 202.894 mo
174.968 202.894 li
174.759 202.894 mo
174.759 202.683 li
171.382 205.745 mo
171.803 205.745 li
171.592 205.745 mo
171.592 205.849 li
171.382 202.789 mo
171.803 202.789 li
171.592 202.789 mo
171.592 202.683 li
167.792 211.972 mo
168.214 211.972 li
168.004 211.972 mo
168.004 212.183 li
167.792 209.123 mo
168.214 209.123 li
168.004 209.123 mo
168.004 209.017 li
163.254 223.269 mo
163.676 223.269 li
163.465 223.269 mo
163.465 222.212 li
163.254 218.096 mo
163.676 218.096 li
163.465 218.096 mo
163.465 219.045 li
158.609 219.151 mo
159.031 219.151 li
158.82 219.151 mo
158.82 219.679 li
158.609 217.145 mo
159.031 217.145 li
158.82 217.145 mo
158.82 216.513 li
155.02 224.43 mo
155.443 224.43 li
155.231 224.43 mo
155.231 224.113 li
155.02 220.735 mo
155.443 220.735 li
155.231 220.735 mo
155.231 220.946 li
151.748 228.547 mo
152.17 228.547 li
151.96 228.547 mo
151.96 229.18 li
151.748 226.647 mo
152.17 226.647 li
151.96 226.647 mo
151.96 226.013 li
147.632 232.981 mo
148.054 232.981 li
147.843 232.981 mo
147.843 231.08 li
147.632 226.013 mo
148.054 226.013 li
147.843 226.013 mo
147.843 227.914 li
142.566 244.065 mo
142.988 244.065 li
142.777 244.065 mo
142.777 243.643 li
142.566 240.159 mo
142.988 240.159 li
142.777 240.159 mo
142.777 240.476 li
139.82 245.016 mo
140.243 245.016 li
140.032 245.016 mo
140.032 242.375 li
139.82 236.675 mo
140.243 236.675 li
140.032 236.675 mo
140.032 239.208 li
135.282 250.399 mo
135.704 250.399 li
135.493 250.399 mo
135.493 248.078 li
135.282 242.587 mo
135.704 242.587 li
135.493 242.587 mo
135.493 244.911 li
130.955 249.343 mo
131.377 249.343 li
131.166 249.343 mo
131.166 247.443 li
130.955 242.375 mo
131.377 242.375 li
131.166 242.375 mo
131.166 244.277 li
127.471 251.033 mo
127.894 251.033 li
127.683 251.033 mo
127.683 248.709 li
127.471 243.327 mo
127.894 243.327 li
127.683 243.327 mo
127.683 245.542 li
124.727 257.79 mo
125.149 257.79 li
124.938 257.79 mo
124.938 255.677 li
124.727 250.399 mo
125.149 250.399 li
124.938 250.399 mo
124.938 252.51 li
117.761 263.173 mo
118.183 263.173 li
117.972 263.173 mo
117.972 262.011 li
117.761 257.578 mo
118.183 257.578 li
117.972 257.578 mo
117.972 258.844 li
113.855 260.745 mo
114.278 260.745 li
114.067 260.745 mo
114.067 260.112 li
113.855 256.311 mo
114.278 256.311 li
114.067 256.311 mo
114.067 256.946 li
106.572 270.141 mo
106.995 270.141 li
106.784 270.141 mo
106.784 268.873 li
106.572 264.545 mo
106.995 264.545 li
106.784 264.545 mo
106.784 265.707 li
97.178 270.774 mo
97.601 270.774 li
97.39 270.774 mo
97.39 270.774 li
97.178 267.713 mo
97.601 267.713 li
97.39 267.713 mo
97.39 267.607 li
.95346 .916228 .0104982 .0011902 cmyk
@
gsave
89.579 151.905 mo
279.676 151.905 li
279.676 278.164 li
89.579 278.164 li
cp
eclp
280.203 272.462 mo
280.625 272.462 li
280.415 272.462 mo
280.415 273.729 li
280.203 272.251 mo
280.625 272.251 li
280.415 272.251 mo
280.415 270.985 li
264.686 268.24 mo
265.11 268.24 li
264.898 268.24 mo
264.898 269.296 li
264.686 267.713 mo
265.11 267.713 li
264.898 267.713 mo
264.898 266.552 li
257.193 265.707 mo
257.616 265.707 li
257.403 265.707 mo
257.403 266.868 li
257.193 265.178 mo
257.616 265.178 li
257.403 265.178 mo
257.403 264.123 li
247.904 260.534 mo
248.326 260.534 li
248.116 260.534 mo
248.116 261.801 li
247.904 260.217 mo
248.326 260.217 li
248.116 260.217 mo
248.116 259.056 li
239.882 254.939 mo
240.305 254.939 li
240.094 254.939 mo
240.094 256.099 li
239.882 254.516 mo
240.305 254.516 li
240.094 254.516 mo
240.094 253.356 li
229.117 248.709 mo
229.539 248.709 li
229.328 248.709 mo
229.328 249.766 li
229.117 248.078 mo
229.539 248.078 li
229.328 248.078 mo
229.328 247.021 li
222.888 241.321 mo
223.311 241.321 li
223.1 241.321 mo
223.1 242.165 li
222.888 240.37 mo
223.311 240.37 li
223.1 240.37 mo
223.1 239.42 li
215.606 234.988 mo
216.028 234.988 li
215.818 234.988 mo
215.818 235.936 li
215.606 234.142 mo
216.028 234.142 li
215.818 234.142 mo
215.818 233.192 li
207.69 220.735 mo
208.111 220.735 li
207.901 220.735 mo
207.901 221.369 li
207.69 219.257 mo
208.111 219.257 li
207.901 219.257 mo
207.901 218.623 li
202.94 206.166 mo
203.363 206.166 li
203.151 206.166 mo
203.151 205.638 li
202.94 202.366 mo
203.363 202.366 li
203.151 202.366 mo
203.151 202.894 li
199.246 208.172 mo
199.667 208.172 li
199.457 208.172 mo
199.457 208.172 li
199.246 205.427 mo
199.667 205.427 li
199.457 205.427 mo
199.457 205.427 li
196.395 193.499 mo
196.819 193.499 li
196.607 193.499 mo
196.607 193.604 li
196.395 190.964 mo
196.819 190.964 li
196.607 190.964 mo
196.607 190.859 li
192.28 201.522 mo
192.703 201.522 li
192.491 201.522 mo
192.491 201.838 li
192.28 199.515 mo
192.703 199.515 li
192.491 199.515 mo
192.491 199.093 li
187.74 200.044 mo
188.164 200.044 li
187.952 200.044 mo
187.952 199.304 li
187.74 195.821 mo
188.164 195.821 li
187.952 195.821 mo
187.952 196.56 li
185.843 195.821 mo
186.263 195.821 li
186.052 195.821 mo
186.052 196.137 li
185.843 193.708 mo
186.263 193.708 li
186.052 193.708 mo
186.052 193.393 li
181.725 205.745 mo
182.146 205.745 li
181.935 205.745 mo
181.935 205.638 li
181.725 202.789 mo
182.146 202.789 li
181.935 202.789 mo
181.935 202.894 li
178.346 200.36 mo
178.769 200.36 li
178.558 200.36 mo
178.558 200.572 li
178.346 198.039 mo
178.769 198.039 li
178.558 198.039 mo
178.558 197.827 li
173.175 207.961 mo
173.597 207.961 li
173.385 207.961 mo
173.385 207.539 li
173.175 204.372 mo
173.597 204.372 li
173.385 204.372 mo
173.385 204.794 li
171.064 216.724 mo
171.485 216.724 li
171.275 216.724 mo
171.275 215.14 li
171.064 210.706 mo
171.485 210.706 li
171.275 210.706 mo
171.275 212.394 li
167.475 216.196 mo
167.897 216.196 li
167.685 216.196 mo
167.685 214.506 li
167.475 209.968 mo
167.897 209.968 li
167.685 209.968 mo
167.685 211.762 li
163.359 213.24 mo
163.781 213.24 li
163.57 213.24 mo
163.57 213.24 li
163.359 210.389 mo
163.781 210.389 li
163.57 210.389 mo
163.57 210.494 li
159.981 218.096 mo
160.404 218.096 li
160.193 218.096 mo
160.193 218.201 li
159.981 215.562 mo
160.404 215.562 li
160.193 215.562 mo
160.193 215.456 li
155.548 217.356 mo
155.97 217.356 li
155.76 217.356 mo
155.76 215.773 li
155.548 211.34 mo
155.97 211.34 li
155.76 211.34 mo
155.76 213.028 li
153.331 224.535 mo
153.754 224.535 li
153.543 224.535 mo
153.543 222.635 li
153.331 218.096 mo
153.754 218.096 li
153.543 218.096 mo
153.543 219.891 li
148.476 238.892 mo
148.898 238.892 li
148.687 238.892 mo
148.687 237.203 li
148.476 232.664 mo
148.898 232.664 li
148.687 232.664 mo
148.687 234.458 li
146.365 237.414 mo
146.787 237.414 li
146.576 237.414 mo
146.576 236.571 li
146.365 232.981 mo
146.787 232.981 li
146.576 232.981 mo
146.576 233.825 li
140.56 252.933 mo
140.982 252.933 li
140.771 252.933 mo
140.771 250.399 li
140.56 245.227 mo
140.982 245.227 li
140.771 245.227 mo
140.771 247.655 li
136.971 242.587 mo
137.393 242.587 li
137.182 242.587 mo
137.182 242.798 li
136.971 240.37 mo
137.393 240.37 li
137.182 240.37 mo
137.182 240.054 li
132.432 246.177 mo
132.855 246.177 li
132.643 246.177 mo
132.643 244.699 li
132.432 240.476 mo
132.855 240.476 li
132.643 240.476 mo
132.643 241.954 li
130.532 250.504 mo
130.955 250.504 li
130.744 250.504 mo
130.744 249.766 li
130.532 246.283 mo
130.955 246.283 li
130.744 246.283 mo
130.744 247.021 li
123.038 255.15 mo
123.461 255.15 li
123.25 255.15 mo
123.25 253.567 li
123.038 249.343 mo
123.461 249.343 li
123.25 249.343 mo
123.25 250.822 li
118.817 262.856 mo
119.238 262.856 li
119.028 262.856 mo
119.028 262.433 li
118.817 259.162 mo
119.238 259.162 li
119.028 259.162 mo
119.028 259.689 li
110.9 266.552 mo
111.322 266.552 li
111.112 266.552 mo
111.112 265.601 li
110.9 261.801 mo
111.322 261.801 li
111.112 261.801 mo
111.112 262.856 li
101.928 269.507 mo
102.351 269.507 li
102.139 269.507 mo
102.139 269.296 li
101.928 266.446 mo
102.351 266.446 li
102.139 266.446 mo
102.139 266.552 li
92.112 273.94 mo
92.534 273.94 li
92.323 273.94 mo
92.323 273.729 li
92.112 270.879 mo
92.534 270.879 li
92.323 270.879 mo
92.323 270.985 li
.839353 .0960403 .972992 .00726329 cmyk
@
grestore
102.841 81.9902 mo
101.955 81.9902 102.841 81.9902 101.955 81.9902 cv
101.487 81.2852 101.131 80.5502 100.886 79.7881 cv
100.642 79.0272 100.52 78.2902 100.52 77.5771 cv
100.52 76.6932 100.671 75.8572 100.973 75.0682 cv
101.237 74.3832 101.57 73.7512 101.974 73.1732 cv
102.854 73.1732 101.974 73.1732 102.854 73.1732 cv
102.435 74.1002 102.147 74.8882 101.989 75.5381 cv
101.832 76.1882 101.753 76.8771 101.753 77.6052 cv
101.753 78.1072 101.799 78.6202 101.893 79.1472 cv
101.986 79.6722 102.114 80.1722 102.277 80.6462 cv
102.383 80.9582 102.571 81.4062 102.841 81.9902 cv
.694423 .677272 .637385 .738643 cmyk
f
106.557 77.6741 mo
106.392 77.7281 106.131 77.7942 105.773 77.8712 cv
105.414 77.9471 105.181 78.0222 105.071 78.0962 cv
104.903 78.2151 104.818 78.3661 104.818 78.5502 cv
104.818 78.7302 104.886 78.8871 105.02 79.0172 cv
105.155 79.1501 105.327 79.2151 105.534 79.2151 cv
105.766 79.2151 105.988 79.1382 106.2 78.9861 cv
106.355 78.8702 106.458 78.7272 106.507 78.5591 cv
106.54 78.4492 106.557 78.2391 106.557 77.9312 cv
106.557 77.6741 106.557 77.9312 106.557 77.6741 cv
cp
104.832 76.6271 mo
103.663 76.4172 104.832 76.6271 103.663 76.4172 cv
103.794 75.9462 104.021 75.5972 104.341 75.3712 cv
104.663 75.1442 105.14 75.0322 105.773 75.0322 cv
106.348 75.0322 106.776 75.0992 107.057 75.2352 cv
107.339 75.3712 107.536 75.5442 107.651 75.7542 cv
107.766 75.9642 107.823 76.3481 107.823 76.9081 cv
107.809 78.4122 107.823 76.9081 107.809 78.4122 cv
107.809 78.8401 107.83 79.1562 107.871 79.3602 cv
107.912 79.5632 107.99 79.7812 108.103 80.0142 cv
106.828 80.0142 108.103 80.0142 106.828 80.0142 cv
106.794 79.9282 106.753 79.8002 106.704 79.6332 cv
106.683 79.5562 106.667 79.5052 106.658 79.4811 cv
106.438 79.6962 106.203 79.8552 105.952 79.9631 cv
105.701 80.0702 105.434 80.1232 105.149 80.1232 cv
104.647 80.1232 104.252 79.9882 103.963 79.7151 cv
103.674 79.4432 103.529 79.1002 103.529 78.6832 cv
103.529 78.4081 103.596 78.1622 103.727 77.9471 cv
103.859 77.7311 104.043 77.5662 104.28 77.4512 cv
104.516 77.3372 104.859 77.2361 105.305 77.1512 cv
105.908 77.0372 106.325 76.9322 106.557 76.8342 cv
106.557 76.7051 106.557 76.8342 106.557 76.7051 cv
106.557 76.4582 106.496 76.2812 106.374 76.1761 cv
106.252 76.0712 106.021 76.0182 105.681 76.0182 cv
105.452 76.0182 105.273 76.0621 105.145 76.1531 cv
105.015 76.2432 104.912 76.4012 104.832 76.6271 cv
f
108.684 81.9902 mo
108.937 81.4462 109.116 81.0292 109.22 80.7382 cv
109.324 80.4482 109.42 80.1132 109.509 79.7342 cv
109.598 79.3542 109.664 78.9952 109.706 78.6531 cv
109.749 78.3121 109.771 77.9622 109.771 77.6052 cv
109.771 76.8771 109.693 76.1882 109.536 75.5381 cv
109.381 74.8882 109.093 74.1002 108.674 73.1732 cv
109.55 73.1732 108.674 73.1732 109.55 73.1732 cv
110.012 73.8301 110.371 74.5281 110.626 75.2651 cv
110.881 76.0021 111.009 76.7502 111.009 77.5082 cv
111.009 78.1481 110.908 78.8332 110.706 79.5641 cv
110.477 80.3832 110.099 81.1921 109.574 81.9902 cv
108.684 81.9902 109.574 81.9902 108.684 81.9902 cv
f
252.065 20.2672 mo
252.065 19.8242 251.946 19.4742 251.712 19.2142 cv
251.477 18.9542 251.192 18.8251 250.862 18.8251 cv
250.52 18.8251 250.222 18.9642 249.969 19.2441 cv
249.715 19.5231 249.589 19.8851 249.589 20.3301 cv
249.589 20.7302 249.709 21.0552 249.949 21.3041 cv
250.189 21.5541 250.488 21.6782 250.841 21.6782 cv
251.197 21.6782 251.491 21.5541 251.719 21.3041 cv
251.949 21.0552 252.065 20.7082 252.065 20.2672 cv
cp
248.912 23.0342 mo
249.651 22.9662 248.912 23.0342 249.651 22.9662 cv
249.715 23.3141 249.834 23.5662 250.01 23.7242 cv
250.188 23.8802 250.414 23.9582 250.69 23.9582 cv
250.928 23.9582 251.135 23.9052 251.313 23.7961 cv
251.492 23.6871 251.637 23.5432 251.752 23.3622 cv
251.867 23.1812 251.962 22.9362 252.04 22.6282 cv
252.115 22.3202 252.154 22.0062 252.154 21.6871 cv
252.154 21.6531 252.152 21.6022 252.149 21.5331 cv
251.996 21.7781 251.785 21.9772 251.519 22.1292 cv
251.253 22.2822 250.965 22.3582 250.653 22.3582 cv
250.134 22.3582 249.693 22.1702 249.335 21.7932 cv
248.975 21.4172 248.797 20.9211 248.797 20.3052 cv
248.797 19.6692 248.984 19.1572 249.359 18.7682 cv
249.734 18.3812 250.203 18.1871 250.768 18.1871 cv
251.177 18.1871 251.55 18.2972 251.887 18.5162 cv
252.225 18.7372 252.481 19.0491 252.657 19.4551 cv
252.833 19.8622 252.92 20.4501 252.92 21.2212 cv
252.92 22.0222 252.833 22.6602 252.66 23.1362 cv
252.484 23.6102 252.227 23.9722 251.883 24.2202 cv
251.54 24.4681 251.135 24.5922 250.675 24.5922 cv
250.184 24.5922 249.783 24.4551 249.472 24.1832 cv
249.162 23.9111 248.974 23.5281 248.912 23.0342 cv
f
254.443 21.3922 mo
254.443 22.4211 254.563 23.1061 254.803 23.4482 cv
255.046 23.7881 255.343 23.9582 255.696 23.9582 cv
256.049 23.9582 256.346 23.7872 256.588 23.4452 cv
256.828 23.1031 256.95 22.4182 256.95 21.3922 cv
256.95 20.3592 256.828 19.6741 256.588 19.3332 cv
256.346 18.9941 256.047 18.8251 255.687 18.8251 cv
255.334 18.8251 255.052 18.9742 254.842 19.2742 cv
254.575 19.6562 254.443 20.3622 254.443 21.3922 cv
cp
253.652 21.3922 mo
253.652 20.6501 253.727 20.0532 253.88 19.6011 cv
254.032 19.1492 254.26 18.8002 254.56 18.5552 cv
254.86 18.3091 255.241 18.1871 255.696 18.1871 cv
256.032 18.1871 256.328 18.2552 256.582 18.3901 cv
256.837 18.5262 257.045 18.7212 257.211 18.9761 cv
257.375 19.2322 257.506 19.5422 257.6 19.9092 cv
257.695 20.2762 257.74 20.7701 257.74 21.3922 cv
257.74 22.1271 257.666 22.7212 257.514 23.1732 cv
257.362 23.6252 257.137 23.9752 256.837 24.2222 cv
256.535 24.4681 256.155 24.5922 255.696 24.5922 cv
255.091 24.5922 254.616 24.3752 254.27 23.9421 cv
253.858 23.4202 253.652 22.5702 253.652 21.3922 cv
f
258.433 32.4022 mo
258.433 31.1312 258.433 32.4022 258.433 31.1312 cv
263.734 24.5002 258.433 31.1312 263.734 24.5002 cv
264.111 24.0292 264.469 23.6202 264.808 23.2712 cv
259.033 23.2712 264.808 23.2712 259.033 23.2712 cv
259.033 22.0502 259.033 23.2712 259.033 22.0502 cv
266.446 22.0502 259.033 22.0502 266.446 22.0502 cv
266.446 23.2712 266.446 22.0502 266.446 23.2712 cv
260.635 30.4542 266.446 23.2712 260.635 30.4542 cv
260.008 31.1812 260.635 30.4542 260.008 31.1812 cv
266.615 31.1812 260.008 31.1812 266.615 31.1812 cv
266.615 32.4022 266.615 31.1812 266.615 32.4022 cv
258.433 32.4022 266.615 32.4022 258.433 32.4022 cv
f
267.949 32.4022 mo
267.949 24.9022 267.949 32.4022 267.949 24.9022 cv
269.093 24.9022 267.949 24.9022 269.093 24.9022 cv
269.093 26.0392 269.093 24.9022 269.093 26.0392 cv
269.385 25.5071 269.653 25.1572 269.9 24.9882 cv
270.147 24.8182 270.42 24.7332 270.717 24.7332 cv
271.144 24.7332 271.579 24.8702 272.022 25.1432 cv
271.585 26.3221 272.022 25.1432 271.585 26.3221 cv
271.275 26.1392 270.964 26.0461 270.652 26.0461 cv
270.376 26.0461 270.126 26.1312 269.904 26.2972 cv
269.682 26.4651 269.525 26.6962 269.43 26.9932 cv
269.29 27.4452 269.22 27.9391 269.22 28.4761 cv
269.22 32.4022 269.22 28.4761 269.22 32.4022 cv
267.949 32.4022 269.22 32.4022 267.949 32.4022 cv
f
gsave
285.364 1.89417 mo
41.364 1.89417 li
41.364 317.075 li
285.364 317.075 li
cp
clp
90.634 64.0732 mo
163.464 64.0732 li
163.464 2.10516 li
90.634 2.10516 li
cp
0 0 0 0 cmyk
f
.422 lw
90.634 2.10516 mo
163.464 2.10516 li
163.464 64.0732 li
90.634 64.0732 li
cp
.694423 .677272 .637385 .738643 cmyk
@
grestore
108.303 13.5682 mo
108.303 14.3842 107.641 15.0452 106.825 15.0452 cv
106.01 15.0452 105.348 14.3842 105.348 13.5682 cv
105.348 12.7512 106.01 12.0901 106.825 12.0901 cv
107.641 12.0901 108.303 12.7512 108.303 13.5682 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
ef
108.303 13.5682 mo
108.303 14.3842 107.641 15.0452 106.825 15.0452 cv
106.01 15.0452 105.348 14.3842 105.348 13.5682 cv
105.348 12.7512 106.01 12.0901 106.825 12.0901 cv
107.641 12.0901 108.303 12.7512 108.303 13.5682 cv
cp
@
125.454 16.9891 mo
124.535 16.9891 125.454 16.9891 124.535 16.9891 cv
124.535 11.1362 124.535 16.9891 124.535 11.1362 cv
124.315 11.3472 124.024 11.5582 123.666 11.7692 cv
123.306 11.9802 122.984 12.1382 122.698 12.2441 cv
122.698 11.3552 122.698 12.2441 122.698 11.3552 cv
123.212 11.1141 123.661 10.8212 124.046 10.4781 cv
124.429 10.1342 124.702 9.80115 124.862 9.47815 cv
125.454 9.47815 124.862 9.47815 125.454 9.47815 cv
125.454 16.9891 125.454 9.47815 125.454 16.9891 cv
.694423 .677272 .637385 .738643 cmyk
f
127.804 15.0151 mo
128.723 14.8922 127.804 15.0151 128.723 14.8922 cv
128.829 15.4122 129.008 15.7872 129.261 16.0172 cv
129.515 16.2471 129.823 16.3622 130.187 16.3622 cv
130.619 16.3622 130.984 16.2122 131.282 15.9122 cv
131.579 15.6132 131.728 15.2432 131.728 14.8002 cv
131.728 14.3782 131.59 14.0312 131.315 13.7571 cv
131.04 13.4832 130.689 13.3462 130.264 13.3462 cv
130.091 13.3462 129.875 13.3802 129.616 13.4482 cv
129.718 12.6412 129.616 13.4482 129.718 12.6412 cv
129.78 12.6481 129.829 12.6522 129.866 12.6522 cv
130.258 12.6522 130.61 12.5502 130.923 12.3452 cv
131.235 12.1422 131.391 11.8271 131.391 11.4012 cv
131.391 11.0652 131.278 10.7861 131.05 10.5652 cv
130.822 10.3442 130.528 10.2332 130.167 10.2332 cv
129.81 10.2332 129.512 10.3452 129.274 10.5702 cv
129.036 10.7942 128.883 11.1312 128.815 11.5801 cv
127.896 11.4172 128.815 11.5801 127.896 11.4172 cv
128.008 10.8011 128.264 10.3242 128.662 9.98517 cv
129.06 9.64716 129.555 9.47815 130.146 9.47815 cv
130.555 9.47815 130.931 9.56519 131.274 9.74115 cv
131.618 9.91516 131.881 10.1552 132.063 10.4572 cv
132.244 10.7601 132.336 11.0812 132.336 11.4222 cv
132.336 11.7462 132.249 12.0392 132.075 12.3041 cv
131.902 12.5702 131.645 12.7822 131.305 12.9382 cv
131.747 13.0392 132.091 13.2521 132.336 13.5732 cv
132.581 13.8942 132.703 14.2972 132.703 14.7802 cv
132.703 15.4332 132.465 15.9872 131.989 16.4412 cv
131.513 16.8951 130.91 17.1221 130.182 17.1221 cv
129.526 17.1221 128.981 16.9272 128.547 16.5352 cv
128.113 16.1442 127.866 15.6371 127.804 15.0151 cv
f
134.549 13.3002 mo
134.549 14.5281 134.693 15.3452 134.98 15.7521 cv
135.267 16.1581 135.622 16.3622 136.044 16.3622 cv
136.466 16.3622 136.82 16.1581 137.108 15.7502 cv
137.395 15.3412 137.538 14.5251 137.538 13.3002 cv
137.538 12.0692 137.395 11.2502 137.108 10.8452 cv
136.82 10.4412 136.462 10.2382 136.034 10.2382 cv
135.612 10.2382 135.275 10.4161 135.023 10.7742 cv
134.707 11.2302 134.549 12.0721 134.549 13.3002 cv
cp
133.605 13.3002 mo
133.605 12.4152 133.696 11.7042 133.878 11.1642 cv
134.06 10.6252 134.33 10.2092 134.69 9.91614 cv
135.048 9.62415 135.499 9.47815 136.044 9.47815 cv
136.445 9.47815 136.797 9.55817 137.1 9.72015 cv
137.403 9.88214 137.652 10.1141 137.85 10.4192 cv
138.048 10.7242 138.202 11.0942 138.314 11.5322 cv
138.426 11.9692 138.482 12.5582 138.482 13.3002 cv
138.482 14.1782 138.392 14.8862 138.212 15.4252 cv
138.031 15.9642 137.763 16.3812 137.404 16.6752 cv
137.045 16.9702 136.591 17.1172 136.044 17.1172 cv
135.322 17.1172 134.756 16.8592 134.344 16.3422 cv
133.851 15.7181 133.605 14.7051 133.605 13.3002 cv
f
139.733 9.70215 mo
139.733 10.1082 139.821 10.4122 139.999 10.6141 cv
140.176 10.8171 140.4 10.9182 140.669 10.9182 cv
140.936 10.9182 141.158 10.8162 141.335 10.6132 cv
141.512 10.4102 141.601 10.1002 141.601 9.68317 cv
141.601 9.29016 141.512 8.99414 141.334 8.79114 cv
141.155 8.58813 140.934 8.48718 140.669 8.48718 cv
140.4 8.48718 140.176 8.58813 139.999 8.78918 cv
139.821 8.99115 139.733 9.29517 139.733 9.70215 cv
cp
139.179 9.70215 mo
139.179 9.11414 139.343 8.67816 139.67 8.39417 cv
139.943 8.16016 140.276 8.04218 140.669 8.04218 cv
141.104 8.04218 141.462 8.18518 141.739 8.47119 cv
142.016 8.75714 142.154 9.15216 142.154 9.65717 cv
142.154 10.0652 142.093 10.3871 141.97 10.6212 cv
141.848 10.8552 141.669 11.0372 141.435 11.1661 cv
141.201 11.2961 140.946 11.3602 140.669 11.3602 cv
140.224 11.3602 139.864 11.2181 139.591 10.9332 cv
139.317 10.6481 139.179 10.2372 139.179 9.70215 cv
f
106.889 26.2802 mo
108.684 29.4471 li
104.989 29.4471 li
106.889 26.2802 li
.95346 .916228 .0104982 .0011902 cmyk
ef
106.889 26.2802 mo
108.684 29.4471 li
104.989 29.4471 li
106.889 26.2802 li
cp
@
125.454 31.8741 mo
124.535 31.8741 125.454 31.8741 124.535 31.8741 cv
124.535 26.0212 124.535 31.8741 124.535 26.0212 cv
124.315 26.2332 124.024 26.4432 123.666 26.6542 cv
123.306 26.8652 122.984 27.0231 122.698 27.1282 cv
122.698 26.2411 122.698 27.1282 122.698 26.2411 cv
123.212 25.9991 123.661 25.7062 124.046 25.3632 cv
124.429 25.0192 124.702 24.6862 124.862 24.3632 cv
125.454 24.3632 124.862 24.3632 125.454 24.3632 cv
125.454 31.8741 125.454 24.3632 125.454 31.8741 cv
.694423 .677272 .637385 .738643 cmyk
f
130.744 29.2422 mo
130.744 25.8691 130.744 29.2422 130.744 25.8691 cv
128.402 29.2422 130.744 25.8691 128.402 29.2422 cv
130.744 29.2422 128.402 29.2422 130.744 29.2422 cv
cp
130.744 31.8741 mo
130.744 30.0832 130.744 31.8741 130.744 30.0832 cv
127.499 30.0832 130.744 30.0832 127.499 30.0832 cv
127.499 29.2422 127.499 30.0832 127.499 29.2422 cv
130.912 24.3932 127.499 29.2422 130.912 24.3932 cv
131.662 24.3932 130.912 24.3932 131.662 24.3932 cv
131.662 29.2422 131.662 24.3932 131.662 29.2422 cv
132.672 29.2422 131.662 29.2422 132.672 29.2422 cv
132.672 30.0832 132.672 29.2422 132.672 30.0832 cv
131.662 30.0832 132.672 30.0832 131.662 30.0832 cv
131.662 31.8741 131.662 30.0832 131.662 31.8741 cv
130.744 31.8741 131.662 31.8741 130.744 31.8741 cv
f
134.549 28.1841 mo
134.549 29.4131 134.693 30.2302 134.98 30.6371 cv
135.267 31.0442 135.622 31.2471 136.044 31.2471 cv
136.466 31.2471 136.82 31.0432 137.108 30.6351 cv
137.395 30.2261 137.538 29.4102 137.538 28.1841 cv
137.538 26.9542 137.395 26.1351 137.108 25.7302 cv
136.82 25.3262 136.462 25.1232 136.034 25.1232 cv
135.612 25.1232 135.275 25.3022 135.023 25.6592 cv
134.707 26.1152 134.549 26.9572 134.549 28.1841 cv
cp
133.605 28.1841 mo
133.605 27.3002 133.696 26.5881 133.878 26.0491 cv
134.06 25.5101 134.33 25.0942 134.69 24.8022 cv
135.048 24.5092 135.499 24.3632 136.044 24.3632 cv
136.445 24.3632 136.797 24.4442 137.1 24.6052 cv
137.403 24.7672 137.652 24.9991 137.85 25.3041 cv
138.048 25.6092 138.202 25.9802 138.314 26.4172 cv
138.426 26.8542 138.482 27.4432 138.482 28.1841 cv
138.482 29.0632 138.392 29.7712 138.212 30.3112 cv
138.031 30.8502 137.763 31.2672 137.404 31.5602 cv
137.045 31.8552 136.591 32.0021 136.044 32.0021 cv
135.322 32.0021 134.756 31.7441 134.344 31.2272 cv
133.851 30.6042 133.605 29.5901 133.605 28.1841 cv
f
139.733 24.5862 mo
139.733 24.9941 139.821 25.2972 139.999 25.4991 cv
140.176 25.7021 140.4 25.8032 140.669 25.8032 cv
140.936 25.8032 141.158 25.7012 141.335 25.4982 cv
141.512 25.2952 141.601 24.9852 141.601 24.5682 cv
141.601 24.1761 141.512 23.8782 141.334 23.6761 cv
141.155 23.4742 140.934 23.3721 140.669 23.3721 cv
140.4 23.3721 140.176 23.4742 139.999 23.6752 cv
139.821 23.8752 139.733 24.1802 139.733 24.5862 cv
cp
139.179 24.5862 mo
139.179 23.9982 139.343 23.5632 139.67 23.2802 cv
139.943 23.0452 140.276 22.9272 140.669 22.9272 cv
141.104 22.9272 141.462 23.0702 141.739 23.3561 cv
142.016 23.6422 142.154 24.0372 142.154 24.5411 cv
142.154 24.9501 142.093 25.2722 141.97 25.5062 cv
141.848 25.7402 141.669 25.9222 141.435 26.0511 cv
141.201 26.1812 140.946 26.2462 140.669 26.2462 cv
140.224 26.2462 139.864 26.1031 139.591 25.8182 cv
139.317 25.5331 139.179 25.1221 139.179 24.5862 cv
f
106.889 41.4811 mo
107.206 42.6422 li
108.578 42.6422 li
107.522 43.4872 li
107.84 44.6481 li
106.889 43.9102 li
105.834 44.6481 li
106.151 43.4872 li
105.095 42.6422 li
106.467 42.6422 li
106.889 41.4811 li
.839353 .0960403 .972992 .00726329 cmyk
ef
106.889 41.4811 mo
107.206 42.6422 li
108.578 42.6422 li
107.522 43.4872 li
107.84 44.6481 li
106.889 43.9102 li
105.834 44.6481 li
106.151 43.4872 li
105.095 42.6422 li
106.467 42.6422 li
106.889 41.4811 li
cp
@
125.454 46.7592 mo
124.535 46.7592 125.454 46.7592 124.535 46.7592 cv
124.535 40.9062 124.535 46.7592 124.535 40.9062 cv
124.315 41.1172 124.024 41.3282 123.666 41.5392 cv
123.306 41.7502 122.984 41.9081 122.698 42.0142 cv
122.698 41.1252 122.698 42.0142 122.698 41.1252 cv
123.212 40.8842 123.661 40.5912 124.046 40.2471 cv
124.429 39.9042 124.702 39.5712 124.862 39.2482 cv
125.454 39.2482 124.862 39.2482 125.454 39.2482 cv
125.454 46.7592 125.454 39.2482 125.454 46.7592 cv
.694423 .677272 .637385 .738643 cmyk
f
127.799 44.8002 mo
128.764 44.7181 127.799 44.8002 128.764 44.7181 cv
128.836 45.1882 129.001 45.5411 129.261 45.7772 cv
129.522 46.0142 129.835 46.1321 130.203 46.1321 cv
130.645 46.1321 131.019 45.9651 131.325 45.6321 cv
131.631 45.2982 131.785 44.8561 131.785 44.3052 cv
131.785 43.7812 131.637 43.3682 131.343 43.0652 cv
131.049 42.7621 130.664 42.6111 130.187 42.6111 cv
129.891 42.6111 129.625 42.6782 129.386 42.8132 cv
129.148 42.9471 128.961 43.1212 128.825 43.3351 cv
127.963 43.2231 128.825 43.3351 127.963 43.2231 cv
128.687 39.3812 127.963 43.2231 128.687 39.3812 cv
132.407 39.3812 128.687 39.3812 132.407 39.3812 cv
132.407 40.2582 132.407 39.3812 132.407 40.2582 cv
129.422 40.2582 132.407 40.2582 129.422 40.2582 cv
129.019 42.2692 129.422 40.2582 129.019 42.2692 cv
129.468 41.9562 129.939 41.8002 130.432 41.8002 cv
131.085 41.8002 131.637 42.0262 132.086 42.4781 cv
132.534 42.9312 132.759 43.5121 132.759 44.2231 cv
132.759 44.9012 132.562 45.4861 132.167 45.9792 cv
131.687 46.5842 131.033 46.8871 130.203 46.8871 cv
129.523 46.8871 128.967 46.6971 128.537 46.3152 cv
128.107 45.9352 127.861 45.4302 127.799 44.8002 cv
f
134.549 43.0702 mo
134.549 44.2991 134.693 45.1161 134.98 45.5222 cv
135.267 45.9291 135.622 46.1321 136.044 46.1321 cv
136.466 46.1321 136.82 45.9282 137.108 45.5192 cv
137.395 45.1111 137.538 44.2952 137.538 43.0702 cv
137.538 41.8381 137.395 41.0201 137.108 40.6161 cv
136.82 40.2112 136.462 40.0082 136.034 40.0082 cv
135.612 40.0082 135.275 40.1871 135.023 40.5432 cv
134.707 41.0002 134.549 41.8422 134.549 43.0702 cv
cp
133.605 43.0702 mo
133.605 42.1852 133.696 41.4731 133.878 40.9341 cv
134.06 40.3951 134.33 39.9792 134.69 39.6871 cv
135.048 39.3951 135.499 39.2482 136.044 39.2482 cv
136.445 39.2482 136.797 39.3292 137.1 39.4911 cv
137.403 39.6522 137.652 39.8851 137.85 40.1902 cv
138.048 40.4941 138.202 40.8652 138.314 41.3022 cv
138.426 41.7391 138.482 42.3292 138.482 43.0702 cv
138.482 43.9482 138.392 44.6572 138.212 45.1962 cv
138.031 45.7352 137.763 46.1512 137.404 46.4462 cv
137.045 46.7402 136.591 46.8871 136.044 46.8871 cv
135.322 46.8871 134.756 46.6292 134.344 46.1111 cv
133.851 45.4891 133.605 44.4752 133.605 43.0702 cv
f
139.733 39.4722 mo
139.733 39.8782 139.821 40.1832 139.999 40.3851 cv
140.176 40.5872 140.4 40.6882 140.669 40.6882 cv
140.936 40.6882 141.158 40.5862 141.335 40.3832 cv
141.512 40.1802 141.601 39.8712 141.601 39.4542 cv
141.601 39.0602 141.512 38.7632 141.334 38.5612 cv
141.155 38.3592 140.934 38.2571 140.669 38.2571 cv
140.4 38.2571 140.176 38.3582 139.999 38.5591 cv
139.821 38.7612 139.733 39.0652 139.733 39.4722 cv
cp
139.179 39.4722 mo
139.179 38.8842 139.343 38.4482 139.67 38.1652 cv
139.943 37.9302 140.276 37.8121 140.669 37.8121 cv
141.104 37.8121 141.462 37.9542 141.739 38.2411 cv
142.016 38.5272 142.154 38.9222 142.154 39.4272 cv
142.154 39.8351 142.093 40.1572 141.97 40.3912 cv
141.848 40.6252 141.669 40.8072 141.435 40.9362 cv
141.201 41.0662 140.946 41.1302 140.669 41.1302 cv
140.224 41.1302 139.864 40.9882 139.591 40.7032 cv
139.317 40.4182 139.179 40.0082 139.179 39.4722 cv
f
.528 lw
117.867 56.0491 mo
118.5 56.0491 li
113.328 56.0491 mo
115.439 56.0491 li
108.789 56.0491 mo
110.9 56.0491 li
104.25 56.0491 mo
106.362 56.0491 li
99.712 56.0491 mo
101.823 56.0491 li
95.173 56.0491 mo
97.284 56.0491 li
@
127.703 57.0162 mo
128.694 57.2662 127.703 57.0162 128.694 57.2662 cv
128.486 58.0792 128.112 58.6992 127.574 59.1262 cv
127.035 59.5532 126.375 59.7672 125.596 59.7672 cv
124.791 59.7672 124.134 59.6022 123.63 59.2742 cv
123.125 58.9462 122.74 58.4712 122.477 57.8481 cv
122.213 57.2252 122.082 56.5572 122.082 55.8422 cv
122.082 55.0632 122.23 54.3832 122.528 53.8032 cv
122.825 53.2242 123.249 52.7831 123.798 52.4822 cv
124.347 52.1812 124.952 52.0302 125.612 52.0302 cv
126.36 52.0302 126.99 52.2212 127.5 52.6011 cv
128.01 52.9832 128.365 53.5182 128.566 54.2092 cv
127.592 54.4391 128.566 54.2092 127.592 54.4391 cv
127.418 53.8942 127.166 53.4982 126.837 53.2491 cv
126.507 53.0012 126.091 52.8771 125.591 52.8771 cv
125.016 52.8771 124.536 53.0151 124.15 53.2902 cv
123.764 53.5662 123.492 53.9362 123.336 54.4001 cv
123.179 54.8652 123.102 55.3442 123.102 55.8372 cv
123.102 56.4731 123.195 57.0292 123.38 57.5032 cv
123.565 57.9781 123.854 58.3322 124.244 58.5671 cv
124.636 58.8022 125.06 58.9192 125.514 58.9192 cv
126.069 58.9192 126.539 58.7601 126.923 58.4391 cv
127.307 58.1202 127.568 57.6451 127.703 57.0162 cv
f
135.197 57.0162 mo
136.188 57.2662 135.197 57.0162 136.188 57.2662 cv
135.98 58.0792 135.607 58.6992 135.068 59.1262 cv
134.529 59.5532 133.869 59.7672 133.091 59.7672 cv
132.285 59.7672 131.629 59.6022 131.124 59.2742 cv
130.618 58.9462 130.234 58.4712 129.971 57.8481 cv
129.707 57.2252 129.575 56.5572 129.575 55.8422 cv
129.575 55.0632 129.724 54.3832 130.022 53.8032 cv
130.319 53.2242 130.743 52.7831 131.292 52.4822 cv
131.841 52.1812 132.446 52.0302 133.106 52.0302 cv
133.854 52.0302 134.484 52.2212 134.994 52.6011 cv
135.504 52.9832 135.86 53.5182 136.06 54.2092 cv
135.086 54.4391 136.06 54.2092 135.086 54.4391 cv
134.912 53.8942 134.66 53.4982 134.331 53.2491 cv
134.001 53.0012 133.586 52.8771 133.086 52.8771 cv
132.511 52.8771 132.03 53.0151 131.644 53.2902 cv
131.258 53.5662 130.987 53.9362 130.83 54.4001 cv
130.674 54.8652 130.595 55.3442 130.595 55.8372 cv
130.595 56.4731 130.688 57.0292 130.874 57.5032 cv
131.059 57.9781 131.347 58.3322 131.738 58.5671 cv
132.13 58.8022 132.554 58.9192 133.008 58.9192 cv
133.563 58.9192 134.033 58.7601 134.417 58.4391 cv
134.801 58.1202 135.062 57.6451 135.197 57.0162 cv
f
143.729 57.6542 mo
144.632 57.7712 143.729 57.6542 144.632 57.7712 cv
144.533 58.3942 144.281 58.8812 143.874 59.2332 cv
143.468 59.5851 142.969 59.7612 142.377 59.7612 cv
141.635 59.7612 141.039 59.5192 140.589 59.0352 cv
140.137 58.5491 139.912 57.8542 139.912 56.9501 cv
139.912 56.3652 140.009 55.8531 140.203 55.4131 cv
140.397 54.9752 140.692 54.6451 141.088 54.4261 cv
141.485 54.2062 141.916 54.0972 142.382 54.0972 cv
142.97 54.0972 143.452 54.2462 143.826 54.5432 cv
144.2 54.8412 144.44 55.2642 144.545 55.8121 cv
143.652 55.9501 144.545 55.8121 143.652 55.9501 cv
143.568 55.5851 143.417 55.3121 143.201 55.1271 cv
142.985 54.9442 142.724 54.8522 142.418 54.8522 cv
141.955 54.8522 141.579 55.0182 141.29 55.3502 cv
141.001 55.6812 140.856 56.2062 140.856 56.9241 cv
140.856 57.6522 140.996 58.1812 141.275 58.5112 cv
141.553 58.8422 141.918 59.0062 142.366 59.0062 cv
142.727 59.0062 143.028 58.8962 143.27 58.6741 cv
143.511 58.4542 143.664 58.1132 143.729 57.6542 cv
f
148.93 56.9192 mo
148.596 57.0552 148.096 57.1702 147.43 57.2662 cv
147.052 57.3202 146.785 57.3812 146.629 57.4501 cv
146.472 57.5172 146.352 57.6172 146.266 57.7482 cv
146.181 57.8792 146.139 58.0251 146.139 58.1841 cv
146.139 58.4291 146.232 58.6332 146.417 58.7972 cv
146.602 58.9601 146.873 59.0422 147.231 59.0422 cv
147.585 59.0422 147.899 58.9642 148.175 58.8091 cv
148.45 58.6552 148.653 58.4432 148.782 58.1741 cv
148.881 57.9662 148.93 57.6611 148.93 57.2562 cv
148.93 56.9192 148.93 57.2562 148.93 56.9192 cv
cp
149.006 58.9712 mo
148.666 59.2601 148.339 59.4631 148.024 59.5832 cv
147.709 59.7021 147.371 59.7612 147.011 59.7612 cv
146.416 59.7612 145.959 59.6161 145.638 59.3251 cv
145.319 59.0352 145.159 58.6622 145.159 58.2101 cv
145.159 57.9452 145.22 57.7032 145.34 57.4822 cv
145.462 57.2632 145.619 57.0872 145.815 56.9542 cv
146.01 56.8221 146.231 56.7212 146.475 56.6542 cv
146.656 56.6061 146.928 56.5602 147.292 56.5162 cv
148.033 56.4272 148.58 56.3212 148.93 56.1992 cv
148.933 56.0732 148.935 55.9941 148.935 55.9601 cv
148.935 55.5851 148.848 55.3221 148.675 55.1682 cv
148.44 54.9612 148.092 54.8572 147.629 54.8572 cv
147.197 54.8572 146.878 54.9332 146.672 55.0842 cv
146.466 55.2352 146.314 55.5042 146.216 55.8882 cv
145.318 55.7662 146.216 55.8882 145.318 55.7662 cv
145.399 55.3812 145.533 55.0712 145.72 54.8342 cv
145.907 54.5981 146.177 54.4161 146.532 54.2881 cv
146.885 54.1611 147.296 54.0972 147.761 54.0972 cv
148.224 54.0972 148.6 54.1512 148.889 54.2601 cv
149.178 54.3691 149.39 54.5062 149.527 54.6711 cv
149.662 54.8362 149.758 55.0442 149.813 55.2961 cv
149.843 55.4532 149.858 55.7352 149.858 56.1432 cv
149.858 57.3682 149.858 56.1432 149.858 57.3682 cv
149.858 58.2222 149.878 58.7621 149.917 58.9882 cv
149.956 59.2142 150.033 59.4322 150.149 59.6392 cv
149.19 59.6392 150.149 59.6392 149.19 59.6392 cv
149.094 59.4482 149.034 59.2261 149.006 58.9712 cv
f
151.255 59.6392 mo
151.255 52.1581 151.255 59.6392 151.255 52.1581 cv
152.173 52.1581 151.255 52.1581 152.173 52.1581 cv
152.173 59.6392 152.173 52.1581 152.173 59.6392 cv
151.255 59.6392 152.173 59.6392 151.255 59.6392 cv
f
157.134 57.6542 mo
158.036 57.7712 157.134 57.6542 158.036 57.7712 cv
157.938 58.3942 157.685 58.8812 157.279 59.2332 cv
156.872 59.5851 156.373 59.7612 155.781 59.7612 cv
155.04 59.7612 154.444 59.5192 153.993 59.0352 cv
153.543 58.5491 153.317 57.8542 153.317 56.9501 cv
153.317 56.3652 153.414 55.8531 153.608 55.4131 cv
153.802 54.9752 154.096 54.6451 154.493 54.4261 cv
154.89 54.2062 155.321 54.0972 155.787 54.0972 cv
156.375 54.0972 156.856 54.2462 157.231 54.5432 cv
157.605 54.8412 157.844 55.2642 157.949 55.8121 cv
157.057 55.9501 157.949 55.8121 157.057 55.9501 cv
156.972 55.5851 156.822 55.3121 156.605 55.1271 cv
156.389 54.9442 156.128 54.8522 155.822 54.8522 cv
155.36 54.8522 154.984 55.0182 154.695 55.3502 cv
154.406 55.6812 154.261 56.2062 154.261 56.9241 cv
154.261 57.6522 154.401 58.1812 154.679 58.5112 cv
154.958 58.8422 155.322 59.0062 155.771 59.0062 cv
156.132 59.0062 156.433 58.8962 156.675 58.6741 cv
156.916 58.4542 157.069 58.1132 157.134 57.6542 cv
f
159.135 59.6392 mo
159.135 58.5931 159.135 59.6392 159.135 58.5931 cv
160.181 58.5931 159.135 58.5931 160.181 58.5931 cv
160.181 59.6392 160.181 58.5931 160.181 59.6392 cv
159.135 59.6392 160.181 59.6392 159.135 59.6392 cv
f
50.635 83.6642 mo
50.635 81.6752 50.635 83.6642 50.635 81.6752 cv
50.635 81.0602 50.578 80.5792 50.464 80.2292 cv
50.35 79.8792 50.188 79.6011 49.981 79.3932 cv
49.689 79.1002 49.296 78.8732 48.802 78.7101 cv
48.309 78.5472 47.71 78.4651 47.007 78.4651 cv
46.032 78.4651 45.284 78.6252 44.76 78.9452 cv
44.237 79.2651 43.886 79.6542 43.709 80.1111 cv
43.582 80.4421 43.518 80.9742 43.518 81.7072 cv
43.518 83.6642 43.518 81.7072 43.518 83.6642 cv
50.635 83.6642 43.518 83.6642 50.635 83.6642 cv
cp
51.735 84.8972 mo
42.419 84.8972 51.735 84.8972 42.419 84.8972 cv
42.419 81.6871 42.419 84.8972 42.419 81.6871 cv
42.419 80.9631 42.463 80.4102 42.552 80.0292 cv
42.675 79.4952 42.897 79.0392 43.219 78.6622 cv
43.634 78.1702 44.165 77.8041 44.811 77.5602 cv
45.457 77.3162 46.196 77.1942 47.026 77.1942 cv
47.733 77.1942 48.36 77.2762 48.907 77.4421 cv
49.454 77.6082 49.906 77.8192 50.263 78.0771 cv
50.621 78.3362 50.904 78.6182 51.109 78.9261 cv
51.314 79.2332 51.47 79.6031 51.576 80.0381 cv
51.682 80.4731 51.735 80.9712 51.735 81.5352 cv
51.735 84.8972 51.735 81.5352 51.735 84.8972 cv
f
55.21 73.3481 mo
55.331 72.9172 55.511 72.5612 55.749 72.2822 cv
55.349 71.8431 54.747 71.6232 53.944 71.6232 cv
53.487 71.6232 53.088 71.7012 52.746 71.8561 cv
52.405 72.0112 52.14 72.2382 51.951 72.5381 cv
51.763 72.8372 51.669 73.1732 51.669 73.5442 cv
51.669 74.1011 51.859 74.5641 52.24 74.9312 cv
52.621 75.2982 53.19 75.4811 53.947 75.4811 cv
54.681 75.4811 55.245 75.3002 55.638 74.9362 cv
56.03 74.5742 56.227 74.1092 56.227 73.5442 cv
56.227 73.2781 56.176 73.0262 56.076 72.7902 cv
55.925 73.0242 55.817 73.2701 55.753 73.5292 cv
55.21 73.3481 55.753 73.5292 55.21 73.3481 cv
cp
56.164 71.7042 mo
56.404 71.3582 56.578 71.0372 56.689 70.7462 cv
57.208 70.9651 56.689 70.7462 57.208 70.9651 cv
57.062 71.3712 56.831 71.7742 56.515 72.1772 cv
56.749 72.5972 56.866 73.0582 56.866 73.5641 cv
56.866 74.0751 56.742 74.5381 56.496 74.9542 cv
56.25 75.3702 55.904 75.6902 55.457 75.9152 cv
55.01 76.1392 54.507 76.2512 53.947 76.2512 cv
53.39 76.2512 52.883 76.1392 52.427 75.9131 cv
51.97 75.6862 51.622 75.3652 51.383 74.9482 cv
51.145 74.5312 51.026 74.0641 51.026 73.5482 cv
51.026 73.0272 51.149 72.5572 51.397 72.1401 cv
51.645 71.7212 51.991 71.4022 52.437 71.1822 cv
52.882 70.9631 53.384 70.8531 53.944 70.8531 cv
54.408 70.8531 54.825 70.9232 55.196 71.0652 cv
55.568 71.2062 55.89 71.4192 56.164 71.7042 cv
f
56.77 69.7902 mo
51.126 69.7902 56.77 69.7902 51.126 69.7902 cv
51.126 65.7092 51.126 69.7902 51.126 65.7092 cv
51.792 65.7092 51.126 65.7092 51.792 65.7092 cv
51.792 69.0442 51.792 65.7092 51.792 69.0442 cv
53.521 69.0442 51.792 69.0442 53.521 69.0442 cv
53.521 65.9211 53.521 69.0442 53.521 65.9211 cv
54.182 65.9211 53.521 65.9211 54.182 65.9211 cv
54.182 69.0442 54.182 65.9211 54.182 69.0442 cv
56.104 69.0442 54.182 69.0442 56.104 69.0442 cv
56.104 65.5792 56.104 69.0442 56.104 65.5792 cv
56.77 65.5792 56.104 65.5792 56.77 65.5792 cv
56.77 69.7902 56.77 65.5792 56.77 69.7902 cv
f
105.057 187.242 mo
104.172 187.242 105.057 187.242 104.172 187.242 cv
103.704 186.536 103.347 185.801 103.102 185.04 cv
102.858 184.277 102.736 183.54 102.736 182.829 cv
102.736 181.944 102.887 181.108 103.19 180.318 cv
103.453 179.633 103.786 179.002 104.19 178.424 cv
105.07 178.424 104.19 178.424 105.07 178.424 cv
104.652 179.35 104.363 180.139 104.206 180.79 cv
104.048 181.438 103.969 182.127 103.969 182.857 cv
103.969 183.357 104.017 183.872 104.11 184.397 cv
104.203 184.923 104.33 185.423 104.492 185.896 cv
104.6 186.208 104.788 186.657 105.057 187.242 cv
f
107.31 182.722 mo
107.31 183.228 107.39 183.601 107.549 183.842 cv
107.772 184.185 108.069 184.356 108.439 184.356 cv
108.723 184.356 108.966 184.234 109.166 183.992 cv
109.366 183.748 109.466 183.365 109.466 182.842 cv
109.466 182.286 109.366 181.884 109.163 181.637 cv
108.962 181.391 108.704 181.268 108.388 181.268 cv
108.08 181.268 107.822 181.389 107.618 181.627 cv
107.413 181.87 107.31 182.233 107.31 182.722 cv
cp
106.031 185.264 mo
106.031 178.538 106.031 185.264 106.031 178.538 cv
107.32 178.538 106.031 178.538 107.32 178.538 cv
107.32 180.961 107.32 178.538 107.32 180.961 cv
107.717 180.507 108.188 180.282 108.733 180.282 cv
109.326 180.282 109.817 180.497 110.205 180.927 cv
110.593 181.356 110.787 181.973 110.787 182.778 cv
110.787 183.61 110.59 184.25 110.193 184.7 cv
109.798 185.15 109.317 185.374 108.751 185.374 cv
108.472 185.374 108.198 185.304 107.928 185.165 cv
107.657 185.027 107.424 184.821 107.228 184.548 cv
107.228 185.264 107.228 184.548 107.228 185.264 cv
106.031 185.264 107.228 185.264 106.031 185.264 cv
f
111.428 187.242 mo
111.682 186.698 111.86 186.279 111.964 185.989 cv
112.068 185.698 112.165 185.364 112.254 184.984 cv
112.342 184.605 112.408 184.245 112.451 183.904 cv
112.493 183.563 112.514 183.213 112.514 182.857 cv
112.514 182.127 112.437 181.438 112.281 180.79 cv
112.125 180.139 111.837 179.35 111.418 178.424 cv
112.295 178.424 111.418 178.424 112.295 178.424 cv
112.757 179.082 113.115 179.779 113.37 180.515 cv
113.626 181.252 113.753 181.999 113.753 182.759 cv
113.753 183.398 113.652 184.083 113.451 184.815 cv
113.221 185.634 112.844 186.443 112.318 187.242 cv
111.428 187.242 112.318 187.242 111.428 187.242 cv
f
250.059 165.21 mo
250.059 164.768 249.942 164.416 249.705 164.159 cv
249.47 163.898 249.187 163.768 248.856 163.768 cv
248.513 163.768 248.217 163.909 247.963 164.189 cv
247.709 164.467 247.582 164.83 247.582 165.275 cv
247.582 165.673 247.703 165.999 247.942 166.248 cv
248.185 166.498 248.481 166.622 248.835 166.622 cv
249.192 166.622 249.485 166.498 249.715 166.248 cv
249.945 165.999 250.059 165.653 250.059 165.21 cv
cp
246.907 167.979 mo
247.646 167.91 246.907 167.979 247.646 167.91 cv
247.709 168.258 247.829 168.51 248.006 168.667 cv
248.182 168.825 248.41 168.903 248.686 168.903 cv
248.922 168.903 249.13 168.849 249.306 168.74 cv
249.486 168.631 249.633 168.487 249.747 168.305 cv
249.86 168.124 249.957 167.88 250.033 167.572 cv
250.111 167.265 250.149 166.95 250.149 166.63 cv
250.149 166.596 250.148 166.545 250.145 166.478 cv
249.99 166.722 249.78 166.921 249.512 167.075 cv
249.247 167.226 248.959 167.302 248.647 167.302 cv
248.127 167.302 247.69 167.115 247.33 166.738 cv
246.97 166.362 246.791 165.865 246.791 165.248 cv
246.791 164.614 246.978 164.101 247.353 163.713 cv
247.727 163.325 248.199 163.13 248.763 163.13 cv
249.171 163.13 249.544 163.241 249.882 163.46 cv
250.219 163.68 250.475 163.994 250.651 164.4 cv
250.826 164.806 250.914 165.395 250.914 166.165 cv
250.914 166.966 250.828 167.604 250.653 168.08 cv
250.481 168.554 250.22 168.915 249.877 169.165 cv
249.534 169.412 249.13 169.536 248.669 169.536 cv
248.178 169.536 247.777 169.4 247.467 169.126 cv
247.155 168.855 246.969 168.472 246.907 167.979 cv
f
255.693 168.688 mo
255.693 169.429 255.693 168.688 255.693 169.429 cv
251.549 169.429 255.693 169.429 251.549 169.429 cv
251.543 169.244 251.573 169.066 251.637 168.894 cv
251.743 168.612 251.912 168.333 252.143 168.06 cv
252.376 167.787 252.712 167.47 253.151 167.11 cv
253.834 166.551 254.294 166.108 254.534 165.782 cv
254.772 165.455 254.892 165.146 254.892 164.855 cv
254.892 164.551 254.784 164.292 254.564 164.083 cv
254.347 163.873 254.062 163.768 253.711 163.768 cv
253.341 163.768 253.045 163.879 252.823 164.102 cv
252.6 164.324 252.487 164.632 252.484 165.026 cv
251.692 164.945 252.484 165.026 251.692 164.945 cv
251.747 164.355 251.951 163.905 252.303 163.596 cv
252.658 163.287 253.133 163.13 253.728 163.13 cv
254.332 163.13 254.806 163.298 255.157 163.631 cv
255.509 163.965 255.684 164.379 255.684 164.873 cv
255.684 165.123 255.633 165.371 255.53 165.612 cv
255.428 165.854 255.257 166.11 255.018 166.379 cv
254.781 166.646 254.385 167.014 253.832 167.483 cv
253.368 167.871 253.072 168.133 252.942 168.272 cv
252.811 168.41 252.702 168.549 252.618 168.688 cv
255.693 168.688 252.618 168.688 255.693 168.688 cv
f
256.427 177.346 mo
256.427 176.075 256.427 177.346 256.427 176.075 cv
261.729 169.444 256.427 176.075 261.729 169.444 cv
262.105 168.974 262.464 168.564 262.802 168.216 cv
257.028 168.216 262.802 168.216 257.028 168.216 cv
257.028 166.994 257.028 168.216 257.028 166.994 cv
264.441 166.994 257.028 166.994 264.441 166.994 cv
264.441 168.216 264.441 166.994 264.441 168.216 cv
258.631 175.398 264.441 168.216 258.631 175.398 cv
258.003 176.125 258.631 175.398 258.003 176.125 cv
264.611 176.125 258.003 176.125 264.611 176.125 cv
264.611 177.346 264.611 176.125 264.611 177.346 cv
256.427 177.346 264.611 177.346 256.427 177.346 cv
f
265.943 177.346 mo
265.943 169.846 265.943 177.346 265.943 169.846 cv
267.087 169.846 265.943 169.846 267.087 169.846 cv
267.087 170.984 267.087 169.846 267.087 170.984 cv
267.378 170.453 267.648 170.101 267.895 169.932 cv
268.142 169.763 268.414 169.677 268.71 169.677 cv
269.139 169.677 269.575 169.814 270.017 170.086 cv
269.58 171.266 270.017 170.086 269.58 171.266 cv
269.268 171.082 268.957 170.991 268.648 170.991 cv
268.369 170.991 268.12 171.074 267.898 171.242 cv
267.677 171.409 267.52 171.64 267.427 171.937 cv
267.284 172.389 267.214 172.883 267.214 173.42 cv
267.214 177.346 267.214 173.42 267.214 177.346 cv
265.943 177.346 267.214 177.346 265.943 177.346 cv
f
49.58 220.902 mo
49.58 218.913 49.58 220.902 49.58 218.913 cv
49.58 218.298 49.523 217.816 49.408 217.466 cv
49.294 217.118 49.133 216.837 48.925 216.631 cv
48.633 216.338 48.24 216.11 47.747 215.948 cv
47.253 215.784 46.655 215.703 45.951 215.703 cv
44.977 215.703 44.228 215.863 43.705 216.183 cv
43.181 216.503 42.831 216.892 42.654 217.348 cv
42.526 217.68 42.463 218.211 42.463 218.944 cv
42.463 220.902 42.463 218.944 42.463 220.902 cv
49.58 220.902 42.463 220.902 49.58 220.902 cv
cp
50.679 222.134 mo
41.364 222.134 50.679 222.134 41.364 222.134 cv
41.364 218.924 41.364 222.134 41.364 218.924 cv
41.364 218.2 41.408 217.647 41.497 217.265 cv
41.619 216.734 41.842 216.277 42.164 215.9 cv
42.579 215.409 43.11 215.041 43.756 214.798 cv
44.402 214.553 45.141 214.432 45.97 214.432 cv
46.678 214.432 47.305 214.514 47.852 214.679 cv
48.398 214.846 48.85 215.056 49.208 215.315 cv
49.566 215.574 49.848 215.856 50.053 216.164 cv
50.259 216.47 50.415 216.84 50.52 217.275 cv
50.626 217.71 50.679 218.209 50.679 218.772 cv
50.679 222.134 50.679 218.772 50.679 222.134 cv
f
54.154 210.585 mo
54.276 210.156 54.456 209.798 54.694 209.518 cv
54.294 209.081 53.692 208.862 52.888 208.862 cv
52.432 208.862 52.032 208.938 51.691 209.092 cv
51.349 209.248 51.085 209.476 50.897 209.776 cv
50.708 210.075 50.613 210.41 50.613 210.782 cv
50.613 211.34 50.803 211.801 51.185 212.168 cv
51.566 212.536 52.134 212.719 52.892 212.719 cv
53.626 212.719 54.19 212.538 54.582 212.173 cv
54.975 211.81 55.172 211.348 55.172 210.782 cv
55.172 210.515 55.121 210.263 55.021 210.028 cv
54.87 210.261 54.762 210.507 54.697 210.767 cv
54.154 210.585 54.697 210.767 54.154 210.585 cv
cp
55.11 208.941 mo
55.349 208.594 55.523 208.276 55.633 207.983 cv
56.153 208.202 55.633 207.983 56.153 208.202 cv
56.007 208.607 55.776 209.013 55.46 209.415 cv
55.694 209.833 55.811 210.295 55.811 210.801 cv
55.811 211.313 55.687 211.775 55.441 212.191 cv
55.195 212.607 54.848 212.928 54.402 213.154 cv
53.954 213.376 53.451 213.489 52.892 213.489 cv
52.336 213.489 51.828 213.375 51.372 213.15 cv
50.914 212.924 50.567 212.602 50.328 212.185 cv
50.089 211.77 49.97 211.301 49.97 210.786 cv
49.97 210.265 50.094 209.795 50.342 209.376 cv
50.589 208.958 50.936 208.64 51.382 208.42 cv
51.826 208.2 52.329 208.091 52.888 208.091 cv
53.353 208.091 53.77 208.162 54.141 208.302 cv
54.512 208.444 54.835 208.658 55.11 208.941 cv
f
55.715 207.028 mo
50.07 207.028 55.715 207.028 50.07 207.028 cv
50.07 202.947 50.07 207.028 50.07 202.947 cv
50.736 202.947 50.07 202.947 50.736 202.947 cv
50.736 206.281 50.736 202.947 50.736 206.281 cv
52.465 206.281 50.736 206.281 52.465 206.281 cv
52.465 203.158 52.465 206.281 52.465 203.158 cv
53.127 203.158 52.465 203.158 53.127 203.158 cv
53.127 206.281 53.127 203.158 53.127 206.281 cv
55.048 206.281 53.127 206.281 55.048 206.281 cv
55.048 202.816 55.048 206.281 55.048 202.816 cv
55.715 202.816 55.048 202.816 55.715 202.816 cv
55.715 207.028 55.715 202.816 55.715 207.028 cv
f
158.066 311.85 mo
158.066 302.533 158.066 311.85 158.066 302.533 cv
164.802 302.533 158.066 302.533 164.802 302.533 cv
164.802 303.633 164.802 302.533 164.802 303.633 cv
159.299 303.633 164.802 303.633 159.299 303.633 cv
159.299 306.487 159.299 303.633 159.299 306.487 cv
164.452 306.487 159.299 306.487 164.452 306.487 cv
164.452 307.58 164.452 306.487 164.452 307.58 cv
159.299 307.58 164.452 307.58 159.299 307.58 cv
159.299 310.751 159.299 307.58 159.299 310.751 cv
165.017 310.751 159.299 310.751 165.017 310.751 cv
165.017 311.85 165.017 310.751 165.017 311.85 cv
158.066 311.85 165.017 311.85 158.066 311.85 cv
f
166.723 314.543 mo
169.008 314.543 166.723 314.543 169.008 314.543 cv
168.976 314.201 168.889 313.942 168.746 313.77 cv
168.525 313.503 168.238 313.37 167.885 313.37 cv
167.569 313.37 167.301 313.476 167.084 313.689 cv
166.868 313.903 166.747 314.188 166.723 314.543 cv
cp
169 315.665 mo
169.716 315.753 169 315.665 169.716 315.753 cv
169.602 316.171 169.394 316.498 169.088 316.727 cv
168.782 316.958 168.392 317.075 167.918 317.075 cv
167.318 317.075 166.845 316.891 166.495 316.521 cv
166.144 316.153 165.969 315.636 165.969 314.972 cv
165.969 314.284 166.146 313.749 166.501 313.37 cv
166.856 312.989 167.314 312.8 167.879 312.8 cv
168.427 312.8 168.872 312.986 169.219 313.358 cv
169.566 313.73 169.738 314.253 169.738 314.928 cv
169.738 314.97 169.737 315.032 169.735 315.114 cv
166.685 315.114 169.735 315.114 166.685 315.114 cv
166.711 315.563 166.839 315.906 167.068 316.146 cv
167.295 316.385 167.581 316.503 167.922 316.503 cv
168.176 316.503 168.392 316.437 168.573 316.304 cv
168.753 316.17 168.893 315.957 169 315.665 cv
f
170.735 316.982 mo
170.735 313.431 170.735 316.982 170.735 313.431 cv
170.124 313.431 170.735 313.431 170.124 313.431 cv
170.124 312.892 170.124 313.431 170.124 312.892 cv
170.735 312.892 170.124 312.892 170.735 312.892 cv
170.735 312.457 170.735 312.892 170.735 312.457 cv
170.735 312.182 170.76 311.978 170.809 311.845 cv
170.876 311.665 170.992 311.52 171.161 311.407 cv
171.329 311.296 171.565 311.239 171.867 311.239 cv
172.063 311.239 172.278 311.262 172.514 311.31 cv
172.41 311.915 172.514 311.31 172.41 311.915 cv
172.265 311.889 172.132 311.876 172.002 311.876 cv
171.792 311.876 171.642 311.921 171.556 312.011 cv
171.468 312.101 171.427 312.268 171.427 312.516 cv
171.427 312.892 171.427 312.516 171.427 312.892 cv
172.222 312.892 171.427 312.892 172.222 312.892 cv
172.222 313.431 172.222 312.892 172.222 313.431 cv
171.427 313.431 172.222 313.431 171.427 313.431 cv
171.427 316.982 171.427 313.431 171.427 316.982 cv
170.735 316.982 171.427 316.982 170.735 316.982 cv
f
173.016 316.982 mo
173.016 313.431 173.016 316.982 173.016 313.431 cv
172.404 313.431 173.016 313.431 172.404 313.431 cv
172.404 312.892 172.404 313.431 172.404 312.892 cv
173.016 312.892 172.404 312.892 173.016 312.892 cv
173.016 312.457 173.016 312.892 173.016 312.457 cv
173.016 312.182 173.042 311.978 173.088 311.845 cv
173.156 311.665 173.272 311.52 173.441 311.407 cv
173.609 311.296 173.843 311.239 174.147 311.239 cv
174.343 311.239 174.558 311.262 174.795 311.31 cv
174.69 311.915 174.795 311.31 174.69 311.915 cv
174.548 311.889 174.411 311.876 174.284 311.876 cv
174.071 311.876 173.925 311.921 173.837 312.011 cv
173.748 312.101 173.705 312.268 173.705 312.516 cv
173.705 312.892 173.705 312.516 173.705 312.892 cv
174.502 312.892 173.705 312.892 174.502 312.892 cv
174.502 313.431 174.502 312.892 174.502 313.431 cv
173.705 313.431 174.502 313.431 173.705 313.431 cv
173.705 316.982 173.705 313.431 173.705 316.982 cv
173.016 316.982 173.705 316.982 173.016 316.982 cv
f
179.104 314.437 mo
179.104 302.533 179.104 314.437 179.104 302.533 cv
181.627 302.533 179.104 302.533 181.627 302.533 cv
181.627 303.481 181.627 302.533 181.627 303.481 cv
180.248 303.481 181.627 303.481 180.248 303.481 cv
180.248 313.491 180.248 303.481 180.248 313.491 cv
181.627 313.491 180.248 313.491 181.627 313.491 cv
181.627 314.437 181.627 313.491 181.627 314.437 cv
179.104 314.437 181.627 314.437 179.104 314.437 cv
f
182.796 311.85 mo
182.796 302.533 182.796 311.85 182.796 302.533 cv
184.652 302.533 182.796 302.533 184.652 302.533 cv
186.856 309.13 184.652 302.533 186.856 309.13 cv
187.06 309.745 187.209 310.205 187.302 310.509 cv
187.407 310.171 187.574 309.673 187.798 309.016 cv
190.026 302.533 187.798 309.016 190.026 302.533 cv
191.686 302.533 190.026 302.533 191.686 302.533 cv
191.686 311.85 191.686 302.533 191.686 311.85 cv
190.499 311.85 191.686 311.85 190.499 311.85 cv
190.499 304.053 190.499 311.85 190.499 304.053 cv
187.792 311.85 190.499 304.053 187.792 311.85 cv
186.679 311.85 187.792 311.85 186.679 311.85 cv
183.985 303.918 186.679 311.85 183.985 303.918 cv
183.985 311.85 183.985 303.918 183.985 311.85 cv
182.796 311.85 183.985 311.85 182.796 311.85 cv
f
194.383 307.829 mo
198.15 307.829 194.383 307.829 198.15 307.829 cv
198.099 307.261 197.957 306.834 197.718 306.551 cv
197.353 306.11 196.881 305.889 196.3 305.889 cv
195.775 305.889 195.334 306.065 194.976 306.416 cv
194.617 306.768 194.42 307.239 194.383 307.829 cv
cp
198.136 309.676 mo
199.321 309.823 198.136 309.676 199.321 309.823 cv
199.134 310.514 198.788 311.05 198.283 311.432 cv
197.779 311.813 197.135 312.003 196.352 312.003 cv
195.363 312.003 194.582 311.7 194.003 311.091 cv
193.426 310.483 193.135 309.63 193.135 308.534 cv
193.135 307.397 193.428 306.516 194.012 305.889 cv
194.596 305.262 195.355 304.95 196.287 304.95 cv
197.19 304.95 197.928 305.256 198.498 305.871 cv
199.07 306.485 199.357 307.35 199.357 308.462 cv
199.357 308.532 199.355 308.633 199.351 308.768 cv
194.317 308.768 199.351 308.768 194.317 308.768 cv
194.36 309.509 194.57 310.077 194.947 310.471 cv
195.324 310.866 195.794 311.062 196.357 311.062 cv
196.776 311.062 197.135 310.952 197.432 310.733 cv
197.728 310.512 197.965 310.16 198.136 309.676 cv
f
203.547 311.85 mo
199.936 302.533 203.547 311.85 199.936 302.533 cv
201.27 302.533 199.936 302.533 201.27 302.533 cv
203.692 309.301 201.27 302.533 203.692 309.301 cv
203.886 309.845 204.05 310.353 204.182 310.829 cv
204.326 310.319 204.493 309.811 204.684 309.301 cv
207.199 302.533 204.684 309.301 207.199 302.533 cv
208.459 302.533 207.199 302.533 208.459 302.533 cv
204.81 311.85 208.459 302.533 204.81 311.85 cv
203.547 311.85 204.81 311.85 203.547 311.85 cv
f
211.295 314.437 mo
208.772 314.437 211.295 314.437 208.772 314.437 cv
208.772 313.491 208.772 314.437 208.772 313.491 cv
210.15 313.491 208.772 313.491 210.15 313.491 cv
210.15 303.481 210.15 313.491 210.15 303.481 cv
208.772 303.481 210.15 303.481 208.772 303.481 cv
208.772 302.533 208.772 303.481 208.772 302.533 cv
211.295 302.533 208.772 302.533 211.295 302.533 cv
211.295 314.437 211.295 302.533 211.295 314.437 cv
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CABA78EB744DAD228E94EA6790A3CF5471A14CA1EC74457D34EB30A52B7D5CE690F230DA3> |-/B <1C60D8A8C9B64EDF88216CF024BDC8993EE8739690407CCCBA55622B12918D3D17B30491F1CA282D9D8970F0E7D82029935D97EFE881B4DF2886B228CE257D591CDE49A8CC4885CEC7CCEA8711A068478FEFD5A1AE8CBEE74FD6B5E9B44215B429576C7C558160F2B347FA2DE19097A51D8DC5A07C69C381C16050A2C3C0AD9429FE9FB016DE0AD2384D26D27090BAD9C5F245D7B3E6963711AFEDF85F48C27AAA847C24C6F3FA2933FA01060CE313860904472963674DD2917A5A08E4BB800FDC7A1B59EA97822D469C42B9DBE7574377B1FAE77CD254CC259CD40FF4632AF735C694E1D1AE312C0A5D35FEE91AC0> |-/G <1C60D8A8C9B6079FE80B2D9B8A220BABE8A5775155D5AEE67EA9CE80530F42678BB7923C2E1998D5A150C054ED90E9D960696B97F4DB8EA42B60C13ED3831BAE2B146B775564D2359A7EC713509A43C5C5E3539551C39DB899CD95573B1D4F19BE1759C57CF1BCAA6FB7D841F4C17766A5D35D204457A8F7FAA27C0DD08A35CD68D893853416989C0D7266D1AB8433FCBD83529F03E02AAB3CCA8AF06110C60DDAA381BF4BF975C41ABF718C730E643CFDF62ABFA9468C> |-/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF916442D9C9F4ED6F42D0588BBB70AFF4A34C797748BF897F607B52C72A4CB4A45FE66E245A32A75D88FD8959E00389A6DBAED16321CC2D91DF069B6D6467D128CC5B30A96938452FCD034FAF7C4DC50E3464B901F68B77945A36B587B81F6A85C08C5E954DCBEA7AEB21BCCFA49> |-/Z <1C60D8A8C9B7D8BE6A6EDEC9185C38B8A1B4E98DDBA0ADD0EBC62DF4F1DF2AC115152950B1B4300CAF5FD3A9831ED4BE2B0CBABB56F1E7F1E4D47831FA59792540FD9554FFC78A64DC234E66A3D7> |-/bracketleft <1C60D8A8C9B81F2C36B2094B9ED0E07AA432BA5CE2E30656FAF6FD647FB4730E81C90D45CA2A3E2357B2F5E09E9C4D9F27ADC522DE90> |-/bracketright <1C60D8A8C9B81F2C36B2094B9ED0E07AB0AE245978D415C9B35A8D321C0AFE31914517F88ADB7E52176ED8827A777F14FE6FD4341F74> |-/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF334CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8A7014AC491483F6C> |-/b <1C60D8A8C9B7A73DCF483CC3D064C5FA3DCB4FE14F64E061FC6B7B327BD3AD170E4E134821E89959D7FC86E9160C1887FE9D1E5C6528E6DF501B7B2F3F30D0CEE6E0ECDE5FBEA2BBABC11DF1E31664808113184F8240E66E326CF8F60725DAFAA94AA48A85FA298CB9ED7FFADEF21D27A3E79BDB2F75A75EA736FD59CC6559DB85761C885E021EFCF09E24B9> |-/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F44F985AA21BA1A9B71EA7AE21C439E05A319047A6D64BC1D4392480160430400AFA5C943510A8521B80B0990CB49D8F01EE3F> |-/d <1C60D8A8C9B7A73DCF5C5F7CCFE1224745C14DED045144DECBED335D8767365A686119923BC683874F138A812E24882366A564440105A4DC036664F6BE736287F87B295D2920E5B8EA5128E5E6C4D3D8CC4EF499D5F82793394C8A44BB4BC5B324694DE039E82E3C3E95CCEA761C759B9AB2F813EF75023CD818EA7E49BFA40067FB96C397B29CD7920172CF32CEB2D7D6BA2C2C243F80C59229B326C2E018A09BBC01E8E5EAF27058ED024F330852F9551733A92CF8DD2FDE72DD73A6AB5C5124E5F56317BB270B722C0F9A2DB91EC3> |-/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3BCE3A721EBABA194412EC3061B00A07EF9497D2BA0393994B5BAD3D53481E4076AC8BDD976CDE1D7C869C749BF31CD9AA8D8775C17BFBC48988132FD7543B8680B068C59E2A9123C08B9AC1B> |-/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF77C72CE9F4FF44E681C46DF934E6F13477EDB282AE0A0AEB3C1EAE1FE7BD0F6DE854793C6EBB102BA640EE2A1937B205F1275AE2A18BEEEA6F56A75ACE6F8742D16A82839984> |-/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296CB33756AB3A7AE8A175ECCFBAEFE2D4D26FE981086B935FAC40322E1F0B8F7350D4069F2282387985119CD3420DA7C6AF69B6593DDE216B952D8FCDCBEF2F469E8089D575BA41CC65444D1B22A9D24CFC1E970C8B6BEDF22A18DB852FFB88FE3E61676AF1B587C8BEDC7F57FDC2C2A66C537084478A0CE11D64537C41EBBD5BF312EA203B1D25DC925907A26C5096A56920B8D980F1FDE4021D766D9EBB9E2D5040E1243BA22D72996312BD29C454816BAAC378D28EAD1B4E006AFB191F0E63614E1C1D12BF3C0816D46C6B4BFA439751F894732123CB9417F879A9079FEB665894A238DC5E00C5560672D49ED3BE797BB9B40B81D47DC4D6525BAC3E19A2463521FF7137CAAF2A9FB5F4F7C0D469F6100DFA27CAFCE39CE1E106B3138E3B02A642CB6CBDE836A606594170908768F9F84598AA082C678AA176A30FCE7778326054A4DB4C2521DC0835CAFB81BC8AFB272F07932AA37EF69999C6D26587244DB681D773B8265D77C46AB4A99012FE89850D5F97C81D2ACDC98A50506471087EB40F5> |-/h <1C60D8A8C9B7A73DC549024A8346FEB2B78E908B5A6E113B6B1D9F55576FB6430AA363CC7EA7A85866229D47A648E16050AC3817C69AC198992A95DC887E9C2F4E126428A388941BC547CF3DFD3AF002591B6C465CE80F6B0C8E3BF1745FFB044EE609634601B3F272E0A2A1613C8D3DAD607A9DF002A5DBDCD953AE67BA74F625AAC084AEBD78F5D55004D7E5DC895C1EC4CADD91BABB3BE394835C4CCB41B4BC3CDD> |-/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E801180DD16566EA992053D08DFDDD90B69C61E00DD73FA9F14D9F9BA0BA5DE6F463B9913A4C5B8DB11D33C1FDD97C4AED671CB9420D4160C0D8849042FEC7B7C3AD6164404608E93E91AD41C497AA4F0BFEC99AE40E5> |-/l <1C60D8A8C9B854D08887A955C7D68D8C5333C31878F574AA9AE5E3E7AADBE1B3A329F6AE772A2FA9E3BCD7AD6B2EB2F08C5C060E81EC0A70F41E9D6D0E7B19D3FEF21F30C39B12829A5A4E4EDD48F68C41B6A233A2DBED> |-/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC4969344E90E1A3F6BB0EC423A0839831AD6C986649A08BE59C9A3AF60608A974950B299379DB00149450A78653D6D4B9B18966FB51AC5B75CCA0334B3300F064709EE5249490C1CB7C6E6F7A3DBD6837889932B38C16FA553F6A7BD9185FFB7638767BBEB1CC928CF2A5534FC32F6F3027FAF68DC8EE9A75EC980BD894ADC4F0B26421A336F0F6A40AAD70D4278736A8FEA511C2ED4A971DB961B998B0AA6DA2144859946854D246CD2A6E94B7321CC1214550> |-/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A91089ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0DEB009172C2D67F26ED44CA4931A6533F30AB34> |-/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA507D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD7663199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B01C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D65956107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECDF05FEB5C54162C09AD2C0169673C> |-/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D372741C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08AFD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9B8097DA00FD849056413A4E04E950801ED07C405C45837491E4864754EBADCC32B5232850305BAEEDA0A345554138E3B49E2F7260D37E80E4C37FED6327D7438DA6B2E0355D0043D6795C50CA3> |-/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF63787A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70CC8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-/u <1C60D8A8C9B7A73DE1FEDB846BC597269D9E0C51D8C22F2B722B34AEBAF190658C0559601B266D7A25A55FD43DDD5BEFD1643FDA15DB9307B56B392B5AC68F81B580F46B71CB6DE1A21AE03B91093587C26F113B0055E84FDB8C5EDADEE628F85456B6D1B0C90F3F4C6B66407F7C61F465E76A627C6E1AC486C9BC9506FCF303D0A507D5D7D5D700213EA098FC6A864FC4203B659E> |-/v <1C60D8A8C9B7A73DDC2846ECA263567D5FF766DAF6EDECBDA59981A2B8D852D5F3C735E0CB09E278E085C85902E93B6730AC94976F06C86CE79902DFE3D63F4327D345589E5D6D8E4470DC068DE92C7775CDBCE234CF63D9048B83B5B8225EB38A3E7FD244643B093F0131528FD6DE23> |-/w <1C60D8A8C9B6079F073CF9E9FD4DD755103DBBF986FA4805E36E84A4ECDE5D22075F7DCF210C6B1EBA68713659F633DB777AF20557A55192976916F7539FBF60FD9581CC24839D0FB84FEDB8D55FB604997EF9376D1DB0C150E41998C0DD7332B70334BC2A16949E085C7559C48EDDB465613BB3B4A21037C818DEE65F274EC082BD0BF16541E3A6DC67D01E45FCE5987C6993A634C7751F403C64619D5D34EDF98783774454B5C36C735A22C2> |-/x <1C60D8A8C9B7A73DC5490245197C6A10ADDC3E0FA58392059EC7D8F6B66FB0930B38EB119ACB6A2A3F634D77F5CF7C8D99C62501D6684A6FD07A49AFAD748B3BD4468AD4BA11802E815F7DDC3EFDD84C4D7209BF92B0439CDE5D6763248366DFBFD06A148E86014B62BD462267E2267FF702B3FE0C2F56259689794C288E394AE4382AFC6AC04373CAD56E7F81CE52F61834C7721A873F0194632E517E056B975C> |-/y <1C60D8A8C9B7A73DB5828C8EB66C86A2A0178950C8A5D2BCDF7E587CE4AD01DF8AD4603198C6F5DF9E7F658259AE7FF6DC72080528C2A7D419F982E298CCAED2E6BCC85E06532CEB363664FB4449960341BAA9D39DAAAF5C47EC79D4FFB0F446C4E2A0FDC91EAC4399171E6DFD5F8C5B3A9EDD053AD9BFC6A562A7DCD44F19646282D2DDE100CDBBA0EDB34E355DB469767675AF6D94185E4181FCCDCD20A6CA572AF5532989> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 46 /period putdup 66 /B putdup 71 /G putdup 77 /M putdup 90 /Z putdup 91 /bracketleft putdup 93 /bracketright putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 120 /x putdup 121 /y putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /.notdef /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf52.785 335.012 mo(FIG.2.\(Coloronline\)Barrierdistributionsforthe)[4.98532 2.98574 6.47374 5.19334 4.4832 6.02991 2.98574 5.98066 4.4832 2.49265 4.4832 4.4643 4.4832 4.4832 2.49266 2.49266 4.4832 3.98108 4.46429 5.98067 3.98108 2.98575 2.98573 2.49266 3.98109 4.46429 4.4832 2.49266 3.48799 2.49266 2.98575 2.49266 4.30208 4.4823 2.49266 2.49266 4.4832 4.4832 4.96835 2.98575 4.4832 4.46429 2.49266 4.4832 0 ]xshBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf232.083 331.754 mo(20)[2.9882 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf238.572 335.012 mo(Ne)[6.47105 0 ]xsh%ADOBeginSubsetFont: AUBBAA+MTSY Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /AUBBAA+MTSY def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation and Y&Y, Inc. (508) 371-3286. All Rights Reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (MTSY) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /plus putdef/FontBBox {0 -954 1043 796} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 465 484 501 506 657 676] def/OtherBlues [-209 -186] def/BlueScale 0.0479599 def/StdHW [50] def/StdVW [50] def/StemSnapH [20 50] def/StemSnapV [30 50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/plus <1C60D8A8C9B6C180FE7E255088499B6A505EB6DB68D164488832FE8CE1A33AC5E060A59D03BCEB9639BC4D489466A32ABD040C578748437F6AB5A2> |-/.notdef <1C60D8A8C9B81F2CC3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BDEBBX+MTSY /AUBBAA+MTSY findfont ct_VMDictPut/BDEBBX+MTSY*1 [67{/.notdef}rp /plus 188{/.notdef}rp]BDEBBX+MTSY nfBDEBBX+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf252.513 335.012 mo(C)shBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf262.998 331.754 mo(90)[2.98819 0 ]xsh%ADOBeginSubsetFont: RQYAAA+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBV+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B821B3259708BCD717D7034C35291735F761867B0D7790444C597891B3AD34A0C55BF7F0630DAF50BF8F32C25C98049945665AAA61E7C5365BA0E652780DEDD63BA8A518E6584369A625690069> |-/E <1C60D8A8C9B605F8AF5A9AF85419300CC62BF363748D5BBE7BA8D653DFA08D644E5D56CC345D856C2F57339C8772D24C3CAF27246D6227383AB8E23E3B7323891569B8889832B67CC97D708F8DDB61F822D5011FAD3F33E2F795260F52BFD7536AB4588CBE19634D5CE5A8BD69E6D6E17C369DC9FCAB40C10E954A26163A3292EB0E795EEC758A842011EE6AA45E9A603E1860C6A9896E308AFFAA649D8A24D5FDBA99D39ACADC182E7169FCC9ECCFCCBDF49F8501447D1EC8D41053B310> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBV+MTMI /Encoding getdup 59 /comma putdup 69 /E putpop%ADOEndSubsetFont
/BDEBBV+MTMI*1 [58{/.notdef}rp /period /comma 9{/.notdef}rp /E 186{/.notdef}rp]BDEBBV+MTMI nfBDEBBV+MTMI*1 [5.9776 0 0 -5.9776 0 0 ]msf268.975 331.754 mo(;)shBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf270.955 331.754 mo(92)[2.98819 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf277.425 335.012 mo(Zr)[5.48108 0 ]xsh40.8232 345.966 mo(systems[panels\(a\)and\(b\),respectively].Differentsymbolsreferto)[3.488 4.4832 3.488 2.49266 3.98109 6.97586 5.76904 2.98843 4.4832 3.98109 4.4832 3.98109 2.49265 5.78698 2.98575 3.98109 5.265 3.97839 4.4832 6.77681 2.98574 4.4832 2.98575 4.52713 2.98575 3.98108 3.48801 4.48318 3.98109 3.98108 2.49266 2.26851 4.34691 3.98108 2.49266 4.4832 2.98575 4.53609 6.47107 2.49265 2.7634 2.98573 3.98109 2.98573 3.98109 4.4832 4.77908 3.48799 4.4832 6.97586 4.4832 4.4832 2.49266 5.778 2.98843 3.98111 2.98572 3.98108 5.26501 2.49268 0 ]xsh40.8232 356.928 mo(differentlaboratorydetectorangles.Thescalingto)[4.4823 2.49176 2.76338 2.98843 3.98019 2.98485 3.98019 4.48231 6.1384 2.49355 3.98019 4.4823 4.4823 2.98485 3.98018 2.49176 4.48231 2.98485 8.12714 4.4823 3.98019 2.49176 3.98019 3.98019 2.49176 4.4823 6.63327 3.98019 4.4823 4.4823 2.49176 3.98019 3.48709 5.88644 5.48109 4.4823 7.62325 3.48711 3.98019 3.98019 2.49176 2.49178 4.48232 8.12715 2.49265 0 ]xshBDEBBV+MTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf234.159 356.928 mo(E)shBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf240.606 358.268 mo(eff)[2.65526 1.83627 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf251.532 356.927 mo(\(seetext\))[2.98575 3.48799 3.98108 7.61429 2.49265 3.84302 4.48318 2.49265 0 ]xsh40.8234 367.88 mo(canbeseentobeverygood.Thedashedlineintheupperpanel)[3.98019 3.98019 8.09128 4.48231 7.57841 3.4871 3.98019 3.98019 8.08231 2.49176 8.08232 4.4823 7.5784 4.34691 3.97839 2.98485 8.08231 4.4823 4.48232 4.4823 4.4823 5.8407 5.47751 4.4823 7.57841 4.4823 3.98018 3.48711 4.48232 3.98019 8.09128 2.49178 2.49176 4.48232 7.5784 2.49266 8.07335 2.49266 4.4823 7.5784 4.48232 4.48232 4.4823 3.98018 6.59741 4.48233 3.98019 4.4823 3.98022 0 ]xsh40.8234 378.843 mo(showstheCCprediction[foldedwiththeexperimentalresolutionof)[3.488 4.4832 4.25724 6.47105 5.80492 2.49266 4.4832 6.29083 5.98065 8.28951 4.4832 2.98575 3.98108 4.4832 2.49266 3.98108 2.49266 2.49266 4.4832 6.8046 2.98575 2.98575 4.48318 2.49268 4.48318 3.98108 6.79474 6.47375 2.49265 2.49268 6.79474 2.49265 4.4832 6.29083 3.843 4.4832 4.4832 3.98108 2.98575 2.49266 6.97586 3.98108 4.4832 2.49266 3.98108 4.82393 2.98575 3.98108 3.48799 4.4832 2.49268 4.48318 2.49265 2.49268 4.48322 6.79471 4.48233 0 ]xsh40.8234 389.805 mo(1.2MeV\(FWHM\)].Thesolidlineinthelowerpanelshowstheresult)[4.4823 2.2407 6.22806 7.9703 3.98019 8.21681 2.98843 4.98441 8.46339 6.47284 7.97031 2.98484 2.98485 3.97839 5.47751 4.4823 5.72414 3.49249 4.4823 2.49176 2.49176 6.21909 2.49176 2.49176 4.4823 5.72415 2.49266 6.22806 2.49266 4.4823 5.72415 2.49178 4.25725 6.47285 3.98019 4.73419 4.4823 3.98019 4.48232 3.98019 4.24829 3.49248 4.48232 4.25725 6.47284 5.22928 2.49178 4.4823 5.72418 2.9884 3.98022 3.48709 4.48233 2.49176 0 ]xsh40.8234 400.758 mo(oftransformingthe)[4.4832 5.99397 2.49266 2.98574 3.98109 4.4832 3.48799 2.98575 4.4832 2.98574 6.97586 2.49265 4.4832 7.48785 2.49265 4.48321 0 ]xshBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf114.597 397.508 mo(20)[2.9882 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf121.068 400.757 mo(Ne)[6.47105 0 ]xshBDEBBX+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf135.009 400.757 mo(C)shBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf145.494 397.508 mo(90)[2.9882 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf151.965 400.757 mo(Zrexperimentaldataasdescribedin)[5.47751 6.0119 3.843 4.4823 4.48232 3.98018 2.98485 2.49176 6.97498 3.98018 4.4823 2.49176 3.98018 5.51703 4.4823 3.98019 2.49176 6.9929 3.98018 6.49802 4.4823 3.98019 3.48709 3.98019 2.98486 2.49176 4.4823 3.98016 7.48785 2.49268 0 ]xsh40.8238 411.719 mo(thetext\(seeSec.)[2.49176 4.4823 5.95818 2.49266 3.843 4.48231 4.47334 2.98843 3.48711 3.98018 5.94922 4.98621 3.98019 3.98018 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf102.618 411.719 mo(III)[2.98843 2.98843 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CFD85> |-/Q <1C60D8A8C9B6079F6E1E76D0A13BD11B6B3F4804F5A19B1868DD68EA07A533D55BA1DB5426F41366BF265130E897B52042AE15E9F22EB4DDC77B8AFF8E106E64BC8C0CBA2BCE6FA366881067DAA81F67C7CCDC9FC11A0D53E651A078B7AB8936F1603D96C8EB8D33A8044FEF54C3B8F3C8467977798B85A4774515CCA3FC6D9C7CE322CBB9480B27BF912F> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 45 /hyphen putdup 81 /Q putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf111.581 411.719 mo(\).Thistransformationreproducesextremelywell)[2.98575 4.21241 5.4784 4.4832 2.49266 5.45433 2.49266 2.98575 3.98108 4.4832 3.48799 2.98575 4.4832 2.98575 6.97586 3.98108 2.49266 2.49265 4.48322 6.46208 2.98575 3.98108 4.4832 2.98575 4.4832 4.4832 4.4832 3.98108 3.98109 5.47226 3.84299 4.48232 2.49266 2.98573 3.98109 6.97586 3.98108 2.49265 6.4621 6.47375 3.98108 2.49265 0 ]xsh40.8229 422.682 mo(the)[2.49176 4.4823 0 ]xshBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf54.036 419.423 mo(20)[2.9882 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf60.507 422.681 mo(Ne)[6.47105 0 ]xshBDEBBX+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf74.4578 422.681 mo(C)shBDEBBU+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf84.933 419.423 mo(92)[2.9882 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf91.413 422.681 mo(Zrdata,withoutanyinputfromtheCCcalculations.)[5.4784 5.24707 4.4832 3.98109 2.49266 3.98108 4.50024 6.47105 2.49266 2.49266 4.48318 4.48322 4.48318 4.7522 3.98108 4.34692 6.74094 2.49265 4.48322 4.48318 4.48322 4.74323 2.98573 2.98575 4.4832 9.22552 2.49266 4.4832 6.23703 5.98065 8.22675 3.98108 3.98108 2.49265 3.98111 4.48318 2.49268 3.98108 2.49265 2.49268 4.48318 4.48322 3.48798 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf40.824 465.836 mo(ofcountswasobtained.Theeffectiveenergywascalculated)[4.97831 6.59716 4.42041 4.97831 4.97831 4.97831 2.76662 7.16418 7.09238 4.42041 7.14625 4.97831 4.97832 2.76662 4.42039 2.76662 4.97832 4.42039 4.97832 5.78726 6.08409 4.9783 7.70409 4.4194 3.06941 3.32047 4.42039 4.42041 2.7666 2.51955 4.82388 7.71306 4.42041 4.97832 4.42041 3.14113 4.97832 8.26199 7.09238 4.4194 7.15523 4.42041 4.42041 2.7666 4.42044 4.9783 2.76663 4.42041 2.7666 4.42041 0 ]xsh40.824 477.293 mo(and,afterbinningthedataover0.3-MeVintervals,the)[4.4224 4.9803 4.9803 8.5499 4.4224 3.31647 2.76861 4.4224 9.36876 4.97731 2.7686 4.9803 4.9803 2.76862 4.9803 11.0336 2.76862 4.9803 10.4757 4.9803 4.42239 2.7686 10.4757 4.8239 4.82388 4.41942 9.37772 4.97733 2.48965 4.9803 3.31648 8.85585 4.42241 13.2483 2.76862 4.9803 2.76862 4.42241 3.31648 4.72527 4.42241 2.76862 3.87454 8.54092 2.76862 4.98032 0 ]xsh40.824 488.75 mo(corresponding)[4.42141 4.97931 3.31548 3.31548 4.42141 3.87354 4.9793 4.97931 4.97931 4.97931 2.76761 4.97931 0 ]xsh%ADOBeginSubsetFont: RQYAAA+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBV+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B745265DB920B47933B671A6716EFB8EB6DAEE719CDC462CFE1483DCAB3C27> |-/R <1C60D8A8C9B630AC404BE0F435F67F42A37C43F014CD7E848A5834CA6569728501DE73FF6274D97ACB28E20850753DEA74DE402BA59C71B674845E957C5A694B87469F520D8A7FFBA0141D271E1220923C0FA27F93026C70FE0262C0A28F72012EC8AE879DB596CEEBD1A24D8DB8C1E8FB2B0C966742224689A8F3AE0D87BFDD933AA9EF142617E66B64E0FC74F788EBCB01D4F7B7305DED50B3500572E2744D9851E01D23CDD64E2E90C706162A7646F9BA27D2E9A75003DEE0608FF117> |-/sigma <1C60D8A8C9B785CBCB9D2B44DD94483A0428E6F4E4D7E03DEFB509A2DFCA0C7A2928DB2B92C4FBAA4D1E38557D9897CFAB66385FD3A065545133B3A70BD5E32F1A7D681AF2D2868C4346C00E5BEDF2FC6BD89D63390F9C802CE957A379965590808D690E6AE96296EC5B5E0D9247E7721DC554A94B4CA45C7C68A49FB02F35372BE6235B03F25F4D33FCC707B110E1AB4CDE3E1AD694D43A51677B6EDC51CC> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBV+MTMI /Encoding getdup 61 /slash putdup 82 /R putdup 190 /sigma putpop%ADOEndSubsetFont
/BDEBBV+MTMI*1 [58{/.notdef}rp /period /comma /.notdef /slash 7{/.notdef}rp /E 12{/.notdef}rp /R 107{/.notdef}rp /sigma 65{/.notdef}rp]BDEBBV+MTMI nfBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf100.098 488.75 mo(\276)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf105.417 490.244 mo(QE)[5.0316 0 ]xshBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf115.218 488.75 mo(=\276)[4.68044 0 ]xshBDEBBV+MTMI*1 [6.9738 0 0 -6.9738 0 0 ]msf125.217 490.244 mo(R)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf133.164 488.75 mo(wasconstructed\(seeFig.)[7.09238 4.41942 6.16493 4.42239 4.9803 4.9803 3.87454 2.7686 3.31648 4.9803 4.42239 2.7686 4.42241 7.2717 3.31647 3.87453 4.42239 6.69588 5.53821 2.7686 4.98032 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf235.421 488.75 mo(1)sh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf240.398 488.75 mo(\).Then,the)[3.31648 4.77008 6.08607 4.9803 4.42239 4.98032 4.78802 2.76862 4.98032 0 ]xsh40.8246 500.207 mo(barrierdistributionsofFigs.)[4.9803 4.4224 3.31648 3.31647 2.7686 4.4224 7.04647 4.98031 2.76861 3.87453 2.7686 3.31647 2.76861 4.77905 4.97732 2.76861 2.7686 4.9803 4.9803 7.58759 4.98031 7.04646 5.53821 2.7686 4.9803 3.87453 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf159.831 500.207 mo(2\(a\))[4.97931 3.31548 4.4214 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf179.586 500.207 mo(and)[4.41942 4.97731 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf197.694 500.207 mo(2\(b\))[4.97931 3.31548 4.97931 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/fi <1C60D8A8C9B7EF32570AFF8232948072BEC4C50248C1208A69B28B65AADBCA92759C919FA1E9FEED9805553A4DA719E642BF818FA1F207BFFFA261F4684EEDEC74D5FA21E60ACFC86CCDCCAB1F34855657DE53C09E74BC643E809747A4490D6E2D525AF43CE58C8030D80DD7C648C3036BD5C3D4AD9A69D5D31C9A067EA77341991BEAF0722208EC7CF6FF370325F44116B8F101A9BC9394B7572AA8CB6FD53542F5362A92C681DCE3150EDF3158D05182681F9FAFCE92EDE83E3B17EF7235AE203955993A0D562648749B3CC0> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 174 /fi putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi 81{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf218.006 500.207 mo(weredetermined)[7.192 4.42239 3.31648 8.14542 4.98032 4.42239 2.76862 4.42239 3.31647 7.74991 2.76862 4.98029 4.42242 0 ]xsh40.8246 511.664 mo(usingthe\256nite-differencemethod.Theresultscon\256rmthose)[4.97931 3.87353 2.76761 4.97931 8.05477 2.77159 4.97931 7.49686 5.53722 4.97931 2.76761 2.76761 4.42141 3.31548 4.97931 2.76761 3.0694 3.31548 4.4214 3.31548 4.4214 4.97929 4.42142 7.50581 7.74892 4.42139 2.76761 4.97931 4.97931 4.97929 5.58005 6.08508 4.97931 7.49686 3.32045 4.4214 3.87354 4.97931 2.76761 2.76759 6.93904 4.4214 4.97931 4.97929 5.53722 3.31548 10.8363 2.77158 4.97931 4.97931 3.87354 0 ]xsh40.8246 523.121 mo(ofRef.[)[4.97931 5.81409 6.64314 4.42141 3.31548 4.98628 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf74.3049 523.121 mo(12)[4.97732 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf84.2586 523.121 mo(],butwithsigni\256cantlybetterstatistics.)[3.31747 4.98627 4.77906 4.97732 5.26523 7.19101 2.7696 2.7696 7.46996 3.87553 2.76961 4.98129 4.98129 2.76961 5.5392 4.4234 4.4234 4.98129 2.76961 2.76961 7.48788 4.98129 4.4234 2.76961 2.76961 4.42339 5.8141 3.87952 2.76959 4.4234 2.76959 2.76959 3.87555 2.76959 2.76959 4.4234 3.87552 0 ]xsh52.7857 534.578 mo(Theresultsofcalculationsperformedwiththecode)[6.08508 4.97931 6.14693 3.32146 4.4214 3.87354 4.97931 2.76761 2.76761 5.58909 4.97931 5.04001 4.42141 4.4214 2.76761 4.42141 4.9793 2.76761 4.42142 2.76761 2.76761 4.97929 4.97931 5.61598 4.97931 4.4214 3.31548 3.31549 4.97929 3.31548 7.7489 4.4214 6.70483 7.19101 2.76761 2.76761 6.69586 2.76761 4.97931 6.13795 4.4214 4.97931 4.97931 0 ]xshBDEBBU+Times-Roman*1 [7.9701 0 0 -7.9701 0 0 ]msf254.108 534.578 mo(CCQUEL)[5.31693 5.31689 5.67075 5.75519 4.87048 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf40.824 546.035 mo([)sh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf44.1445 546.035 mo(14)[4.97731 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf54.0982 546.035 mo(]areshowninFig.)[7.29056 4.41941 3.32047 8.39748 3.87951 4.97732 4.72526 7.19101 8.95438 2.77159 8.95438 5.53522 2.77159 4.97732 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf138.724 546.035 mo(2\(a\))[4.97931 3.31548 4.4214 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/j <1C60D8A8C9B854D0F8036B9E41E00749D27292159EBFE77AC2277EF5488334291DD30C4B9C3E7C953150698FE31B2CBE1624AFD85A81A9069F8F47C4285F33A4C9AD85DA78A27DB5C06356F829273C4740DFB56B8B0FDC43D66AC99A3ABDAF5532DEF5D91EF8D649F7038A091BBD40D049C74BB965EB68080498527B94AE> |-/k <1C60D8A8C9B7A73DC549024AEE55A01243B0ED1B2825DB74E3D4409DAB03360E64EE70A07ED7B69F115EEF98820D21F1DE6EF3BB4358612BA07FC9A40921C0AD30EF197C3D695EFDC35D3C9730116E52E0ABEFC9769B9302392F123FDEAA4AA885495C7D34579141F0B531400B42BB4E124EADD24EC34F713FF7466019E554EC1582FC6D1F609CBE080383D47963691E73E752C0BDF5CFFA1CA9F764FD810298046BFCBC263AE7BCB74C096697F8A00B5877DC20F2A2> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 106 /j putdup 107 /k putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi 81{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf158.731 546.035 mo(for)[3.31648 4.9803 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf174.321 542.417 mo(20)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf181.791 546.035 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf197.28 546.035 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf208.926 542.417 mo(90)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf216.396 546.035 mo(Zr.Theyinclude)[6.08707 3.31747 6.45277 6.08409 4.98129 4.26599 8.97333 2.77158 4.98129 4.4234 2.76962 4.98129 4.98129 0 ]xsh40.8251 557.492 mo(couplingsbetweenthe0)[4.42041 4.97831 4.97831 4.97831 2.76662 2.76661 4.97832 4.97831 7.01972 4.97832 4.42041 2.76661 7.19001 4.42041 4.42041 8.10856 2.76661 4.97831 7.54168 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf139.266 553.874 mo(C)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf145.206 557.492 mo(,2)[5.60695 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf155.79 553.874 mo(C)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf161.739 557.492 mo(,4)[5.60695 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf172.323 553.874 mo(C)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf178.263 557.492 mo(,and6)[5.60695 4.41942 4.97731 8.10857 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf206.352 553.874 mo(C)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf215.406 557.492 mo(statesinthe)[3.87553 2.76959 4.4234 2.76959 4.4234 6.99283 2.76961 8.09958 2.76961 4.98131 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf266.823 553.874 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf274.293 557.492 mo(Ne)[7.19101 0 ]xsh40.8245 568.949 mo(rotationalband.Theresultsconvergerapidlyasthenumber)[3.31548 4.97931 2.76761 4.42141 2.76761 2.76761 4.9793 4.97931 4.4214 6.36311 4.97931 4.42141 4.97931 4.97931 6.08416 6.08508 4.97931 8.00993 3.32047 4.4214 3.87354 4.97929 2.76761 2.76761 7.44315 4.42139 4.97931 4.5808 4.8239 4.41942 3.14113 4.97733 8.02786 3.32146 4.4214 4.97931 2.76759 4.97931 2.76761 8.55887 4.4194 7.46107 2.77159 4.97931 8.00096 4.97931 4.97931 7.7489 4.97931 4.42139 0 ]xsh40.8245 580.406 mo(ofstatesisincreased,anditwasveri\256edthattruncating)[4.97931 8.54086 3.87354 2.76761 4.4214 2.76761 4.4214 9.08995 2.76761 9.08995 2.76761 4.97931 4.42141 3.31548 4.4214 4.42141 3.87354 4.4214 4.9793 7.72202 4.4214 4.97929 10.2057 2.76761 7.98303 7.09238 4.41942 9.09891 4.8239 4.4214 3.31548 2.76761 5.5372 4.4214 10.2147 2.76761 4.97931 4.4214 7.992 2.76759 3.31548 4.97931 4.97931 4.42139 4.42142 2.76761 2.76761 4.97928 0 ]xsh40.8245 591.863 mo(thecalculationsatthe4)[2.76761 4.97931 8.15439 4.4214 4.4214 2.76761 4.42141 4.9793 2.76761 4.42141 2.76761 2.76762 4.97931 4.97931 7.62345 4.4214 6.4976 2.76762 4.9793 8.14542 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf139.833 588.245 mo(C)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf149.508 591.863 mo(levelisentirelysuf\256cientforour)[2.76761 4.16736 4.82388 4.41942 6.50658 2.77159 7.59656 4.4214 4.97931 2.76761 2.76761 3.31549 4.4214 2.76761 8.7123 3.87952 4.97931 3.0694 5.53723 4.42139 2.76761 4.4214 4.97931 6.50658 3.31546 4.97931 7.04648 4.97931 4.97931 0 ]xsh40.824 603.32 mo(purposes.Wealsotookaccountofthestrongoctupole-phonon)[4.97931 4.97931 3.31548 4.97931 4.97931 3.87354 4.4214 3.87354 4.56287 8.6037 6.49762 4.4194 2.76762 3.87354 7.03758 2.77159 4.9793 4.97931 7.04654 4.42142 4.42139 4.42142 4.97929 4.97929 4.97931 4.85976 4.97931 5.38171 2.76761 4.97931 6.48865 3.8795 2.76761 3.31548 4.97931 4.97931 7.04753 4.97931 4.4214 2.76759 4.97931 4.97931 4.97931 2.76759 4.4214 3.31546 4.97931 4.97931 4.97931 4.97931 4.97931 0 ]xsh40.824 614.777 mo(stateoftheprojectileandthevibrationalexcitationsofthe)[3.87453 2.7686 4.4224 2.7686 8.36958 4.97731 7.26266 2.7716 4.98031 8.36958 4.9803 3.31647 4.9803 2.76861 4.4224 4.42239 2.76861 2.7686 2.76861 8.36958 4.42239 4.9803 8.93745 2.7686 4.98032 8.36957 4.97733 2.7686 4.9803 3.31648 4.42239 2.7686 2.76862 4.9803 4.9803 4.42241 6.72276 4.26599 4.9803 4.42241 2.76862 2.76862 4.42241 2.76862 2.76862 4.9803 4.98032 7.84763 4.98032 7.26266 2.76862 4.98029 0 ]xsh40.824 626.234 mo(target.However,becausethe)[2.76661 4.42041 3.14114 4.97831 4.42041 2.76661 4.92252 7.191 4.72527 7.19101 4.16735 4.82389 4.42041 2.92494 4.94145 4.97831 4.42041 4.4204 4.4204 4.97831 3.87253 6.85826 2.77159 4.9783 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf157.176 622.616 mo(90)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf164.646 626.234 mo(Zrdeformationparametersare)[6.08607 5.76927 4.9803 4.42241 3.31647 4.9803 3.31648 7.74991 4.42239 2.7686 2.7686 4.98032 7.41615 4.9803 4.42239 3.31648 4.42241 7.74989 4.42241 2.76859 4.42242 3.31647 6.30939 4.4194 3.31647 0 ]xsh40.8248 637.691 mo(smallcomparedwiththosefor)[3.87453 7.7499 4.4224 2.7686 6.14692 4.4224 4.9803 7.74991 4.9803 4.4224 3.31647 4.42239 8.36958 7.192 2.7686 2.76861 8.34269 2.7686 4.9803 4.9803 3.87453 7.79375 3.32146 4.98029 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf168.912 634.073 mo(20)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf176.382 637.691 mo(Ne,theyhaveapractically)[7.192 4.42239 5.86798 2.77159 4.9803 4.26599 8.36061 4.97731 4.22116 4.8239 7.8027 7.79375 4.9803 3.31648 4.42239 4.42239 2.76862 2.76859 4.42242 4.42236 2.76862 2.76862 0 ]xsh40.8249 649.148 mo(negligibleeffectonthebarrierdistribution\(seealsoFig.)[4.9803 4.26599 4.9803 2.76861 2.7686 4.9803 2.76861 4.9803 2.76861 6.03933 4.4224 3.0694 3.31648 4.42239 4.4224 4.39251 4.9803 6.59723 2.76861 4.98031 6.03932 4.98032 4.42239 3.31647 3.31647 2.76862 4.42239 4.94138 4.98032 2.76859 3.87454 2.7686 3.31647 2.76862 4.77905 4.97733 2.7686 2.7686 4.9803 6.59724 3.32045 3.87454 4.42241 6.03934 4.41942 2.7686 3.87454 6.59724 5.53522 2.76862 4.9803 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf259.785 649.148 mo(5)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/colon <1C60D8A8C9B854D0F4C3D92D816E2ECB7379D6E9CCDD18181277390E435A4F9286287C26709A7A3847FAD4C0EAD036C0A2A8D3B3CCF6217533C359A366F9DFF3159334E6E32E3452EAD4EA9B044C5B5B415F> |-/fl <1C60D8A8C9B7EF32570AFF8232948072BC65F4FCDEED93F8917430449621697666FEA5EBD5311FD28A9A69AF211F6602613B9026B677DBEFAD0216F72A08046812A9A29E407D0226329ED3E0DF5506570A5E982BBE67F939EAD48FF47803DB8971F153583720672E2153E994886520416672B941771C44DDBF750245E44E9FF1B6BFFC8062C470E5FBE272F6A0BF2D39A066F8E778035ECCEEA53786843EBB3F60F9805B785E4897D7B5C2AF8FB4C9DED8DF2726B86368A6BDBE44466DAD45C2B5C5DEFD54D28D83019F8AEA361CFEC5> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 58 /colon putdup 175 /fl putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine /colon 6{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi /fl 80{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf264.762 649.148 mo(\).For)[3.32047 4.11255 5.38181 4.97733 0 ]xsh40.8249 660.605 mo(thesamereason,thecalculateddistributionfor)[2.7686 4.9803 7.64132 3.87951 4.4224 7.7499 7.64132 3.32046 4.4224 4.42239 3.87453 4.9803 4.9803 5.72451 2.7686 4.9803 7.64132 4.4224 4.42239 2.7686 4.42241 4.9803 2.7686 4.42241 2.76859 4.42241 8.20819 4.9803 2.7686 3.87453 2.76862 3.31647 2.7686 4.77907 4.97731 2.7686 2.76862 4.98032 8.19922 3.32146 4.98032 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf234.405 656.987 mo(20)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf241.875 660.605 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf257.364 660.605 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf269.01 656.987 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf276.48 660.605 mo(Zr)[6.08408 0 ]xsh40.8247 672.062 mo(isalmostidenticaltothatfor)[2.7686 6.36319 4.4224 2.76861 7.74991 4.9803 3.87453 5.26524 2.76861 4.9803 4.42239 4.98031 2.76861 2.7686 4.42239 4.4224 5.28317 2.7686 7.461 2.76859 4.98032 4.42239 5.2742 3.31647 4.98032 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf157.608 668.444 mo(20)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf165.078 672.062 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf180.576 672.062 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf192.213 668.444 mo(90)[3.48341 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf199.692 672.062 mo(Zrandisnotshown.)[6.08508 5.83203 4.4214 4.97931 7.47893 2.76761 6.36317 4.97931 4.97931 5.26523 3.87354 4.97931 4.72528 7.19098 4.97934 0 ]xsh315.791 7.46002 mo(Thecalculationsreproduceastructureverysimilartothat)[6.08508 4.97931 7.30756 4.42142 4.42142 2.76758 4.42142 4.97931 2.76761 4.42142 2.76761 2.76761 4.97931 4.97931 6.77664 3.31546 4.42142 4.97931 3.31546 4.97931 4.97931 4.97931 4.42142 7.31653 7.29858 3.87952 2.76761 3.31546 4.97931 4.42139 2.76764 4.97931 3.31546 7.29861 4.82388 4.42142 3.31546 7.86649 3.87952 2.76758 7.7489 2.76764 2.76758 4.42145 6.18268 2.77161 7.85748 2.77161 4.97931 4.42139 0 ]xsh303.839 18.917 mo(seeninthedatafor)[3.87354 4.42142 4.42139 7.82962 2.76761 7.82959 2.76761 4.97931 7.2717 4.97931 4.42142 2.76761 7.27173 3.32144 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf383.913 15.2961 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf391.383 18.9142 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf406.881 18.9142 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf418.527 15.2961 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf425.997 18.9142 mo(Zr.Moreimportant,though,is)[6.08609 3.31647 5.33694 8.85583 4.98032 3.31647 7.2717 2.77161 7.74991 4.98029 4.98032 3.31647 2.76862 4.42239 4.98032 2.76859 5.34592 2.77161 4.98029 4.98035 4.98029 4.98029 4.98029 5.35492 2.76862 0 ]xsh303.841 30.3712 mo(thecleardifferencebetweenthe)[2.76761 4.97931 6.46173 4.41943 2.76761 4.42139 4.42142 5.3638 4.97931 2.76758 3.06943 3.32047 4.42139 3.31549 4.42139 4.97931 4.42142 6.46176 4.97931 4.42139 2.76761 7.19101 4.42139 4.42139 7.0376 2.76761 4.97931 0 ]xsh%ADOBeginSubsetFont: TMRAAA+Times-Italic Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /TMRAAA+Times-Italic def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle -15.5 def/BaseFontName (Times-Italic) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 100 /d putdup 101 /e putdup 109 /m putdup 114 /r putdup 115 /s putdup 117 /u putdef/FontBBox {-169 -217 1010 883} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-18 -0 653 670 428 441 676 683] def/OtherBlues [268 271 -209 -205] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/StdVW [76] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/a <1C60D8A8C9B7A73DCF5D2D361A1FE7BACB90F7ECBC39897143FAA968C42DE5542D7C1E50C896C16D636C2B0931374312D5A913BF97E0FFE54FA376BD3BF89D431B814050D3DCDC2B170275D5928C2C94909A4E7BC365B3672186E2EEAF1ACDF76A3BB344F81AE8D8112A17EA6A2BB97B55B797F2DB5F281D8B7D8F2CA3F90848C1E13D8168838A5B84BC9DBCDFE6796394455983F2CD7583645744549ACA6277D21E676C268D4BAF0D407670137FC6C8D46ADF38BC2A10298A9E9ACB7238FD126ED0E9A8AD213C70926AAD623160> |-/d <1C60D8A8C9B7A73DCEAFB0502D19804C41A1289FBE393133212FF072816F5E790461C8C064F8477CE1ED8EEF8D96B3CFA3E28562C084518B47A9FC15D1D1737421795E8D724445E496F7976A135B1DBC1AD31BE0F362260B29AF913FACF865A2123755EA97DB5AC6B2A157F9C7949F10711E81209DCD5047371B24D643591CFC6B32F3841D3F6B552C8EB8094B9ADFF1146C676332F2D47309E535A774DDEBEE2053B8CD609DFB12165934B6B268B1E4DF178DBFB2B4D00BC383AA6E22B155CC890817E9B5541F6267992AD118B9C32AD22F0D62C41DD8C3229F6D689F3D7277BAEA7D72526AB82389A0FC6716EA5B2E5B43777A859C7C> |-/e <1C60D8A8C9B77FE2B997F32F2DB91A4F584393A1EA30FBC29D24ABE1FB5A639719D47006341803310EC93719C9A6BB29A72A60CDB34F352CE28CA4429D27F6E313A68FCEF9BDAFD626592A1A3BEC3764DC5E56A83ECF98D274A3DC99A14784C4D20D2B8E00BADF9632E634A97340D3> |-/m <1C60D8A8C9B6079F178B521F79AB859140E406AE7E084E32C2C68D8A06B8F758F4254B243F98D485E9D9C937563C8698466E95C992496302E12BB4F7CA3F3E27D50F6E46DCB604DD191BF8D7A777594B90A72A244169B2CCF78BF596310BB95890A3420D3FFCB999A8914518A983D9DA0A027824CCE412F85C7E2AB53280AD58D362B1525F74F2D6F76476A93638CFD6E57240B7B093440F6AE82E56CAD093FD9F73287AF05A9BCA3C2F2D980CD1F2933B964E21FFC72E784A50C5B1ADEDB1AF6FD556A8D35BF66456880D64029300C6B9B156CD431857B4C5C9000A8041E562513092AD3FC7F004E5CC5BA35C7C241EADC1471FEB79284EDA56A1E93193C81E48406A7351D250F448AC288F68> |-/r <1C60D8A8C9B7361F55E947F6EEB65286070565E357FB69BAF81737556C38F514C7198DA9EADD74FDEBC97B90244C9498EADC0381CF233CEAC5C06CA32BE9A9980BAB58552133B1C36FEDEA3FE55B4A4375965C6382236C9F7EB1AD53FD016FC7E6B3E01E65D32232EEABF56CA9175ACCFEAA72085838318D3B590E222FDD0D5FA8CFE69A4FD3B2F29DD5D4ED7FFE22068516663169> |-/s <1C60D8A8C9B7361F75CC3076C4C09851F81614EFB927F3601F05FED6D4C1D6D94E8A00F767C01E1F3E4CE363794A0F95571AE655F7AEF8A48D41E667036E8A1175C64EE43DAE443F38DFE1315781197FB9B8EA4742D09BA1D45F2C73AE0061BB99A53BE5437B871174C2BB64DBF7803409406237EB8A13C12A29921F9F41665945080AC8D2A6F40C68284E090C9A4545B7D1687D819BA5A41C050C7564AC394C> |-/u <1C60D8A8C9B7A73DCCC2CF5CBA95F0E04DB1CF56A49DCF5F71999C50941FEBB4294D09C3BFE2D3CC746D2477EA02700F2E5F7D82C8DFC73B9CC0F3B4668CEB1972630955B676ECD46594E36C75BFF53DE5CC98AE4F9E067B13670B8972EA1669671A6A635D18D9C9E5DA2C701CA45506EAC93A50D92530D3492586D8DCE70B43C457A53B990AB24175324E72827BC45B0A594A79CD0E80FAB1D038EB60C60819190142D45BB4EEA9169D3F642AC5941D2D412297399FFE2F95D4FAF987EE0B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BDEBBY+Times-Italic /TMRAAA+Times-Italic findfont ct_VMDictPut/BDEBBY+Times-Italic*1 [97{/.notdef}rp /a 2{/.notdef}rp /d /e 7{/.notdef}rp /m 4{/.notdef}rp /r /s /.notdef /u 138{/.notdef}rp]BDEBBY+Times-Italic nfBDEBBY+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf431.038 30.3712 mo(measured)[7.19 4.42041 4.9783 3.87256 4.9783 3.50989 4.42041 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf471.439 30.3712 mo(distributionsforthe)[4.98129 2.76962 3.87552 2.76959 3.31747 2.76959 4.77908 4.97729 2.76959 2.76962 4.98129 4.98132 5.91284 3.3175 4.98126 5.35486 2.77161 4.98126 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf303.84 38.2101 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.31 41.8282 mo(Zrandthe)[6.08408 7.16403 4.42041 4.97833 8.81091 2.7666 4.97833 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf358.758 38.2101 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf366.237 41.8282 mo(Zrtargets:Whereastheformerdisplaysthis)[6.08609 7.15506 2.76859 4.42242 3.14111 4.98032 4.42239 2.76862 3.87454 6.59723 9.40369 4.98029 4.42242 3.31647 4.42239 4.42239 7.71313 2.76859 4.98032 8.24405 3.32144 4.98032 3.31647 7.74991 4.42239 7.14609 4.97736 2.76859 3.87454 4.98029 2.76862 4.42236 4.98035 7.70416 2.76862 4.98029 2.76862 0 ]xsh303.84 53.2852 mo(well-de\256nedstructure,thelatterisvirtuallystructurelessand)[7.19202 4.42239 2.76859 2.76862 3.31647 4.98032 4.42239 5.53821 4.98032 4.42239 7.95615 3.87451 2.76862 3.31647 4.98029 4.42242 2.76859 4.98032 3.31647 4.42239 5.44458 2.76859 4.98032 7.38028 2.77161 4.42239 2.76862 2.76859 4.42242 6.27338 2.77158 6.83142 4.97733 2.76862 3.31647 2.76862 4.98029 4.42242 2.76862 2.76862 7.9382 3.87454 2.76862 3.31647 4.98032 4.42239 2.76862 4.98032 3.3165 4.42242 2.76862 4.42236 3.87457 6.83142 4.42242 4.98029 0 ]xsh303.84 64.7421 mo(wider,incon\257ictwiththetheoreticalcalculations.)[7.19101 2.76761 4.97931 4.42139 2.92496 4.98627 2.77161 7.46997 4.42139 4.97931 4.97931 5.53723 2.76761 4.42139 5.2742 7.19101 2.76761 2.76761 7.46994 2.76764 4.97928 6.92102 2.77161 4.97931 4.42142 4.97928 3.31549 4.42139 2.76761 2.76761 4.42142 4.42139 5.2742 4.42142 4.42139 2.76761 4.42142 4.97931 2.76758 4.42142 2.76761 2.76761 4.97928 4.97931 3.87354 0 ]xsh315.792 76.1991 mo(Althoughthecorrectshapeisreproduced,thetheoretical)[7.19101 2.76761 2.76761 4.97931 4.97931 4.97931 4.97931 8.54092 2.76761 4.97931 7.96512 4.42139 4.97931 3.31549 3.31549 4.42139 4.42142 6.32724 3.87354 4.97931 4.42139 4.97931 7.97406 2.76761 7.41623 3.31549 4.42139 4.97931 3.31549 4.97931 4.97931 4.97931 4.42139 4.42139 4.97931 6.05725 2.76764 4.97931 7.97406 2.77158 4.97934 4.42139 4.97931 3.31549 4.42139 2.76758 2.76758 4.42145 4.42139 0 ]xsh303.84 87.6561 mo(barrierdistributionfor)[4.98129 4.4234 3.31747 3.31747 2.76959 4.4234 8.47809 4.98132 2.76959 3.87552 2.76962 3.31744 2.76962 4.77905 4.97733 2.76959 2.76959 4.98132 10.125 3.32144 4.98132 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf403.209 84.0381 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf410.688 87.6562 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf426.177 87.6562 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf437.823 84.0381 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf445.293 87.6562 mo(Zrisclearlywiderthan)[6.08609 8.49603 2.76859 9.02719 4.42239 2.76862 4.42239 4.42239 3.3165 2.76859 10.134 7.19199 2.76862 4.98029 4.42242 8.47809 2.76862 4.98029 4.42242 0 ]xsh303.841 99.1132 mo(theexperimentalone,andthisisalmostcertainlydueto)[2.76862 4.98029 9.44058 4.26596 4.98032 4.98032 4.42239 3.31647 2.76862 7.74991 4.42239 4.98032 2.76859 4.42239 7.82065 4.98032 4.98029 4.42239 7.52377 4.42239 4.98032 10.0084 2.76859 4.98032 2.76859 8.89169 2.76862 8.89169 4.42239 2.76862 7.74991 4.98032 3.87454 7.79373 4.42242 4.42239 3.3165 2.76859 4.42239 2.76862 4.98035 2.76862 10.0084 4.98029 4.98035 9.4505 2.76862 0 ]xsh303.841 110.57 mo(anapproximationmadeintheCCcalculations.Thatis,the)[4.42142 8.66745 4.42139 4.97931 4.97931 3.31549 4.97931 4.97931 2.76761 7.7489 4.42142 2.76761 2.76761 4.97931 8.68539 7.74893 4.42139 4.97931 8.10855 2.76761 8.6575 2.76761 4.97931 8.10855 6.64212 10.3233 4.42142 4.42139 2.76761 4.42142 4.97931 2.76758 4.42142 2.76761 2.76761 4.97928 4.97931 3.87354 6.19177 6.08411 4.97931 4.42139 6.46173 2.76764 3.87347 6.16486 2.77161 4.97931 0 ]xsh303.841 122.027 mo(nucleus-nucleuspotentialisafunctionofthedistancebetween)[4.97931 4.97931 4.42139 2.76761 4.42142 4.97931 3.87354 3.31549 4.97931 4.97931 4.42139 2.76761 4.42142 4.97931 5.84113 4.97931 4.97931 2.76764 4.42139 4.97931 2.76761 2.76761 4.42139 4.70734 2.77161 5.80527 6.35416 3.31549 4.97931 4.97931 4.42139 2.76758 2.76764 4.97931 6.92102 4.97729 5.24725 2.77158 4.97931 6.35416 4.97931 2.76758 3.87354 2.76761 4.42142 4.97931 4.42139 6.3631 4.97931 4.42145 2.76758 7.19098 4.42145 4.42139 0 ]xsh303.841 133.484 mo(thenuclearsurfacesalongthelinejoiningtheircenters.For)[2.76761 4.97931 7.85751 4.97931 4.97931 4.42139 2.76761 4.42142 4.42139 6.77649 3.87354 4.97931 3.31549 3.22183 4.42142 4.42139 4.42142 7.30765 4.42139 2.76761 4.97931 4.97931 8.43332 2.76764 4.97928 7.85751 2.76761 2.76761 4.97931 7.85748 2.77161 4.97931 2.76761 4.97928 2.76764 4.97931 8.41541 2.76758 4.97931 4.42142 2.76761 6.75854 4.42139 4.42142 4.97928 2.76764 4.42139 3.31549 3.87354 5.93073 5.38177 4.97736 0 ]xsh303.841 144.941 mo(theextremedeformationsthatwehavehere,itismorecorrect)[2.76862 4.98029 6.76761 4.26599 4.98029 2.76862 3.31647 4.42242 7.74991 6.77655 4.98029 4.42242 3.31647 4.98029 3.31647 7.74994 4.42239 2.76859 2.76862 4.98029 4.98032 6.23666 2.76862 4.98029 4.42239 5.12079 7.19199 6.76761 4.98032 4.22113 4.82391 6.77655 4.98032 4.42239 3.3165 4.42239 4.84186 2.76862 5.11179 2.76862 6.20975 7.74994 4.98032 3.3165 6.76758 4.42242 4.98029 3.31653 3.31647 4.42242 4.42236 0 ]xsh303.841 156.398 mo(tousetheminimum\(perpendicular\)distancebetweenthe)[2.76761 9.79224 4.97931 3.87354 9.23434 2.77158 4.97931 9.24332 7.7489 2.76761 4.97931 2.76761 7.7489 4.97931 12.5728 3.32144 4.97931 4.42142 3.31546 4.97931 4.42142 4.97931 4.97928 2.76761 4.42139 4.97931 2.76764 4.42139 3.31549 8.1543 4.97733 2.76761 3.87354 2.76758 4.42142 4.97931 4.42142 9.24329 4.97931 4.42139 2.76764 7.19098 4.42139 4.42145 9.81909 2.76764 4.97931 0 ]xsh303.841 167.855 mo(surfaces[)[3.87454 4.98029 3.3165 3.2218 4.42242 4.42239 4.42239 6.25461 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf342.072 167.855 mo(15)[4.97733 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf352.026 167.855 mo(].Thiswillbeinvestigatedelsewhere,butitisnot)[3.31747 4.86871 6.08707 4.98132 2.76959 6.26456 7.19299 2.76959 2.76962 5.1387 4.98129 6.80447 2.76959 4.58081 4.82388 4.4194 3.87552 2.76962 2.76959 4.92352 4.4234 2.76959 4.4234 7.37131 4.4234 2.76959 3.87555 4.16736 7.19299 4.98132 4.42337 3.31747 4.4234 4.88666 4.77905 4.97729 5.15668 2.77161 5.13867 2.77161 6.25458 4.98132 4.98132 0 ]xsh303.84 179.312 mo(importantforourcurrentconsiderations,sinceweshallshow)[2.76761 7.7489 4.97931 4.97931 3.31549 2.76761 4.42139 4.97931 5.4635 3.31549 4.97931 6.01233 4.97931 4.97931 6.01236 4.42142 4.97931 3.31549 3.31546 4.42142 4.97928 5.4635 4.42142 4.97928 4.97931 3.87354 2.76761 4.97931 4.42139 3.31549 4.42139 2.76761 2.76761 4.97931 4.97931 3.87354 5.19348 3.87952 2.76764 4.97931 4.42139 7.11029 7.19101 7.11926 3.87354 4.97934 4.42139 2.76758 5.45453 3.87952 4.97931 4.72528 0 ]xsh303.84 190.769 mo(inSec.)[2.76761 8.34268 5.5372 4.42142 4.42139 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf335.196 190.769 mo(III)[3.32144 3.32147 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf348.516 190.769 mo(howthedatafor)[4.9783 4.72528 10.5753 2.77161 4.9783 7.78479 4.9783 4.42041 2.7666 7.79376 3.32144 4.97833 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf419.274 187.151 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf426.744 190.769 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf442.242 190.769 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf453.879 187.151 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf461.358 190.769 mo(Zrcanbereproduced)[6.08408 6.70477 4.42041 4.42041 8.35162 4.97833 7.79373 3.31448 4.42041 4.97833 3.31445 4.97833 4.97833 4.97827 4.42041 4.42041 0 ]xsh303.84 202.226 mo(byadirecttransformationoftheexperimentaldataforthe)[4.98032 9.05399 8.49612 4.97733 2.76859 3.3165 4.42239 4.42239 6.84033 2.76859 3.31647 4.42242 4.98029 3.87454 3.31647 4.98029 3.3165 7.74991 4.42239 2.76859 2.76862 4.98029 9.05402 4.97733 7.39816 2.77161 4.98029 8.48715 4.26599 4.98032 4.98029 4.42239 3.3165 2.76862 7.74988 4.42242 4.98032 2.76859 4.42242 6.86725 4.98029 4.42242 2.76862 8.50507 3.32043 4.98035 7.38916 2.76862 4.98035 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf303.84 210.065 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.31 213.683 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf326.799 213.683 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf338.445 210.065 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf345.924 213.683 mo(Zrsystem.Thetransformed)[6.08609 6.58817 3.87454 4.98032 3.87451 2.76862 4.42239 7.74991 5.74243 6.08411 4.98029 7.68616 2.76862 3.31647 4.42239 4.98032 3.87451 3.31647 4.98032 3.31647 7.74991 4.42239 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf462.15 210.065 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf469.62 213.683 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf485.118 213.683 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf496.755 210.065 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf504.234 213.683 mo(Zrdataare)[6.08609 6.58817 4.98035 4.42236 2.76862 7.68616 4.41943 3.31647 0 ]xsh303.841 225.14 mo(shownasthesolidcurveinthelowerpartofthe\256gureand)[3.87354 4.97931 4.72525 7.19101 8.45129 4.4194 7.34448 2.77161 4.97931 7.8844 3.87354 4.97931 2.76761 2.76761 8.44232 4.42142 4.97928 3.31549 4.82388 7.89337 2.76761 8.44229 2.76764 4.97928 7.88443 2.77158 4.72525 7.19104 4.42139 6.79541 4.97931 4.42139 3.31549 6.23657 4.97733 6.77649 2.77158 4.97931 7.89337 5.53723 4.97931 4.97931 3.31549 7.89337 4.42139 4.97931 0 ]xsh303.841 236.597 mo(areseento\256tthosefor)[4.42142 3.31546 9.16162 3.87952 4.42139 4.42142 9.72049 2.76764 9.72049 5.5372 7.50583 2.76761 4.97931 4.97931 3.87354 9.16162 3.32047 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf410.832 232.979 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf418.311 236.597 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf433.8 236.597 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf445.446 232.979 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf452.916 236.597 mo(Zrextremelywell.We)[6.08609 8.0726 4.26599 4.97733 2.76859 3.3165 4.42239 7.74991 4.42239 2.76862 9.73843 7.19098 4.42242 2.76862 2.76862 7.22687 8.6037 0 ]xsh303.841 248.054 mo(shallseethatthistransformationisrelatedsimplytothe)[3.87454 4.98029 4.42239 2.76862 7.73996 3.87949 4.42242 9.39572 2.76862 4.98029 4.42239 7.74893 2.76859 4.98032 2.76859 8.84686 2.76862 3.31647 4.42239 4.98032 3.87451 3.3165 4.98029 3.3165 7.74988 4.42242 2.76859 2.76859 4.98032 9.95364 2.77161 8.83789 3.32144 4.42239 2.76862 4.42242 2.76862 4.42242 9.96259 3.87454 2.76859 7.74994 4.98032 2.76859 9.9447 2.76862 9.95361 2.76862 4.98029 0 ]xsh303.841 259.511 mo(optical-modelpotentialthatdescribesabsorptionintothe)[4.97931 4.97931 2.76761 2.76761 4.42139 4.42142 2.76761 3.31549 7.7489 4.97931 4.97931 4.42142 8.30679 4.97931 4.97931 2.76761 4.42142 4.97931 2.76761 2.76761 4.42139 8.30682 2.77161 4.97931 4.42139 8.29785 4.97931 4.42139 3.87354 4.42142 3.31546 2.76764 4.97928 4.42142 9.40475 4.42142 4.97928 3.87354 4.97931 3.31546 4.97931 2.76764 2.76758 4.97931 10.5115 2.77161 4.97931 2.76758 10.5026 2.77161 4.97931 0 ]xsh303.841 270.968 mo(weak,inelasticchannelsinthe)[7.19101 4.42139 4.42142 4.97931 4.99524 2.76761 4.97931 4.42142 2.76761 4.42142 3.87354 2.76761 2.76761 6.91205 4.42139 4.97931 4.42142 4.97931 4.97931 4.42142 2.76758 6.39011 2.77161 7.46994 2.77161 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf427.797 267.35 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf435.267 270.968 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf450.756 270.968 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf462.402 267.35 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf469.872 270.968 mo(Zrreaction.)[6.08508 5.83203 3.31549 4.42139 4.42142 4.42139 2.76761 2.76761 4.97931 4.97934 0 ]xsh%ADOBeginSubsetFont: CBPQMX+Times-Bold AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBW+Times-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707C5500383F1D3BFE600CE516A971D6EA7F6AE9C8756BC17E51C2C85C84EA248EB15468C5> |-/B <1C60D8A8C9B64EDF8814F057C37C59CCD006BC935F2BA3295A5254F083979C002DA8C3A3E52C9F03FF7E11514181D07DFD7B9E37DBC2E5FEAC914E0221B12DBB05B0DFF86F9AA7230614E808E767488BEDD76D78B68EF97296958A4EEAAC4EE6AC5D5B9DE49CA22D662D050AA4BE45289459B00D226948E6707EA267F5F5365958E8CF7346C9DBFFD4AE77F731EAB97058D9240371AABAADB5F83389465963E65549CC2515257EA6433E115FE8FFF842EB6889C5C8F1FD4DF00EAC58B278420DC9E14816A93AB8A89C5A2DCA47BE671E92BA7FC2B0FA08A1FB138360B15FEB85D14DEA239FC7E9> |-/R <1C60D8A8C9B6079F1E72629575480DC45EFF6E4AB64B66A7652CD7E16EAC91449245DD3CBA37D2A604CF72E29588675CFDFE01E4A88B3F48C83BCCA7256E85D1ED04A24E78F3B0E49702EE55B1A71A005E9BFB7D60AD519F80EDCD2ADF5C0C427374C26DC43CA4BD3A71528CB3166942BEAEF2FD3B0D1F3387D886927B8EA602B7357C09308F1DBC79BF3317FED3F200041EAB4FF32714D1A7764237CCB5F518A1E2> |-/a <1C60D8A8C9B7A73D33D33BBE9B0166BDE0A830288DCA9DD5D2F84B50BE4A77E8EF93047C2F1EA3876C059DBAF433C4C00EF1CEA5609DAB4FA0A543A1D180430D7781F7AD17E286ADDF30C623336A1A9E3C9377B2AEB4B64817E19DAD816F332F4903EB170DE772D9A468D3BC110E6CF63D7C296A79837181E402E85AB03C5A94FE1FAEFDDF92723C2437289A4858A4FDA105FD46D04F3AD4BE862F2E112B563EA7E4F5589E35> |-/c <1C60D8A8C9B77FE24419C765668C66977042CF452C7EA7480CB02D365B2629D676E34D83576C5FE87369A71FD3EF45D609A8F3161A64202F408618C8F2A9FDE86527018B8EBFF86424141A2A5FB62ECB45623F7DD7F8B87BF53A09> |-/e <1C60D8A8C9B77FE24404D6FC75C46E8B158C79295EE152CB03E49085258317FD17DA4F9DCDDED62E2EF33393A53BE68AD70AA9E7754BF7F7933E04C08A1883917ACDCC3043F8955A81577EF9E191B7BE9B97A11BF00B33DEDA47248590E1E35A778248E20B263A732F3E> |-/f <1C60D8A8C9B81F2C46CB7D4B088C9644D850FF2E7D4B5375CB2DDB29D662159CE8D2204FA5BEA838E2C4357BF2F0BBEB1CDA279E4B2A77473ABC09359627926A5AFF7B1CBA5682061531685006801A366501FC15EB207D747BD8A5753582588CB51B94257EF230F18BCE243B9EB5CC> |-/h <1C60D8A8C9B7EF3257330F56AA26B3B4D60E1AB698B7732F7E2F8B8B1D9C4F3F3EE642EFCB20C7149E9E2E71D8870494E644EDFD6E172339A264D02FDFC21F3C337695EE8AA96D9C16697464A5069D41B73A577437E8C9939A06F63A1587D1B64B52C1DE2C48F17DF27A680159E56BFE9C7E4ADD1A0860265642> |-/l <1C60D8A8C9B854D088BE0307DDE29E2DC8A57E143D568F804B2AC3C597463240A90745CC598F7FD26C5F3BC8D8E33525D3F37BE8702098EB> |-/n <1C60D8A8C9B7EF3257330F56C94494157A7EF7FFCBD73F84D262F8E7D01959AC25EC004852A9D2EE4AC35B0916692F432F5CC4BA24475C1585C14E0905ACF072D8A88A9283F858EDF4B1C6BED04E509F9B3592B943768FA40BBE472F197C351FA9B31E247A2F6126072E89ED92526AAFBE6B29CBD01535D22319B495F8DE9EC03DE5FC3D1D349F08180CDD8EC5F746CB90B201AAB7B408BF78D5D20442C87E190839C6924F5E937788F15A694C0C87> |-/o <1C60D8A8C9B7A73D33B29FF9A975322B3362DC44B144D77C19E1494695DA7F3C9EE16429993BFE81D3F80062EB85C1F3EBBAC1E20BAD4CD6ED18D4A00CBE2E6A68F1C32B265462F7B12A0C041CD785918FFA259E1C60EBA89CDB> |-/r <1C60D8A8C9B77FE2B2290770D44CC430BF6AF796D77E767E49BAE099A5CB5CDA55620A37F7AA1117511559299DDF3A050F57BF6491A966E56A34F6C741A70EE09BFE15A2D7D7438CFC87D784FD216557A9D613386946B2BBE4A53B09BE79EFA946CBDAD078DD7D9C26F4CB43A83C1A27B43843A8AAE1BE7B550DA0623A6CD3B59C4C570377BA1D> |-/s <1C60D8A8C9B7361F88137B0B3B9E3BEAF1BF91A78879D2BBC41FEBED26D438A884A01D28D1D5334337D789346B4143CD6B0CAE0DF06A98DF0C3E2F53FCD6F2F4A7D239D41ACB0E4F68DCDF778BFFE5F6522BA9182312CFF5A8D3404AF4FEF522F9693B5D3CC705176D1A7E507D57B78FD344C01BBC843C6A69B8CDB14ACC5C91875B602F61F79EE15653711FC176E8A940E398473045B0B8755195C47863C65729571988A65A00FC479556F90DF69503C8E9214183AC37765CFB> |-/t <1C60D8A8C9B81F2CB2ACA02E0CECC7A7088ABA14D8BB1C717E776D9EDDA41B759D267E40E8E459C7F73ADF1E69682DC406BFDF457393EAAE2ED0FA699485621F5B6FC1B50555013ED91568AC27343342C761> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBW+Times-Bold /Encoding getdup 46 /period putdup 66 /B putdup 82 /R putdup 97 /a putdup 99 /c putdup 101 /e putdup 102 /f putdup 104 /h putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putpop%ADOEndSubsetFont
/BDEBBW+Times-Bold*1 [46{/.notdef}rp /period /.notdef /zero 7{/.notdef}rp /eight 9{/.notdef}rp /B 15{/.notdef}rp /R 14{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h 3{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]BDEBBW+Times-Bold nfBDEBBW+Times-Bold*1 [8.9664 0 0 -8.9664 0 0 ]msf372.087 312.908 mo(B.Roleoftransferchannels)[5.98065 6.72302 6.47372 4.48322 2.49265 6.22806 4.48322 5.22913 2.98575 3.98108 4.48322 4.98532 3.48798 2.98575 3.98108 6.21912 3.98108 4.98532 4.48318 4.98532 4.98532 3.98108 2.49265 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf315.792 328.352 mo(Incertaincases,transferchannelshavebeensuggestedas)[3.31647 7.992 4.42239 4.42239 3.3165 2.76859 4.42242 2.76859 7.992 4.42239 4.42242 3.87451 4.42239 3.87454 5.49936 2.77158 3.31647 4.42242 4.98029 3.87454 3.31647 4.42239 6.32718 4.42239 4.98032 4.42239 4.98029 4.98032 4.42239 2.76862 6.91211 4.97733 4.22116 4.82391 7.44305 4.98029 4.42242 4.42242 8.00098 3.87451 4.98032 4.98032 4.98029 4.42242 3.87457 2.76855 4.42242 8.00098 4.41943 0 ]xsh303.84 339.809 mo(thereasonfordiscrepanciesbetweenmeasuredandcalculated)[2.76761 4.97931 6.63309 3.32147 4.42142 4.42139 3.87354 4.97931 7.19995 3.31549 4.97931 5.52618 4.97733 2.76761 3.87354 4.42139 3.31549 4.42142 4.97928 4.42142 4.97931 4.42142 2.76758 4.42142 6.11111 4.97931 4.42142 2.76761 7.19098 4.42142 4.42142 7.20892 7.7489 4.42139 4.42142 3.87354 4.97931 3.31546 4.42142 7.20895 4.42139 4.97931 7.19995 4.42139 4.42145 2.76758 4.42145 4.97925 2.76764 4.42139 2.76764 4.42139 0 ]xsh%ADOBeginSubsetFont: RQYAAA+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBV+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6D5A02F568D2AAE95CCE534B6DDEA8B462AFE4EFBE8D19C6B165CD1CD462A8C42351BBD4CD93A5B52F73DB3424773CFFEC450C54D3E25E5D40554EE936BAEEDCB2084A65F1C28BDCA6F2678C8B501B6A7AA62396A043085BB6A2B7D4F8A921531801B7131138443C7A9211F67A8DFF40B588E4ECDE4DF1CAFC4B98D> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBV+MTMI /Encoding getdup 68 /D putpop%ADOEndSubsetFont
/BDEBBV+MTMI*1 [58{/.notdef}rp /period /comma /.notdef /slash 6{/.notdef}rp /D /E 12{/.notdef}rp /R 107{/.notdef}rp /sigma 65{/.notdef}rp]BDEBBV+MTMI nfBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf303.84 351.266 mo(D)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf311.814 352.76 mo(fus)[2.32013 3.4848 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf320.832 351.266 mo(.Awell-studiedexampleisthereactions)[5.35489 10.0533 7.19098 4.42142 2.76761 2.76761 3.31549 3.87354 2.76761 4.97931 4.97931 2.76761 4.42139 7.85751 4.26599 4.97931 4.42139 7.7489 4.97931 2.76764 7.30756 2.77161 6.73181 2.77158 4.97931 7.28964 3.31546 4.42142 4.42139 4.42139 2.76764 2.76758 4.97931 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf488.214 347.648 mo(40)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf495.684 351.266 mo(Ca)[6.64215 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf509.616 351.266 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf520.254 347.648 mo(90)[3.4834 0 ]xshBDEBBV+MTMI*1 [6.9738 0 0 -6.9738 0 0 ]msf527.221 347.648 mo(;)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.525 347.648 mo(96)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf537.003 351.266 mo(Zr,)[6.10101 3.33142 0 ]xsh303.841 362.723 mo(wherecleardifferencesbetween)[7.19101 4.97931 4.42139 3.31549 6.53448 4.4194 2.76761 4.42139 4.42142 5.43552 4.97931 2.76761 3.0694 3.32147 4.42139 3.31549 4.42142 4.97931 4.42142 4.42139 6.00354 4.97931 4.42139 2.76761 7.19101 4.42139 4.42142 0 ]xshBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf433.164 362.723 mo(D)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf441.135 364.217 mo(fus)[2.32013 3.4848 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf452.259 362.723 mo(exist\(structuredfor)[4.26599 4.97733 2.76959 3.87552 4.88666 3.32047 3.87552 2.76959 3.31747 4.98132 4.42337 2.76962 4.98129 3.31747 4.4234 7.08337 3.3175 4.98132 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf532.026 359.105 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf539.496 362.723 mo(Zr)[6.08411 0 ]xsh303.841 374.18 mo(andsmoothforthe)[4.42142 4.97928 6.71381 3.87354 7.7489 4.97931 4.97931 2.76761 6.70483 3.32147 4.97931 5.04001 2.76761 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf378.243 370.562 mo(96)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf385.713 374.18 mo(Zrtarget\),andtherehasbeensomedebate)[6.08508 5.05792 2.76761 4.42142 3.14114 4.97931 4.42139 2.76761 3.31549 4.22113 4.42142 4.97931 6.70483 2.76761 4.97931 4.42142 3.31546 6.14694 4.97931 4.42139 5.60703 4.97931 4.42139 4.42142 6.71378 3.87354 4.97931 7.7489 6.14691 4.97937 4.42139 4.97925 4.42145 2.76758 0 ]xsh303.84 385.637 mo(overwhetherneutron-transferchannelsmightberesponsible)[4.82388 4.82391 4.4194 6.42581 7.19098 4.97931 4.42142 2.76761 4.97931 4.42142 6.41684 4.97931 4.42139 4.97931 2.76761 3.31549 4.97931 4.97928 3.31549 2.76761 3.31546 4.42142 4.97931 3.87354 3.31546 4.42142 6.41684 4.42139 4.97931 4.42139 4.97931 4.97931 4.42139 2.76764 6.98386 7.7489 2.76761 4.97931 4.97931 5.85901 4.97931 7.51477 3.31549 4.42139 3.87354 4.97931 4.97931 4.97931 3.87354 2.76758 4.97931 2.76764 0 ]xsh303.84 397.094 mo(forsmoothingthe)[3.31549 4.97931 5.03104 3.87949 7.74893 4.97931 4.97931 2.76758 4.97934 2.76761 4.97931 6.70483 2.76758 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf374.85 393.476 mo(40)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf382.32 397.094 mo(Ca)[6.64215 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf395.046 397.094 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf404.478 393.476 mo(96)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf411.948 397.094 mo(Zrdistribution[)[6.08707 5.05795 4.98129 2.76959 3.87552 2.76962 3.31747 2.76959 4.77905 4.97733 2.76959 2.76962 4.98129 6.69586 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf473.877 397.094 mo(9)sh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf478.854 397.094 mo(,)sh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf481.346 397.094 mo(16)[4.97733 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf491.3 397.094 mo(,)sh.883635 .769161 0 0 cmyk
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7A73DD6FE362CD24F05334B0EB647AEFE5409105064A3E2149E3F071B4B7682CB4AAE846128CC40E4FE81E9AE8C264167A3B3D819A723> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /.notdef /nine /colon 6{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi /fl 80{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf493.793 397.094 mo(17)[4.97733 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/q <1C60D8A8C9B7A73DB5811938DD329AF571F14FFDE692A057FCB729720A5BED4D1F9C0C23BDB1CB452F40EB6D848BE0932F4C760F5C2503004914FFB4B67682FA186AE228665B2BFEA6ACC885BEC05363FF79301DC87EB9E5C026E33B1707B560B235E300E90D1225B3F5646ADDE05DCB20F259A4A8F9EE35B417CA23FCC315BAD2FB6734C0B8BCA0E27A3A137C64206716203345A864EDB66059A017842F1314A9089CC31918917957F569> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 113 /q putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /.notdef /nine /colon 6{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi /fl 80{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf503.746 397.094 mo(].Although)[3.31647 4.21219 7.19202 2.76862 2.76862 4.98029 4.98029 4.98029 4.98035 0 ]xsh303.839 408.551 mo(thesetransfersaresigni\256cantlystrongerfor)[2.76862 4.98029 4.42239 3.87454 9.62088 2.77161 3.31647 4.42239 4.98032 3.87451 3.3165 4.42239 3.31647 9.06305 4.42242 3.31647 9.62088 3.87949 2.76862 4.98032 4.98029 2.76862 5.53821 4.42239 4.42239 4.98032 2.76859 2.76862 10.1878 3.87451 2.76862 3.31647 4.98029 4.98032 4.98032 4.42239 8.52295 3.3165 4.98029 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf495.477 404.933 mo(40)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf502.947 408.551 mo(Ca)[6.64215 0 ]xsh%ADOBeginSubsetFont: AUBBAA+MTSY AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBX+MTSY dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/openbullet <1C60D8A8C9B7A73DE6C27D577B58CF0E80FC15DDE445150B7A33A2DE3E753853E9F310F6921530C3CE006D5E590F1E3A05E9355AE43E8CBB017F13F405FF7171AC45A9A143F7C8C0C5749270645BEC342D> |-/approxequal <1C60D8A8C9B6C18029A01406FBF7AEC6E24A0A68A1ED345236D73768BCD5474615B574DCA10E982BF9DDB80022B4D93643AC05D58F6E4E970D7B7B45BA0511AEE4E664D07082007F1E08DAE48C48FCE884F4F217E28800A4730ABDBBFB6C6A6CCBDFAA5576E7FA3650911264E0B5CD8D203228A347C4B790C804C19078F8D8D0898CBFA57E80F346CD8C40621300F83788> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBX+MTSY /Encoding getdup 177 /openbullet putdup 188 /approxequal putpop%ADOEndSubsetFont
/BDEBBX+MTSY*1 [67{/.notdef}rp /plus 109{/.notdef}rp /openbullet 10{/.notdef}rp /approxequal 67{/.notdef}rp]BDEBBX+MTSY nfBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf517.887 408.551 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.533 404.933 mo(96)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf537.003 408.551 mo(Zr,)[6.10101 3.33142 0 ]xsh303.841 420.008 mo(theeffectofthe)[2.7666 4.97833 8.56784 4.4194 3.0694 3.32047 4.42041 4.42041 6.92102 4.9783 7.46091 2.76663 4.9783 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf375.48 416.39 mo(96)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf382.95 420.008 mo(Zroctupolephononappearstoplaythe)[6.08408 7.47885 4.97833 4.42041 2.7666 4.9783 4.9783 4.97833 2.7666 8.57681 4.9783 4.97833 4.9783 4.9783 4.97833 9.14368 4.42038 4.9783 4.97833 4.42041 4.42038 3.31448 8.0369 2.77161 9.11679 4.97729 2.7666 4.42041 9.1347 2.77161 4.97833 0 ]xsh303.84 431.465 mo(dominantroleinthissystemowingtothespherical,doubly)[4.98032 4.98029 7.74991 2.76862 4.98029 4.42242 4.98029 6.28244 3.31647 4.98029 2.76862 7.91129 2.76862 8.46921 2.76862 4.98029 2.76862 7.36243 3.87454 4.98032 3.87451 2.76862 4.42239 11.2408 4.72528 7.19101 2.76859 4.98032 8.48712 2.77161 8.46921 2.77158 4.98035 7.91129 3.87454 4.98029 4.98035 4.42239 3.3165 2.76862 4.42239 4.42239 2.76862 5.99451 4.98029 4.98035 4.98029 4.98035 2.76855 0 ]xsh303.84 442.922 mo(magicnatureoftheprojectile.However,foroursystems,any)[7.7489 4.42142 4.97931 2.76761 7.11029 4.97931 4.42142 2.76761 4.97931 3.31546 7.11032 4.97733 6.00339 2.77158 4.97931 7.10135 4.97931 3.31546 4.97931 2.76761 4.42142 4.42139 2.76761 2.76761 2.76761 4.42142 5.18353 7.19098 4.72528 7.19098 4.16739 4.82388 4.42139 2.92496 5.19351 3.32144 4.97931 5.99442 4.97931 4.97931 6.00339 3.8735 4.97931 3.87354 2.76764 4.42139 7.7489 3.87354 5.16559 4.42145 4.82385 0 ]xsh303.84 454.379 mo(differencesinthetarget-phononstructuresareswampedby)[4.97931 2.76761 3.0694 3.32147 4.42139 3.31549 4.42139 4.97931 4.42142 4.42139 7.75797 2.76761 8.83783 2.76761 4.97931 8.28888 2.77161 4.42139 3.14114 4.97928 4.42142 2.76761 3.31549 4.97928 4.97931 4.97931 4.97931 4.97931 8.87369 3.87354 2.76758 3.31549 4.97931 4.42139 2.76764 4.97931 3.31546 4.42142 7.73999 4.42142 3.31546 8.28888 3.87952 7.09241 4.41943 7.7489 4.97925 4.42145 8.85577 4.97925 0 ]xsh303.84 465.836 mo(theprojectiledeformation,andtheonlypossibleexplanation)[2.76862 4.98029 7.39822 4.97733 3.31647 4.98032 2.76862 4.42239 4.42239 2.76862 2.76859 2.76862 7.4072 4.98032 4.42239 3.31647 4.98029 3.3165 7.74991 4.42239 2.76859 2.76862 4.98032 4.98029 5.48141 4.42242 4.98029 7.96509 2.76862 4.98029 7.39825 4.98029 4.98032 2.76859 7.96512 4.98032 4.98029 3.87457 3.87451 2.76862 4.98032 2.76862 7.39822 4.26599 4.98029 4.98035 2.76862 4.42236 4.98035 4.42236 2.76868 2.76855 4.98035 0 ]xsh303.84 477.293 mo(oftheobserved,strongisotopiceffectisdifferencesinthe)[4.98032 7.41608 2.76862 4.98029 8.52301 4.98032 4.98029 3.87454 4.42239 3.31647 4.82391 4.42239 4.98029 6.6062 3.87454 2.76859 3.3165 4.98029 4.98032 9.07193 2.76862 3.87451 4.98032 2.76862 4.98029 4.98029 2.76862 8.51404 4.41943 3.0694 3.32144 4.42239 4.42242 6.87616 2.76862 7.96515 4.98035 2.76859 3.06943 3.32144 4.42239 3.3165 4.42239 4.98035 4.42236 4.42242 7.99207 2.76862 9.07196 2.76862 4.98035 0 ]xsh303.84 488.75 mo(weak,direct-reactionchannels,inprinciple,includingboth)[7.19202 4.42239 4.42239 4.98032 6.69586 4.98029 2.76862 3.31647 4.42242 4.42239 2.76859 3.31647 3.3165 4.42239 4.42239 4.42239 2.76862 2.76862 4.98029 9.17059 4.42236 4.98032 4.42239 4.98032 4.98032 4.42236 2.76862 3.87454 6.69586 2.76859 9.17059 4.98029 3.31647 2.76862 4.98032 4.42239 2.76862 4.98032 2.76862 4.42239 6.68692 2.76859 4.98035 4.42239 2.76862 4.98032 4.98029 2.76862 4.98035 9.1795 4.98035 4.98029 2.76862 0 ]xsh303.84 500.207 mo(transfersandnoncollectiveinelasticexcitations.)[2.76862 3.31647 4.42239 4.98032 3.87451 3.3165 4.42239 3.31647 6.36319 4.42239 4.98032 7.47891 4.98032 4.98029 4.98032 4.42239 4.98029 2.76862 2.76862 4.42239 4.42239 2.76862 2.51953 4.82388 6.94794 2.77158 4.98032 4.42239 2.76862 4.42239 3.87454 2.76859 2.76859 6.91205 4.26599 4.98032 4.42239 2.76862 2.76862 4.42242 2.76862 2.76862 4.98029 4.98032 3.87454 0 ]xsh315.792 511.664 mo(Accordingtotheir)[7.19202 4.42239 4.42239 4.98029 3.3165 4.98029 2.76862 4.98032 8.87369 2.76859 8.8468 2.76862 4.98029 4.42239 2.76862 0 ]xsh%ADOBeginSubsetFont: RQYAAA+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBV+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Q <1C60D8A8C9B68526F8CE277F69C50E315DA1AFB3CF74BC68725E3B28111EC7AE2F9552D742AB23417643D7C5209367BF315A5A3AF9616C0FE4A96399BF366140F216A75510B2434D6E2653267FFCA6351459F03E510730AF26850AAEDCB22BE84C5C771171AD29C92D6F1B7FA784E00D0DFC4E842C442761B11AD223588912A8B87CBDFE73B2117A5D22439AA3FFA67918C0261FA708CB53C8011D11B3360C7A4A205B4D7EF25032EE33E0AC756F3EAF0F3963A0A62981D35DAE7B27559A83305B7457E269F46B899A68F4F9FDD1F55D639601DB687C769322424F7C262DCF8A> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBV+MTMI /Encoding getdup 81 /Q putpop%ADOEndSubsetFont
/BDEBBV+MTMI*1 [58{/.notdef}rp /period /comma /.notdef /slash 6{/.notdef}rp /D /E 11{/.notdef}rp /Q /R 107{/.notdef}rp /sigma 65{/.notdef}rp]BDEBBV+MTMI nfBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf395.479 511.664 mo(Q)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf407.8 511.664 mo(values,thetransferprobabilityfor)[4.72525 4.41943 2.76859 4.98032 4.42239 3.87454 6.37207 2.77161 4.98029 8.29785 2.76862 3.31647 4.42239 4.98032 3.87451 3.3165 4.42239 7.19092 4.97733 3.31647 4.98032 4.98029 4.42242 4.98029 2.76862 2.76862 2.76862 2.76855 8.86475 3.31647 4.98029 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf303.84 519.503 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.31 523.121 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf326.799 523.121 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf338.445 519.503 mo(92)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf345.924 523.121 mo(Zrshouldbemuchlargerthanthatfor)[6.08508 5.1745 3.87354 4.97931 4.97931 4.97931 2.76761 6.82239 4.97729 6.27347 7.7489 4.97931 4.42142 6.82239 2.76761 4.42139 3.14114 4.97931 4.42139 5.16556 2.76758 4.97931 4.42142 6.82239 2.76761 4.97931 4.42139 4.61667 3.31546 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf494.928 519.503 mo(20)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf502.398 523.121 mo(Ne)[7.19101 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf517.887 523.121 mo(C)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.533 519.503 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf537.003 523.121 mo(Zr.)[6.10101 3.33142 0 ]xsh303.841 534.578 mo(Tocheckthis,aseparateexperimentwasperformed,inwhich)[5.28308 7.38031 4.42139 4.97931 4.42142 4.42139 7.38031 2.76761 4.97931 2.76761 3.87354 4.87769 6.80447 3.87354 4.42139 4.97931 4.42142 3.31546 4.42142 2.76761 6.82239 4.26599 4.97931 4.97928 4.42142 3.31546 2.76761 7.7489 4.42142 4.97928 5.18457 7.09235 4.41943 6.26456 4.97931 4.42142 3.31546 3.31546 4.97931 3.31549 7.7489 4.42139 4.97931 4.88666 2.76764 7.37134 7.19098 4.97931 2.76758 4.42139 0 ]xsh303.841 546.035 mo(transfercrosssectionsweredirectlymeasuredforbothsystems)[2.76862 3.31647 4.42239 4.98032 3.87451 3.3165 4.42239 4.97723 4.4194 3.3165 4.98029 3.87454 5.53531 3.87451 4.42239 4.42239 2.76862 2.76862 4.98029 4.98032 5.53531 7.19199 4.42239 3.31647 6.0752 4.98032 2.76859 3.3165 4.42239 4.42239 2.76859 2.76862 6.63312 7.74988 4.42242 4.42239 3.87454 4.98029 3.3165 4.42239 6.63312 3.31647 4.98032 4.97723 4.98032 4.98032 2.76859 6.63312 3.87952 4.98035 3.87451 2.76862 4.42242 7.74988 0 ]xsh303.841 557.492 mo(ataCManglearound156)[4.42041 5.98553 7.63235 6.64212 12.0688 4.42041 4.9783 4.9783 2.76663 7.65027 4.4194 3.31448 4.9783 4.97833 4.9783 8.20819 4.9783 4.9783 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf411.192 553.874 mo(\261)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf418.401 557.492 mo(andattheenergycorresponding)[4.42041 4.9783 8.19922 4.42041 5.98453 2.76663 4.9783 7.63235 4.42041 4.9783 4.42041 3.14114 4.9783 8.20819 4.42041 4.9783 3.31448 3.31448 4.42038 3.87256 4.97827 4.97833 4.97833 4.97827 2.7666 4.97833 0 ]xsh303.84 568.949 mo(tothesecondaryhumpseenforthe)[2.76761 9.43158 2.76761 4.97931 8.88266 3.87952 4.42142 4.42139 4.97931 4.97931 4.97931 4.42142 3.31549 9.4505 4.97931 4.97931 7.74893 9.4505 3.87952 4.42139 4.42142 9.44055 3.31549 4.97928 7.76678 2.77161 4.97931 0 ]xshBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf459.522 565.331 mo(90)[3.4834 0 ]xshBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf466.992 568.949 mo(Zrtarget\(at)[6.08508 7.79367 2.76761 4.42139 3.14114 4.97931 4.42142 7.23584 3.31546 4.42142 0 ]xshBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf522.802 568.949 mo(E)shBDEBBU+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.974 570.443 mo(eff)[3.09637 2.15137 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf541.152 568.949 mo(\274)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf303.841 580.406 mo(50MeV\).)[4.97931 7.47891 8.85483 4.42142 7.19101 3.31549 0 ]xsh315.793 591.863 mo(Thetime-of-\257ight\(TOF\)techniquewasusedtoidentifythe)[6.08609 4.98029 6.35416 2.76862 2.76859 7.74991 4.42239 3.3165 4.98029 3.3165 3.31647 5.53821 2.76859 4.98032 4.98029 4.69836 3.31647 5.90378 7.19199 5.53821 5.24722 2.77161 4.42239 4.42242 4.98029 4.98029 2.76862 4.98029 4.98032 6.36313 7.09235 4.41943 5.79633 4.97729 3.87454 4.42239 6.91205 2.77161 6.8941 2.77161 4.98032 4.42239 4.98035 2.76862 2.76862 3.31647 6.91205 2.77161 4.98029 0 ]xsh303.841 603.32 mo(massesofbackscatteredions.Theschemeoftheexperimental)[7.7489 4.42142 3.87354 3.87354 4.42139 6.07529 4.97729 5.50827 4.97931 4.42139 4.42142 4.97931 3.87354 4.42142 4.42139 2.76761 2.76764 4.42139 3.31549 4.42139 7.19995 2.77161 4.97931 4.97931 3.87354 4.68042 6.08408 4.97931 6.62411 3.87354 4.42142 4.97931 4.42142 7.7489 6.63309 4.97733 5.50824 2.77161 4.97931 6.61514 4.26596 4.97931 4.97931 4.42145 3.31543 2.76764 7.7489 4.42139 4.97931 2.76758 4.42139 0 ]xsh303.841 614.777 mo(setupispresentedinFig.)[3.87454 4.42239 2.76862 4.98029 9.56708 2.77161 8.45135 4.97729 3.3165 4.42239 3.87451 4.42242 4.98029 2.76862 4.42239 9.57605 2.76859 9.55814 5.53821 2.76859 4.98032 0 ]xsh.883635 .769161 0 0 cmyk
BDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf416.124 614.777 mo(3)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DQVAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBDEBBU+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/quotedblleft <1C60D8A8C9B77FE2C1E7B0700C7157D917BB0DC86B49A69767511C1C6E336A2F7FBC261BFB33C91E47E2A90EB6D8731402C0860D21FE9DFE5F85DDC388E7F0EACDBC65CE05C85F6E46493A3EDFA326150B0EBF472E9386AB07451682484A2C15C0C59C5F16DB867A749B6FE5A956F998FE732DE5783FB55B566B3BA327D86277B62D06B7F9E0878F065A78F2C8> |-/quotedblright <1C60D8A8C9B77FE2C1E7B0700C6EC2218A2A4DB75E2ECEF61C7E7FC8F80ED7CFC1EAF9327AB491AD4012F05E70D9F10D9758CDF7B2EBF482D2653BBF0F27CBBACAFB2891C4095B3C8CC790ACF4588817D8D30B13AE4F4CDCEA3D13878B977F9BBF32F0BE902BF38D0E0EA0C7457E93AF4E40D033D1D4E1EA730F8C70D0CACF43689925B2DB9C61E0DAAC2E1C> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBU+Times-Roman /Encoding getdup 170 /quotedblleft putdup 186 /quotedblright putpop%ADOEndSubsetFont
/BDEBBU+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /.notdef /nine /colon 6{/.notdef}rp /A /B /C /D /E /F /G /H /I /.notdef /K /L /M /N /O /P /Q /R /S /T /U /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 48{/.notdef}rp /quotedblleft 3{/.notdef}rp /fi /fl 10{/.notdef}rp /quotedblright 69{/.notdef}rp]BDEBBU+Times-Roman nfBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf421.102 614.777 mo(.The\252start\272signalwasgiven)[7.07443 6.08411 4.97928 9.00919 4.42142 3.87354 2.76761 4.42142 3.31546 2.76761 9.00021 3.87952 2.76761 4.97931 4.97931 4.42142 7.36237 7.09238 4.41943 8.46027 4.97736 2.51953 4.82391 4.42139 0 ]xsh303.841 626.234 mo(bythemicrochannel-plate\(MCP\)detector.The\252stop\272signal)[4.97931 7.78476 2.76761 4.97931 7.21793 7.7489 2.76761 4.42142 3.31546 4.97931 4.42142 4.97931 4.42142 4.97931 4.97931 4.42139 2.76761 3.31549 4.97931 2.76761 4.42139 2.76761 7.25375 3.31549 8.85483 6.64313 5.5372 6.11996 4.97931 4.42142 2.76758 4.42139 4.42142 2.76761 4.97931 2.77155 5.30109 6.08411 4.97931 7.22687 4.42139 3.87354 2.76761 4.97928 4.97931 7.22687 3.87354 2.76764 4.97931 4.97931 4.42139 0 ]xsh303.841 637.691 mo(wastriggeredbyanarrayoffour20)[7.09238 4.4194 6.39905 2.77161 3.31549 2.76761 4.97931 4.97928 4.42142 3.31549 4.42142 7.5058 4.97931 7.50583 4.42142 7.5058 4.42142 3.31546 3.31549 4.42139 7.49689 4.97729 5.841 3.32047 4.97931 4.97928 5.84998 4.97931 0 ]xsh%ADOBeginSubsetFont: AUBBAA+MTSY AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginBDEBBX+MTSY dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/multiply <1C60D8A8C9B6C5CA4D260261CF3BD26850DFB7BA7C4CDBAF2A13B54C2EBBE8AA869AC5C0E1CF408D4682228F7C996105981EF8959BE51F7A6294AB90C9C6002BE0C96A00339DE3EADFBDBDA7F6CAD2> |-/similar <1C60D8A8C9B6C18031F5CE1795D305BE2DD7187615B48F18E91A9FF2B0D5E6C1FE2D68221B678BE1CA86833E946256D5281D97B7EB11ED6A1EC9192A36EEB369960500AAB624D198966183DB620D4F4A> |-systemdict /gcheck known {setglobal} if end {end} ifendBDEBBX+MTSY /Encoding getdup 163 /multiply putdup 187 /similar putpop%ADOEndSubsetFont
/BDEBBX+MTSY*1 [67{/.notdef}rp /plus 95{/.notdef}rp /multiply 13{/.notdef}rp /openbullet 9{/.notdef}rp /similar /approxequal 67{/.notdef}rp]BDEBBX+MTSY nfBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf449.741 637.691 mo(\243)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf459.759 637.691 mo(20mmsemiconductor)[4.97931 7.50583 7.7489 10.2784 3.87354 4.42139 7.74893 2.76761 4.42139 4.97931 4.97931 4.97931 4.97931 4.42145 2.76758 4.97931 0 ]xsh303.842 649.148 mo(detectors,placedataCManglearound156)[4.97931 4.42139 2.76764 4.42139 4.42142 2.76761 4.97931 3.31546 3.87354 5.36386 4.97931 2.76761 4.42142 4.42142 4.42139 7.85751 4.42142 5.63385 7.28067 6.64212 11.7181 4.42139 4.97931 4.97931 2.76761 7.29861 4.41937 3.31549 4.97931 4.97931 4.97931 7.85748 4.97931 4.97931 0 ]xshBDEBBX+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf479.619 645.53 mo(\261)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf483.615 649.148 mo(.The\257ightbase)[5.34592 6.08411 4.9783 7.29861 5.53622 2.7666 4.97827 4.97833 5.63385 4.97833 4.42041 3.8725 0 ]xsh303.841 660.605 mo(of750mmandtimeresolutionof)[4.97931 7.93811 4.97931 4.97931 9.61194 7.7489 12.3656 4.42142 4.97931 9.61191 2.76761 2.76761 7.74893 9.03607 3.32047 4.42139 3.87354 4.97931 2.76761 4.97931 2.76761 2.76761 4.97931 9.60294 4.97733 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf455.159 660.605 mo(\273)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf462.935 660.605 mo(250psresultedina)[4.97931 4.97931 9.60294 4.97931 8.50516 3.31549 4.42139 3.87354 4.97931 2.76764 2.76758 4.42139 9.59399 2.77258 9.60297 0 ]xsh303.841 672.062 mo(goodmassresolutionof)[4.98032 4.98029 4.98032 7.02859 7.74991 4.42242 3.87451 5.9129 3.31647 4.42239 3.87451 4.98032 2.76862 4.98029 2.76862 2.76859 4.98032 7.01068 4.97729 0 ]xshBDEBBX+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf399.971 672.062 mo(\273)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf407.747 672.062 mo(0)shBDEBBV+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf412.724 672.062 mo(:)shBDEBBU+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf415.46 672.062 mo(14amu\(FWHM\).Threeancillary)[4.98032 7.01962 4.42242 7.74991 7.01962 3.32047 5.53821 9.40369 7.19202 8.85583 3.31647 4.52701 6.08606 4.98032 3.31647 4.42239 6.46176 4.42242 4.98029 4.42236 2.76862 2.76862 2.76862 4.42236 3.31653 0 ]xshBDEBBU+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf277.686 695.975 mo(054613-3)[4.48318 4.48322 4.48322 4.48318 4.48318 4.48322 2.98575 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/BDEBBX+MTSY*1 uf/BDEBBX+MTSY uf/AUBBAA+MTSY uf/BDEBBY+Times-Italic*1 uf/BDEBBY+Times-Italic uf/TMRAAA+Times-Italic uf/BDEBBU+Times-Roman*1 uf/BDEBBU+Times-Roman uf/DQVAAA+Times-Roman uf/BDEBBV+MTMI*1 uf/BDEBBV+MTMI uf/RQYAAA+MTMI uf/BDEBBW+Times-Bold*1 uf/BDEBBW+Times-Bold uf/CBPQMX+Times-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
