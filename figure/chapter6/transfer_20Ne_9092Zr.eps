%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: transfer_20Ne_9092Zr.pdf
%%Creator: Adobe Acrobat 9.5.2
%%For: yusa
%%CreationDate: 12/10/30, 14:13
%%BoundingBox: 0 0 250 206
%%HiResBoundingBox: 0 0 249.3426 205.2290
%%CropBox: 0 0 249.3426 205.2290
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 843 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:56:37        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2012-10-30T14:11:02+09:00"
   xmp:CreateDate="2012-10-30T14:10:52+09:00"
   xmp:MetadataDate="2012-10-30T14:11:02+09:00"
   xmp:CreatorTool="LaTeX with hyperref package"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:e862d848-f1aa-a042-9ea3-7a956024398d"
   xmpMM:InstanceID="uuid:0c62ebb0-d5d8-f241-87fe-4c573806d8b5"
   pdf:Producer="Acrobat Distiller 6.0.1 (Windows)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -205.229 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 205.229 li
249.343 205.229 li
249.343 0 li
cp
clp
[1 0 0 1 -36.8504 0 ]ct
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /LWYAAA+Times-Roman def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Roman) def/ItalicAngle 0 def/BaseFontName (Times-Roman) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 57 /nine putdup 65 /A putdup 67 /C putdup 69 /E putdup 72 /H putdup 73 /I putdup 75 /K putdup 76 /L putdup 80 /P putdup 82 /R putdup 83 /S putdup 86 /V putdup 87 /W putdup 89 /Y putdef/FontBBox {-168 -218 1000 898} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-14 -0 662 676 450 460 683 683] def/OtherBlues [262 270 -218 -217] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/StdHW [28] def/StdVW [84] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings26 dict dup begin/parenleft <1C60D8A8C9B81F2C34DD536D1360D89197E7FA43CD15762B1F48F10FBDCF9BC2C750CDE4A2E91649CF8859E337C2E166D3734F3568F45FDC414D6EEB6B611B8690C7C03C> |-/parenright <1C60D8A8C9B81F2C34DD536D5F91D4C3DAE454AEB0D09D2D77AB7A4947777BB664E613196BC679C0FA303967174C88DFCCFA0D154A8957EC684FC25A36D2507079F0D08A> |-/comma <1C60D8A8C9B8707CB516A860815AB2EC26918885F713E4ED7939803E0A8E0EE12DBD595F7B4FC46C96E99C7C244F8EE37F7C691D6FF966A57DBB357A175F54A977790792A86A701245F8E3A81974A3254E3CFE0117AA8FEF> |-/period <1C60D8A8C9B8707CABA78EB744DAD228E94EA6790A3CF5471A14CA1EC74457D34EB30A52B7D5CE690F230DA3> |-/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A7463788209DFA6F2469A76A662ABDEC36022D07150EBCCB00EAFC3634E253FB48B765FB94D71E293B85E25BD0A9620E2BFB3082EA4BB23F9236A4694D2C3E9FC45E251B722> |-/one <1C60D8A8C9B7A73DC549024B406C76DEED7B46C1EF6EB5651B1F268C3787648C40DBF41CCAF519D06A13A3171180A36B4BF986E9264F6C74AFB62268E95BF4B0184D270E> |-/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B7460BBC2BE41737489572FD61CF5BD3DA796B955EB550353EDF2F8C07B4F5384131697035B0D3184C9331276BD170AD13B7E6187EA056B38F406A362F0A077FD8459EE186F67C0C> |-/three <1C60D8A8C9B7A73D33B7A780A4FB6D47887A89CCD14262CC5EAF9A44E4667C02E08E12C9FAA81B3FDF7544E6E75E5296452BF3839C72DB687B09DBAE283E004770052C2C40F3BE9D14CD88A743EF8BCC90D61B07BC93A5F254687A358EFD7C6A34DA02B99630F8F91E5B5B18682C41B5E27DFA84375DC950157D776BEF8B8244DE2CBD755506> |-/four <1C60D8A8C9B7A73DB91ED1D58B1534FC3DC9CE70FBEFFE64A020E69D305561F2E3159DBBBFB3075C8C37AD523FA4E6CA1C673946692CFDA34CFE2A635874507E6C9AACEA9BFCA866A31780314DE8CB239F7F84052FFAEAB4A857AB9E0A7D17979C9340343DBC60020EAB> |-/five <1C60D8A8C9B7A73D33A88FEA12959A734F76D056A6AD18616787F24D4694B06D2D404FC3FCA38087EA8162B81AF2DD5F722A8A8620829370F42A0D36AD232CF1AF8C5768FCC5070E4C1D383794DEEE463936008AA8B79C75171B0B56AEE44FCABBD4B348C68E82A7216D83E5CCC6E39493B5E64C831AA2> |-/six <1C60D8A8C9B7A73D33BF1B90A184398C344468AF20F393E1CDAE1A1BDF4B1EF29581C243D118AD9C2F9F3B85C649B4F94D8775B8245D414436A38469371891286E3E4F3F2C58114BE7041C63E1137F930DD38393462B124AC8D60E4109AAD485EEDD44016B3DCF2F116B050BDED76293F395802A2102> |-/nine <1C60D8A8C9B7A73DD0C741EDEE83FA306ACFF34B0F4BCBA36C21A7408C6F9BEB4A442B2F13237BF635FDFAB907B29059292DDAFF5DABCEDC6EC41C5F3C648AFBF12E0ECD4E60C870F065877946C9D47E8B9420F50B2720233BC04950F88E0C085E4CFFDC37232A1913DAF7D116A465520E3E0185527DFA5DEE32> |-/A <1C60D8A8C9B6079F1E48848039BAD53EF75083A15B245763DB78818AFF61A16A1320ECEE497C9F16C5A9970A7745608AF8FED49797B2C617F48878314ECB9388DC87C41E0CC6BE34027C1122095499F934B9D2E8FCDB060A9CB7A271807727C28B32415ED07DCC7001E6D3C85F5AEC7FFEE39DAFE67E7733CC865438> |-/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1BEC23C2AC3C7BB24FE587EAFC58752906FDF803B7EE08CC0EEA6D4DF528ED9A25AEB8763A1E0F3351E8367C0E0AF3723CBF0E47B6C61A46C0C9B9B14422A38EEC6A11432287BB1AAA047F2C2F93CA4A999D93CAB432079751D1C3EA> |-/E <1C60D8A8C9B7D8BE6A6EDEC7A42842EA4F0E34B06A7ADB9E9D606CC12DFCC58C499944486BC2E1461DA5CCC60C99E2409FC8400D8E867A3E518B76BC24BDD4E0EEB0CD902F7EAB97FABA7DA3C9FC37B399B0166CF4B1D4B61FEFF822440F5F4D8B0E5BB37984F9B56DB6714933760DC4DB6872720E4125AE0EB0FEDE661DAED0217CC0DEFD21A5F9B1C2564FF8D194AAF30E05D310042230EE67F24841F08AF905799BB463507C4C6D8F5CDA5A47F765531646F2A5624F53C5FE261955B6C1E2A87993AA> |-/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090B6EA72F2CAD492799B13A490C22BB769448B5BE5145154E5257C346442332292571F1722B637B36F195964360C86F3C2FA20D5968E5EF117A87C5275E3CF4EDCBA851C9A2685EF777C52F37A9D6571C1FF8201E097F935E15B632A692C95A8A199E69FDF3449B5C7E7D9F966187E> |-/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7CEBA53BA35C0D63778365713E4937D45432C22967EB42DF6DA1495947FD682A87B83F3472A9AC53AFF202CED526C6E0626B1> |-/K <1C60D8A8C9B6079F1E48848E88AD51D875E18A757A1A6325AC362734879AAFAD42E2CFBAD5446AE147FD12A5E9A047AD123CE532F2C71974BDDAFED116F386DFBBD27BFD1FE6B32F3F98B336226EB8E9B9110925821FFD7841F8A8D3AB3912F803B84F359CF4C96FC59565AEDDE400BC329821CB75B63B2CAC9CAFFCE37E85F33708E8758BC2D160D6830730BB048B8C3A9E76619F> |-/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAF0D74F28161F1E96F93676A52EBF6FCEE0F833224946C62AB4825949DCD38F43112D2F78458FF85000573083054640F9BEF9D64C20B231AD48404F645607CB5F4CDB2A6BFD9D45ADC27D5BF358972E357CAF472CF1479518> |-/P <1C60D8A8C9B7EF32570E39CC82D8FC3971C64FFF40AB84806AE53A80D00359C85B6AFD0D4E4516E6F925E114CB5694CA3C3BB5BD1D3AACEA6F4D4E17877AA50A9AB3B90A72FF729470C063D06BEEAA5184A0D925F90DCE26119419701EB253AFCA84A1D0339652DC6259CB60A6C47C07B17E94492CCC7FA176E9C4175D61D356F93D23B513D5121081D0F8AD8E04BD4C29CCCFFE386A44> |-/R <1C60D8A8C9B64EDF88216CF039522D2CD16031C14F48AE18706656314B55A44D32F713967A5EF8844C033ACCF3957E344151100D1C83334794F24CBE3A1B9AF4A82F4D6C7CD452B51143B0C6F97C0FA861F03E4C420C96B9F0EC4B2245F8CD654119EBE887016A0D90A29861BC0C36838B5464E1DB93F15F4476DA9E07D597F3D2EA5732F6E8BF74573804D1C1542747A58851CA05BA5FA2416A905DAF1E03CC5FD0906576F6C98C075D633B8EC1BE9755F5EC40> |-/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87D04984A8> |-/V <1C60D8A8C9B6079F00D3839AD3AAE47C24C61BEF9550E6B3F54F328A2E722C97D7D2FBC5772073A5D2242D57568F9713676A9A112080E9C58F570910912489ED383248F2A72FF33DDFA4B7BB50F9DB818B39D67B1C90816C650F497C9BFE308B3A0ADE01210A> |-/W <1C60D8A8C9B5D6EF203CFD756D7886C6923F14CB2B145795133A4097CE2D5E96D3BF6D30AF147BE0DC50CEF0E4C43E37601F7D5B36C9EA62EB623CBDD7621F7CDC9591AD048D1D8A14C445CA02086468A3F68BFB4F34B84F197939306BCA26FB45C767C3471D697F21D9DB9B96CBD00D5CB38D9F6CA97F559147F568DB764BF9F72A1F66FAB764FDDF200F256A908BEC101F14CE4C8841DBE1467BFC364A4F282E1F5B95C9> |-/Y <1C60D8A8C9B6079F1E48848E88AD51D8AA3C768145CDCFEDAB6B83C487A69F31930A579C115CC8C7B6544BBBD866CC3DFFD379BB9B60E13ECCDC0F741A908D74DDE0F7C507AF7F488799737D8C65256B95AF5C7D5B4FFD0CAB79A3BC373F5C626243062B54DB0912782D7331A8EA0D3C3A5D6A6ADF4E004A15874BC55709> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSD+Times-Roman /LWYAAA+Times-Roman findfont ct_VMDictPut/YOSQSD+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 7{/.notdef}rp /A /.notdef /C /.notdef /E 2{/.notdef}rp /H /I /.notdef /K /L 3{/.notdef}rp /P /.notdef /R /S 2{/.notdef}rp /V /W /.notdef /Y 166{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf40.536 -436.478 mo(E.PIASECKI)[5.4793 4.48231 4.98621 2.98664 6.47463 4.98621 5.47931 5.98155 6.47464 0 ]xsh%ADOBeginSubsetFont: JIWAAA+Times-Italic Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /JIWAAA+Times-Italic def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle -15.5 def/BaseFontName (Times-Italic) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 97 /a putdup 101 /e putdup 108 /l putdup 116 /t putdef/FontBBox {-169 -217 1010 883} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-18 -0 653 670 428 441 676 683] def/OtherBlues [268 271 -209 -205] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/StdVW [76] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/period <1C60D8A8C9B8707CABA78EB7338F15839B8693E263993EC34B103225ACD1CC48F3FEA2891250C153EFE9BB> |-/a <1C60D8A8C9B7A73DCF5D2D361A1FE7BACB90F7ECBC39897143FAA968C42DE5542D7C1E50C896C16D636C2B0931374312D5A913BF97E0FFE54FA376BD3BF89D431B814050D3DCDC2B170275D5928C2C94909A4E7BC365B3672186E2EEAF1ACDF76A3BB344F81AE8D8112A17EA6A2BB97B55B797F2DB5F281D8B7D8F2CA3F90848C1E13D8168838A5B84BC9DBCDFE6796394455983F2CD7583645744549ACA6277D21E676C268D4BAF0D407670137FC6C8D46ADF38BC2A10298A9E9ACB7238FD126ED0E9A8AD213C70926AAD623160> |-/e <1C60D8A8C9B77FE2B997F32F2DB91A4F584393A1EA30FBC29D24ABE1FB5A639719D47006341803310EC93719C9A6BB29A72A60CDB34F352CE28CA4429D27F6E313A68FCEF9BDAFD626592A1A3BEC3764DC5E56A83ECF98D274A3DC99A14784C4D20D2B8E00BADF9632E634A97340D3> |-/l <1C60D8A8C9B854D083A339E80FC114EBCB07831E57AC3514F2B61918C12AE930AECB34DAD158102A4D147ED3C2DD63EDAE3162F8663059064144C3CD5120FF4FE660B3B147181B6070110F4B12934A834EB771C84CD3E89E8869DD320FB867D94183FC2D1D7C0514C682BE71D9FE3FD3887B89E760> |-/t <1C60D8A8C9B854D083A90EFBC938A96A3D406E5A2CAF9702D718BA3D15544D72C81A56130620521C73D2F3B4E1FD111F0DFA9EF2C0EC96770011D0584F9EBB0BA062CFD08BB13215B6521B5D8BF7E43412C7CBEB31C2196018424A90AC47A0D67EEF7911A4CEE72FAAF94D9712C09FBB888DEC43DE06DA> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSE+Times-Italic /JIWAAA+Times-Italic findfont ct_VMDictPut/YOSQSE+Times-Italic*1 [46{/.notdef}rp /period 50{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l 7{/.notdef}rp /t 139{/.notdef}rp]YOSQSE+Times-Italic nfYOSQSE+Times-Italic*1 [8.9664 0 0 -8.9664 0 0 ]msf93.089 -436.478 mo(etal.)[3.97929 4.74323 4.4814 2.49087 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf390.738 -436.478 mo(PHYSICALREVIEWC)[4.98621 6.47464 6.47464 4.98621 2.98666 5.98154 6.47464 7.7218 5.98154 5.47931 6.47464 2.98666 5.47928 10.6924 0 ]xsh%ADOBeginSubsetFont: DLGQMX+Times-Bold Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /DLGQMX+Times-Bold def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Bold) def/ItalicAngle 0 def/BaseFontName (Times-Bold) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 56 /eight putdef/FontBBox {-168 -218 1000 935} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 676 691 461 473] def/OtherBlues [268 275 -206 -203] def/FamilyBlues [-14 -0 450 460 662 676] def/FamilyOtherBlues [-218 -217 262 270 394 394] def/BlueScale 0.0437916 def/StdVW [139] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/zero <1C60D8A8C9B7A73D300A56E04A82C9489CB10A8D5D8A1CE23AD355BCA1220794CD88E5D3319BCC1499097FDE125CAEBD81AFB7940E79A48AA8531CD25C3B7643897E934807122282BF4CFA3143D12F21270BAB87E8242C1D5865D04BF8356131B8B9526BE9306B> |-/eight <1C60D8A8C9B7A73D30061FAFE781A121F40E2C045ED20653EE77041581D97B3EB5A239D9DAF1FE5C1856FDBA60DAB647248B7519B8699E7B27CEA41A98F5375229EAAC330FA99E3D311DD7C841AB9E4CE13F980801AE8CF52935ED235B808125CA8E8D34B47F0183DA7878E7727504C3CF9767A3C870D7BE81E23692DA13EFF6C0923F456039982AAD716FE10C70E213B750D053170FE264D824965C6A4C5141D9F103852EAA0D8ADD9E454D7831D7B4A66F7246CF2901679178202C075F2E846D6625821B912343620363674C964059D4A024AFB75096766296> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSF+Times-Bold /DLGQMX+Times-Bold findfont ct_VMDictPut/YOSQSF+Times-Bold*1 [48{/.notdef}rp /zero 7{/.notdef}rp /eight 199{/.notdef}rp]YOSQSF+Times-Bold nfYOSQSF+Times-Bold*1 [8.9664 0 0 -8.9664 0 0 ]msf482.146 -436.478 mo(80)[4.4823 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf491.11 -436.478 mo(,054613\(2009\))[4.4823 4.4823 4.4823 4.4823 4.48233 4.4823 6.73199 2.9848 4.4823 4.4823 4.4823 4.4823 0 ]xsh%ADOBeginSubsetFont: UPEAAA+Helvetica Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /UPEAAA+Helvetica def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (Helvetica) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 50 /two putdup 78 /N putdup 101 /e putdef/FontBBox {-166 -225 1000 931} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 718 737 523 538 688 703] def/OtherBlues [270 281 405 409 -220 -207] def/BlueScale 0.0437916 def/StdHW [76] def/StdVW [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A77988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C312D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1E4FEB02B613916D7> |-/N <1C60D8A8C9B6079F1E210C2F9CEEC55EA27709010CA5156BDE4F7169DCD83D1487618C13D4BC4EBB77DC3BF6CD15F7D9F6F5FB65B0AD46AE56999C41B6BE7783> |-/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C2021D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495ACA0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCDBE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553A431EECECF30F5581F5F0240E470E520EB9771> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSG+Helvetica /UPEAAA+Helvetica findfont ct_VMDictPut/YOSQSG+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two 27{/.notdef}rp /N 22{/.notdef}rp /e 154{/.notdef}rp]YOSQSG+Helvetica nfYOSQSG+Helvetica*1 [6.8754 0 0 -6.8754 0 0 ]msf82.5591 -335.427 mo(20)[3.82272 0 ]xshYOSQSG+Helvetica*1 [9.1669 0 0 -9.1669 0 0 ]msf91.2197 -330.375 mo(Ne)[6.6185 0 ]xsh94.507 -345.847 mo
94.507 -344.864 93.709 -344.065 92.726 -344.065 cv
91.744 -344.065 90.947 -344.864 90.947 -345.847 cv
90.947 -346.83 91.744 -347.627 92.726 -347.627 cv
93.709 -347.627 94.507 -346.83 94.507 -345.847 cv
.694423 .677272 .637385 .738643 cmyk
ef
.722 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
94.507 -345.847 mo
94.507 -344.864 93.709 -344.065 92.726 -344.065 cv
91.744 -344.065 90.947 -344.864 90.947 -345.847 cv
90.947 -346.83 91.744 -347.627 92.726 -347.627 cv
93.709 -347.627 94.507 -346.83 94.507 -345.847 cv
cp
77.41 -346.014 mo
250.642 -346.014 li
@
246.166 -345.293 mo
250.498 -346.014 li
246.166 -346.736 li
246.166 -345.293 li
ef
246.166 -345.293 mo
250.498 -346.014 li
246.166 -346.736 li
246.166 -345.293 li
cp
@
206.324 -338.748 mo
207.719 -338.748 li
207.719 -353.04 li
206.324 -353.04 li
cp
.424811 .337072 .324437 .00665293 cmyk
f
.361 lw
206.324 -353.04 mo
207.719 -353.04 li
207.719 -338.748 li
206.324 -338.748 li
cp
.694423 .677272 .637385 .738643 cmyk
@
205.168 -348.179 mo
79.575 -408.811 li
.424811 .337072 .324437 .00665293 cmyk
ef
[4.3308 4.3308 ] 0 dsh
205.168 -348.179 mo
79.575 -408.811 li
.694423 .677272 .637385 .738643 cmyk
@
207.527 -346.303 mo
110.372 -302.657 li
.424811 .337072 .324437 .00665293 cmyk
ef
[2.8872 2.8872 ] 0 dsh
207.527 -346.303 mo
110.372 -302.657 li
.694423 .677272 .637385 .738643 cmyk
@
123.893 -315.458 mo
129.572 -305.352 li
.424811 .337072 .324437 .00665293 cmyk
ef
2.165 lw
[] 0 dsh
123.893 -315.458 mo
129.572 -305.352 li
.694423 .677272 .637385 .738643 cmyk
@
128.08 -317.624 mo
133.566 -307.325 li
.424811 .337072 .324437 .00665293 cmyk
ef
.722 lw
128.08 -317.624 mo
133.566 -307.325 li
.694423 .677272 .637385 .738643 cmyk
@
207.238 -346.833 mo
258.582 -370.941 li
.424811 .337072 .324437 .00665293 cmyk
ef
gsave
258.659 -417.634 mo
66.582 -417.634 li
66.582 -291.452 li
258.659 -291.452 li
cp
clp
.361 lw
[2.8872 2.8872 ] 0 dsh
207.238 -346.833 mo
258.582 -370.941 li
.694423 .677272 .637385 .738643 cmyk
@
grestore
250.691 -372.288 mo
255.502 -364.589 li
ef
gsave
258.659 -417.634 mo
66.582 -417.634 li
66.582 -291.452 li
258.659 -291.452 li
cp
clp
250.691 -372.288 mo
255.502 -364.589 li
83.906 -417.472 mo
75.244 -400.15 li
183.515 -369.834 mo
174.853 -352.511 li
.694423 .677272 .637385 .738643 cmyk
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UPEAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSG+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/quotedbl <1C60D8A8C9B8096E38D5215B2246E64FC14B0CCEF0922D00582F0DB26B400E41BAA1B223BBF121B76A8270CF628F3849D0935DB95F925E4969> |-/parenleft <1C60D8A8C9B81F2C36CCD20CF8942181AC7F4474F2382F7D30DE700E9D560AD8BD19EE22EACC9412684566AC63B0B33E5FC85E602E759FFC49BF47306AE7BD9165A4E1D3> |-/parenright <1C60D8A8C9B81F2C36CCD20CF894218194033859F410DA60583B3351294315C6F5C4ACE205E4813D6F508658462783E35F08D53213E9F0ED7984671681D402251A6FDC72> |-/C <1C60D8A8C9B6079FED21EC1DA43783C3C67A5FBA5FB885DEE16CDCDCAF1B7E5C168D0377F501B09EEE06FA7720C35D9E5B5FBCE148C17092F43DAB7E2D94E9FE9DCFFADEA91F9C52F49E3053420DCED72662293A521E028C39AF83F75FC54A> |-/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A487B4AA37370316974673AB> |-/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989DD096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F03933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-/P <1C60D8A8C9B64EDFA3F30AE4AB14FCCB57D446AF805F45D1BE197D47C6C20943FECBF4EB404456C629F1F5342EEA681381C7461EF00E178F4482E2C7F7B39C94B8CCFF41619BA5DC67957F7F81> |-/R <1C60D8A8C9B6079F1E4D8C18B43D708E4867E1D5DF87FFDFDA59C87E0DAAC2980D72F189A927C7607FB955553C4E4B82FD6E924592BF3E5BCF70BD67C10FBFCC049000E196CAB909156B2D7E5AD89BC25B1EEB84DE135A38029C2647CF918DD0728B39FA4A46AD6169BF8FCD9F6EBD7C686C8458E64ED665C52AFB667727503772603873AF92F5CB568DE59763334D0C676EEF504634735618AF2DDA86> |-/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA838C6F6EFB82E6187B34759773BB4D8C1A41E190DEFABB354DFB531C99308891FC3B7E87957393F9CD35CA8C07371CAABAAF32C24CDAE22C826F234EC2B15BA06DFB54FFCB46EDDF1D277ED530855C8BB0880980568C5F76DE693CEE6004D84A502F3C6B0F55A55095F8FAF71FCF3869AA0D55975A515D287103786F2BEFCA3E30833F771676F4E4B0C078830B99B254F2B4> |-/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C536E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCEC5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B932E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73181F38CB34F1645F> |-/b <1C60D8A8C9B7EF325758E57677E81C8AA433AA021E3255F2E2A0B159632019EEA8F6DE2A2BAC7F3B4B357F98F028325FFF3907B73C5456EB1D8FF0179B85DD1D687E5A074ACA4745CB20001A6A3AC6F132FADF60810876C26262A98CC7510FA38BE9723AF4B4ABB522A0D15754DB077A63E0BA57BE88E1BBA6B0CE58E6588DE7ADAB6E41FD9D54E4EFD5A122C76C7BEBAA12F9C5DCCF6BAA6CC0815777C0B46D695C4EB465E9932D1607B265E794EBAF8378597763D2145A376764> |-/d <1C60D8A8C9B7EF32A0BAF021E6128CBCD055133316849E00736C240570763FFBEAA17D20BAD0C90929E7FC98BEF078FBD21661E4465220571BF6C5785F779B145176EAC3F1B48024793437EC4438247E11A602434D0E7AC34F18A158BFAD2A9FD91C0C9E4A3D67CE58D890D1A5D9362E68BDC6AD4CEE4C45C583B8E0A13437C5A7D60D6E4A23D8A01F527509176EA8D499100624E9> |-/f <1C60D8A8C9B854D0A3953AFC308C88F2CB7B77611DE17001C91B65CE86C8891C39A4DBCDDE1373931B89EF13785E617F99570B386BE99D1A576D0D1701D2F253DF8B3192240780F3E221EB68A6> |-/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345FDBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E30449754F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F011296A017FBEA0AE0137A10664047E> |-/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D72A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706FE45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC754258679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52DA81BBE025DB4544A719A686DB3A0393D2301EEF9A4AA3D42067FE37BAF> |-/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-/p <1C60D8A8C9B7EF322792C3BF0D38904A73F4440F6D92D5F5AE09CC018066468E681543C8F047ACFD615B747546B5480444F746C2E0CD698A8961C13AF2BF3940EE05278AAEFC066B11F108A32A247BB7A1777E1A71A35D0F71427779DCE4A1F61E27FEB716A84B084E0A293D7F37477EB4DB407CE06D6E55EF820764AC6486> |-/r <1C60D8A8C9B81F2C6DADD03096566F18A44C12756941A411C99A198CC8D43303483F8D4425C8C61A6016070C9755F215C6103A7B22F8F2C0462F4082ABD3D08AED77838B7C426C> |-/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBE961C83BECBAF3B4E5B0884D0E51EEB661AACE85886254728F5E34D401120D0E6C2B208B0A6EFEEA993E281F58443FA8AF570296DB9AE2B0FD959762404D9D39D028E903103EBAC5E167D6A6970865F2360877231B6B2635F07AB03FB78405FFC01711DD4ECCBE59E46BB3AA7E7E004FCD7D8551926A4D9FE5600A8EF27E924599C5> |-/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B5837088353D9095E679DCF29A> |-/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E56946239346863C679F19> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSG+Helvetica /Encoding getdup 32 /space putdup 34 /quotedbl putdup 40 /parenleft putdup 41 /parenright putdup 67 /C putdup 68 /D putdup 69 /E putdup 77 /M putdup 80 /P putdup 82 /R putdup 83 /S putdup 97 /a putdup 98 /b putdup 100 /d putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/YOSQSG+Helvetica*1 [32{/.notdef}rp /space /.notdef /quotedbl 5{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /.notdef /two 16{/.notdef}rp /C /D /E 7{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 3{/.notdef}rp /m /.notdef /o /p /.notdef /r /s /t /u 138{/.notdef}rp]YOSQSG+Helvetica nfYOSQSG+Helvetica*1 [9.1669 0 0 -9.1669 0 0 ]msf225.041 -334.707 mo(beam)[5.09679 5.0968 5.0968 0 ]xsh192.608 -324.938 mo(target)[2.5484 5.09679 3.05252 5.09679 5.09679 0 ]xsh66.9661 -388.602 mo(Si \(E\))[6.11439 2.03506 2.54931 3.05251 6.11439 0 ]xsh173.456 -383.068 mo(MCP)[7.63504 6.61758 0 ]xsh136.355 -301.359 mo(DE)[6.6185 0 ]xsh126.058 -293.514 mo(E)sh240.15 -379.074 mo(Si)[6.1144 0 ]xshYOSQSG+Helvetica*1 [6.1113 0 0 -6.1113 0 0 ]msf222.635 -372.674 mo("Rutherford")[2.16948 4.41237 3.39787 1.69894 3.39789 3.39787 2.03502 1.51805 3.39665 2.03502 3.39789 0 ]xshYOSQSG+Helvetica*1 [7.6391 0 0 -7.6391 0 0 ]msf174.178 -374.695 mo(\(start\))[2.54376 3.81955 2.12367 4.24733 2.84781 1.82115 0 ]xsh66.582 -378.495 mo(\(stop\))[2.54376 3.81955 2.12367 4.24734 4.24734 0 ]xsh%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CFD85> |-/eight <1C60D8A8C9B7A73D33BF1B919D3990280983708D6757A992F5763D40D0C17EA83BCB85789813648C1332AA4BA5DECDB6C51AC02F13C5CEC3648068DF163FD5A16CBA724ABBC388395CA8D29C7E9CBEAA9260DD0185441D7B1077F46DB8D59436936512EF03987B35CAAC3F83CBCFD25406E86BFCA5DD2BD7BAF4B5A6E1EF7535E35954911D554DFEA44E42DB79B0FB04D3E90477795F66F8A8FEB792F15D59414AE3673345D8ABA5BD4D2AD8EE578BFD9E28ECEFDCBE7E7D857182A9F46443C79272F5FFF983387F498DC0041982F82C8B0FA76BA464F5DD7119CCD62BCFB1365FA28B858FC14D73B10CF5A83F8B> |-/colon <1C60D8A8C9B854D0F4C3D92D816E2ECB7379D6E9CCDD18181277390E435A4F9286287C26709A7A3847FAD4C0EAD036C0A2A8D3B3CCF6217533C359A366F9DFF3159334E6E32E3452EAD4EA9B044C5B5B415F> |-/F <1C60D8A8C9B7EF32570E39CCED07FE54E8B5118F3EFF07C7A79A2805A7241FA0611FB6DCB02F4798E0410DC1710B4F82A5B7BCC7865D64D2E2B0A30C294A77483F558D7052690E49D2377820A0E476D251BE7D8E7824AF8838D3AC4B16AB7150225F7733450A626EF63F06C118CB55A5AEB0457B0B46C175C6FAF26CA023804F63A0F8CB598EED6E4E1BE1C9B8155B5E2F3060102CB3B31CD1B056E0CC0202> |-/G <1C60D8A8C9B6079FE80B2D9B8A220BABE8A5775155D5AEE67EA9CE80530F42678BB7923C2E1998D5A150C054ED90E9D960696B97F4DB8EA42B60C13ED3831BAE2B146B775564D2359A7EC713509A43C5C5E3539551C39DB899CD95573B1D4F19BE1759C57CF1BCAA6FB7D841F4C17766A5D35D204457A8F7FAA27C0DD08A35CD68D893853416989C0D7266D1AB8433FCBD83529F03E02AAB3CCA8AF06110C60DDAA381BF4BF975C41ABF718C730E643CFDF62ABFA9468C> |-/T <1C60D8A8C9B7D8BE7EA0B64700DC8E438573301CAC4344B7D410E182F881F58CB0EE6C7200F45451BF195D6B4EC9CF9C8B176B767CF2064CDC4BF9C3DA0B6A6FF54C56F67DE1F05535B028AE5A1E7C736084EB09A8A00FEB9607E1E016> |-/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF334CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8A7014AC491483F6C> |-/b <1C60D8A8C9B7A73DCF483CC3D064C5FA3DCB4FE14F64E061FC6B7B327BD3AD170E4E134821E89959D7FC86E9160C1887FE9D1E5C6528E6DF501B7B2F3F30D0CEE6E0ECDE5FBEA2BBABC11DF1E31664808113184F8240E66E326CF8F60725DAFAA94AA48A85FA298CB9ED7FFADEF21D27A3E79BDB2F75A75EA736FD59CC6559DB85761C885E021EFCF09E24B9> |-/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F44F985AA21BA1A9B71EA7AE21C439E05A319047A6D64BC1D4392480160430400AFA5C943510A8521B80B0990CB49D8F01EE3F> |-/d <1C60D8A8C9B7A73DCF5C5F7CCFE1224745C14DED045144DECBED335D8767365A686119923BC683874F138A812E24882366A564440105A4DC036664F6BE736287F87B295D2920E5B8EA5128E5E6C4D3D8CC4EF499D5F82793394C8A44BB4BC5B324694DE039E82E3C3E95CCEA761C759B9AB2F813EF75023CD818EA7E49BFA40067FB96C397B29CD7920172CF32CEB2D7D6BA2C2C243F80C59229B326C2E018A09BBC01E8E5EAF27058ED024F330852F9551733A92CF8DD2FDE72DD73A6AB5C5124E5F56317BB270B722C0F9A2DB91EC3> |-/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3BCE3A721EBABA194412EC3061B00A07EF9497D2BA0393994B5BAD3D53481E4076AC8BDD976CDE1D7C869C749BF31CD9AA8D8775C17BFBC48988132FD7543B8680B068C59E2A9123C08B9AC1B> |-/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF77C72CE9F4FF44E681C46DF934E6F13477EDB282AE0A0AEB3C1EAE1FE7BD0F6DE854793C6EBB102BA640EE2A1937B205F1275AE2A18BEEEA6F56A75ACE6F8742D16A82839984> |-/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296CB33756AB3A7AE8A175ECCFBAEFE2D4D26FE981086B935FAC40322E1F0B8F7350D4069F2282387985119CD3420DA7C6AF69B6593DDE216B952D8FCDCBEF2F469E8089D575BA41CC65444D1B22A9D24CFC1E970C8B6BEDF22A18DB852FFB88FE3E61676AF1B587C8BEDC7F57FDC2C2A66C537084478A0CE11D64537C41EBBD5BF312EA203B1D25DC925907A26C5096A56920B8D980F1FDE4021D766D9EBB9E2D5040E1243BA22D72996312BD29C454816BAAC378D28EAD1B4E006AFB191F0E63614E1C1D12BF3C0816D46C6B4BFA439751F894732123CB9417F879A9079FEB665894A238DC5E00C5560672D49ED3BE797BB9B40B81D47DC4D6525BAC3E19A2463521FF7137CAAF2A9FB5F4F7C0D469F6100DFA27CAFCE39CE1E106B3138E3B02A642CB6CBDE836A606594170908768F9F84598AA082C678AA176A30FCE7778326054A4DB4C2521DC0835CAFB81BC8AFB272F07932AA37EF69999C6D26587244DB681D773B8265D77C46AB4A99012FE89850D5F97C81D2ACDC98A50506471087EB40F5> |-/h <1C60D8A8C9B7A73DC549024A8346FEB2B78E908B5A6E113B6B1D9F55576FB6430AA363CC7EA7A85866229D47A648E16050AC3817C69AC198992A95DC887E9C2F4E126428A388941BC547CF3DFD3AF002591B6C465CE80F6B0C8E3BF1745FFB044EE609634601B3F272E0A2A1613C8D3DAD607A9DF002A5DBDCD953AE67BA74F625AAC084AEBD78F5D55004D7E5DC895C1EC4CADD91BABB3BE394835C4CCB41B4BC3CDD> |-/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E801180DD16566EA992053D08DFDDD90B69C61E00DD73FA9F14D9F9BA0BA5DE6F463B9913A4C5B8DB11D33C1FDD97C4AED671CB9420D4160C0D8849042FEC7B7C3AD6164404608E93E91AD41C497AA4F0BFEC99AE40E5> |-/l <1C60D8A8C9B854D08887A955C7D68D8C5333C31878F574AA9AE5E3E7AADBE1B3A329F6AE772A2FA9E3BCD7AD6B2EB2F08C5C060E81EC0A70F41E9D6D0E7B19D3FEF21F30C39B12829A5A4E4EDD48F68C41B6A233A2DBED> |-/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC4969344E90E1A3F6BB0EC423A0839831AD6C986649A08BE59C9A3AF60608A974950B299379DB00149450A78653D6D4B9B18966FB51AC5B75CCA0334B3300F064709EE5249490C1CB7C6E6F7A3DBD6837889932B38C16FA553F6A7BD9185FFB7638767BBEB1CC928CF2A5534FC32F6F3027FAF68DC8EE9A75EC980BD894ADC4F0B26421A336F0F6A40AAD70D4278736A8FEA511C2ED4A971DB961B998B0AA6DA2144859946854D246CD2A6E94B7321CC1214550> |-/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A91089ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0DEB009172C2D67F26ED44CA4931A6533F30AB34> |-/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA507D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD7663199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B01C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D65956107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECDF05FEB5C54162C09AD2C0169673C> |-/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D372741C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08AFD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9B8097DA00FD849056413A4E04E950801ED07C405C45837491E4864754EBADCC32B5232850305BAEEDA0A345554138E3B49E2F7260D37E80E4C37FED6327D7438DA6B2E0355D0043D6795C50CA3> |-/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF63787A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70CC8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-/u <1C60D8A8C9B7A73DE1FEDB846BC597269D9E0C51D8C22F2B722B34AEBAF190658C0559601B266D7A25A55FD43DDD5BEFD1643FDA15DB9307B56B392B5AC68F81B580F46B71CB6DE1A21AE03B91093587C26F113B0055E84FDB8C5EDADEE628F85456B6D1B0C90F3F4C6B66407F7C61F465E76A627C6E1AC486C9BC9506FCF303D0A507D5D7D5D700213EA098FC6A864FC4203B659E> |-/v <1C60D8A8C9B7A73DDC2846ECA263567D5FF766DAF6EDECBDA59981A2B8D852D5F3C735E0CB09E278E085C85902E93B6730AC94976F06C86CE79902DFE3D63F4327D345589E5D6D8E4470DC068DE92C7775CDBCE234CF63D9048B83B5B8225EB38A3E7FD244643B093F0131528FD6DE23> |-/w <1C60D8A8C9B6079F073CF9E9FD4DD755103DBBF986FA4805E36E84A4ECDE5D22075F7DCF210C6B1EBA68713659F633DB777AF20557A55192976916F7539FBF60FD9581CC24839D0FB84FEDB8D55FB604997EF9376D1DB0C150E41998C0DD7332B70334BC2A16949E085C7559C48EDDB465613BB3B4A21037C818DEE65F274EC082BD0BF16541E3A6DC67D01E45FCE5987C6993A634C7751F403C64619D5D34EDF98783774454B5C36C735A22C2> |-/x <1C60D8A8C9B7A73DC5490245197C6A10ADDC3E0FA58392059EC7D8F6B66FB0930B38EB119ACB6A2A3F634D77F5CF7C8D99C62501D6684A6FD07A49AFAD748B3BD4468AD4BA11802E815F7DDC3EFDD84C4D7209BF92B0439CDE5D6763248366DFBFD06A148E86014B62BD462267E2267FF702B3FE0C2F56259689794C288E394AE4382AFC6AC04373CAD56E7F81CE52F61834C7721A873F0194632E517E056B975C> |-/y <1C60D8A8C9B7A73DB5828C8EB66C86A2A0178950C8A5D2BCDF7E587CE4AD01DF8AD4603198C6F5DF9E7F658259AE7FF6DC72080528C2A7D419F982E298CCAED2E6BCC85E06532CEB363664FB4449960341BAA9D39DAAAF5C47EC79D4FFB0F446C4E2A0FDC91EAC4399171E6DFD5F8C5B3A9EDD053AD9BFC6A562A7DCD44F19646282D2DDE100CDBBA0EDB34E355DB469767675AF6D94185E4181FCCDCD20A6CA572AF5532989> |-/fi <1C60D8A8C9B7EF32570AFF8232948072BEC4C50248C1208A69B28B65AADBCA92759C919FA1E9FEED9805553A4DA719E642BF818FA1F207BFFFA261F4684EEDEC74D5FA21E60ACFC86CCDCCAB1F34855657DE53C09E74BC643E809747A4490D6E2D525AF43CE58C8030D80DD7C648C3036BD5C3D4AD9A69D5D31C9A067EA77341991BEAF0722208EC7CF6FF370325F44116B8F101A9BC9394B7572AA8CB6FD53542F5362A92C681DCE3150EDF3158D05182681F9FAFCE92EDE83E3B17EF7235AE203955993A0D562648749B3CC0> |-/endash <1C60D8A8C9B7A73DB978107C16F615C37E967E89077DBDCC25BC1145> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 45 /hyphen putdup 56 /eight putdup 58 /colon putdup 70 /F putdup 71 /G putdup 84 /T putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 120 /x putdup 121 /y putdup 174 /fi putdup 177 /endash putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine /colon 6{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I /.notdef /K /L 3{/.notdef}rp /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf52.497 -273.515 mo(FIG.3.Schematicviewofthemeasurementsetup\(seedetailed)[4.98442 2.98485 6.47285 5.19334 4.4823 6.02991 4.98441 3.98019 4.4823 3.98018 6.97496 3.98019 2.49176 2.49176 6.9122 4.4823 2.49176 3.75334 9.39589 4.4823 5.90431 2.49176 4.4823 6.90323 6.97496 3.98018 3.98019 3.48709 4.4823 2.98486 3.98019 6.97495 3.98019 4.48233 5.4184 3.49246 3.98019 2.49176 4.48233 7.39816 2.98486 3.48712 3.98019 6.89426 4.4823 3.98019 2.49176 3.98019 2.49179 2.49176 3.98019 0 ]xsh40.5358 -262.562 mo(descriptioninthetext\).)[4.4832 3.98108 3.488 3.98108 2.98574 2.49266 4.4832 2.49265 2.49266 4.4832 6.73198 2.49265 6.72301 2.49265 4.4832 6.2191 2.49266 3.843 4.4832 2.49266 2.98575 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf40.536 -236.642 mo(detectorswereemployedsimultaneously:Theisobutane-\256lled)[4.9803 4.4224 2.7686 4.4224 4.4224 2.76861 4.98031 3.31647 5.93082 7.19101 4.42239 3.31647 6.46174 4.41942 7.74989 4.98032 2.7686 4.87769 4.9803 4.42241 7.03757 3.87454 2.7686 7.74989 4.98032 2.7686 2.7686 4.42239 4.9803 4.42241 4.9803 4.9803 3.87453 2.7686 4.9803 4.82388 6.08409 4.98032 6.46173 2.76862 3.87454 4.98032 4.77905 4.98032 2.76862 4.42241 4.9803 4.42242 3.3165 5.53821 2.76862 2.76862 4.42239 0 ]xsh%ADOBeginSubsetFont: CMKQMX+MTMI Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /CMKQMX+MTMI def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation) def/Weight (Medium) def/ItalicAngle -14.0361 def/BaseFontName (MTMI) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /Delta1 putdup 65 /A putdup 69 /E putdef/FontBBox {0 -213 987 680} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-18 -0 653 672 428 441] def/OtherBlues [268 271 -211 -192] def/BlueScale 0.0479599 def/StdHW [34] def/StdVW [73] def/StemSnapH [20 34] def/StemSnapV [55 73] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/Delta1 <1C60D8A8C9B6D9EA3241F431594FF7B80F1EE10F3107D9AF096DDDF73436F96A22AB19A5AF3FB91C171702B64817DA974C51> |-/A <1C60D8A8C9B60F082D5B0CF0AD21F1E9B18C2FB6116F4C05A40D7A877CD420692695C395E3E54AEAD8BDBB2DDB549F2F3762D88FF05B6E653231BA0B532286A7FA27791D3F510431623B0E91D745FD3E94C2BFA930A9F0D10599E42252982068FF2017FA32F27E05DA2B3229212D07B4052DF450247B6C55897AE4F78E> |-/E <1C60D8A8C9B605F8AF5A9AF85419300CC62BF363748D5BBE7BA8D653DFA08D644E5D56CC345D856C2F57339C8772D24C3CAF27246D6227383AB8E23E3B7323891569B8889832B67CC97D708F8DDB61F822D5011FAD3F33E2F795260F52BFD7536AB4588CBE19634D5CE5A8BD69E6D6E17C369DC9FCAB40C10E954A26163A3292EB0E795EEC758A842011EE6AA45E9A603E1860C6A9896E308AFFAA649D8A24D5FDBA99D39ACADC182E7169FCC9ECCFCCBDF49F8501447D1EC8D41053B310> |-/.notdef <1C60D8A8C9B81F2CC3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSH+MTMI /CMKQMX+MTMI findfont ct_VMDictPut/YOSQSH+MTMI*1 [49{/.notdef}rp /Delta1 15{/.notdef}rp /A 3{/.notdef}rp /E 186{/.notdef}rp]YOSQSH+MTMI nfYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf40.536 -225.185 mo(1E)[8.00994 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf60.1832 -225.185 mo(detectortelescopeensuredalowenergythresholdand)[4.97931 4.4214 2.76761 4.4214 4.42141 2.76761 4.9793 7.3075 2.76761 4.42141 2.76761 4.42141 3.87354 4.4214 4.97931 4.97931 8.40645 4.4214 4.97931 3.87354 4.97929 3.31548 4.4214 8.95538 8.39748 2.77161 4.72525 11.1601 4.4214 4.97931 4.4214 3.14113 4.97931 8.96434 2.76759 4.97931 3.31548 4.4214 3.87354 4.97931 4.97931 2.76758 8.95541 4.42142 4.97928 0 ]xsh40.536 -213.728 mo(perfectidenti\256cationofallregisteredioncharges,andtwo)[4.9803 4.4224 3.31647 3.31647 4.4224 4.4224 6.87618 2.76861 4.9803 4.4224 4.9803 2.76861 2.7686 5.53821 4.42239 4.42241 2.7686 2.7686 4.9803 9.08987 4.97733 7.41608 4.41942 2.7686 6.86722 3.31647 4.26599 4.9803 2.7686 3.87453 2.7686 4.42241 3.31647 4.42239 9.08092 2.76862 4.98032 9.08089 4.42241 4.98032 4.42241 3.14113 4.98032 4.42241 3.87454 6.59724 4.42241 4.98032 9.0809 2.76862 7.09238 0 ]xsh40.536 -202.271 mo(silicon\(Rutherford\)detectorsplacedatforwardanglesof38)[3.87453 2.7686 2.7686 2.76861 4.4224 4.9803 7.46099 3.31647 6.64413 4.9803 2.76861 4.9803 4.4224 3.31647 3.31648 4.9803 3.31647 4.9803 5.8141 4.9803 4.42239 2.76862 4.42239 4.42239 2.76862 4.9803 3.31647 6.37216 4.97731 2.7686 4.42239 4.42241 4.42239 7.47893 4.42239 5.25627 3.31648 4.98032 3.31648 7.09238 4.42241 3.31648 7.46996 4.42241 4.98032 4.98032 2.76862 4.42241 6.37216 4.98032 5.80515 4.98029 0 ]xsh%ADOBeginSubsetFont: KVXQMX+MTSY Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /KVXQMX+MTSY def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1992, 1993 The TeXplorators Corporation and Y&Y, Inc. (508) 371-3286. All Rights Reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (MTSY) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 68 /equal putdup 177 /openbullet putdef/FontBBox {0 -954 1043 796} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 465 484 501 506 657 676] def/OtherBlues [-209 -186] def/BlueScale 0.0479599 def/StdHW [50] def/StdVW [50] def/StemSnapH [20 50] def/StemSnapV [30 50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/equal <1C60D8A8C9B6C180329C486F337E2637810D8548FE31FA7E089C659A5FA4521910F4A25ADF4E42AFDF85360EA65D> |-/openbullet <1C60D8A8C9B7A73DE6C27D577B58CF0E80FC15DDE445150B7A33A2DE3E753853E9F310F6921530C3CE006D5E590F1E3A05E9355AE43E8CBB017F13F405FF7171AC45A9A143F7C8C0C5749270645BEC342D> |-/.notdef <1C60D8A8C9B81F2CC3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSI+MTSY /KVXQMX+MTSY findfont ct_VMDictPut/YOSQSI+MTSY*1 [68{/.notdef}rp /equal 108{/.notdef}rp /openbullet 78{/.notdef}rp]YOSQSI+MTSY nfYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf281.628 -205.889 mo(\261)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf40.536 -190.814 mo(\(inthelaboratorysystem\)wereusedtomonitorthebeam)[3.31647 2.7686 9.33297 2.7716 4.9803 8.78403 2.76861 4.4224 4.9803 4.98031 3.31647 4.4224 2.76861 4.9803 3.31647 9.35091 3.8795 4.9803 3.87453 2.7686 4.42241 7.74989 7.67711 7.192 4.42241 3.31647 8.78403 4.9803 3.87453 4.42241 9.34192 2.76862 9.34193 7.74991 4.98032 4.9803 2.76862 2.76862 4.98032 7.68607 2.77159 4.98032 8.78403 4.98032 4.42242 4.42239 0 ]xsh40.536 -179.357 mo(energy.Thedataanalysisgaveusproductionprobabilitiesfor)[4.42141 4.97931 4.42141 3.14113 4.97931 4.32875 5.04008 6.08409 4.97931 6.96585 4.97931 4.4214 2.76761 6.96585 4.4214 4.97932 4.4214 2.76761 4.97929 3.87354 2.76761 6.41699 4.92351 4.22116 4.82388 6.97482 4.97929 6.40802 4.97931 3.31548 4.97929 4.97931 4.97931 4.4214 2.76761 2.76761 4.97929 7.53273 4.97729 3.31549 4.97929 4.97931 4.4214 4.97931 2.76759 2.76761 2.76761 2.76761 2.76761 4.42142 6.41699 3.32043 4.97931 0 ]xsh40.536 -167.9 mo(ionsofmassesintherange)[2.76761 4.97931 4.97931 8.0638 4.97931 7.51472 7.7489 4.42141 3.87354 3.87354 4.4214 8.05484 2.77159 9.17056 2.77161 4.97929 8.60371 3.31548 4.4214 4.97931 4.97929 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf160.83 -167.9 mo(A)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf172.287 -167.9 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf184.24 -167.9 mo(12\26122.Themainresults)[4.97931 4.97931 4.97931 4.97931 4.97931 6.69586 6.08508 4.97929 8.61267 7.74892 4.4214 2.76761 9.17058 3.32147 4.42139 3.87354 4.97931 2.76761 2.76761 0 ]xsh40.536 -156.443 mo(arepresentedinFig.)[4.4224 3.31647 7.55066 4.97731 3.31647 4.4224 3.87453 4.4224 4.9803 2.76861 4.4224 8.12749 2.7686 8.10857 5.5382 2.76861 4.9803 0 ]xsh.883635 .769161 0 0 cmyk
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf126.927 -156.443 mo(4)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/bracketleft <1C60D8A8C9B81F2C36B2094B9ED0E07AA432BA5CE2E30656FAF6FD647FB4730E81C90D45CA2A3E2357B2F5E09E9C4D9F27ADC522DE90> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 91 /bracketleft putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine /colon 6{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I /.notdef /K /L 3{/.notdef}rp /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y /.notdef /bracketleft 5{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf131.904 -156.443 mo(.Thesecomplementandconstitutean)[5.62488 6.08409 4.97931 4.4214 3.87354 7.55962 4.4214 4.97931 7.74892 4.97931 2.76761 4.4214 7.74892 4.4214 4.97931 5.92177 4.4214 4.97931 8.11752 4.4214 4.97931 4.97929 3.87354 2.76761 2.76761 2.76761 4.97931 2.76758 7.55963 4.42142 0 ]xsh40.536 -144.986 mo(improvementontheearlierresultsofRef.[)[2.7686 7.7499 4.9803 3.31647 4.82389 4.8239 4.4194 7.74991 4.42239 4.98031 5.29213 4.98031 7.47892 2.7686 4.9803 6.91206 4.42239 4.4224 3.31648 2.76859 2.76862 4.42239 5.8141 3.32047 4.42239 3.87453 4.98032 2.7686 2.7686 6.36317 4.98032 5.81409 6.64413 4.42239 3.31648 4.98628 0 ]xsh.883635 .769161 0 0 cmyk
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf212.894 -144.986 mo(18)[4.97731 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B6B41CC7B7C23F654D8876BCF8210DB8E537449FC21E454F6BFC6A033D6264FCB9BA5C79C4E7AA7227BD3E1DE864D7864C7B18726524232E8431D8253A76C435C89541EA478453FEECDF6C9E27B0BB0EE977A12009EF6F2CDD847AFB437D494D039B0F49232B38E2277C2A8CAC5D1C4F6352623248C100A575E3C3A6A5824D0D0713CA3421F744402B75AFFC898E79686E10CC7D5C2F5C93F81A756FFC15AEA3877E726C38C497DC546B3283280F5FFDD2D1A096C544EE7DCBE6A55141B2D058A7727D561809ABCC814E7B08A994678E8486E5E8226EE68BB842C2584BF5C1E0231A52F647B814B3CF8853CC9D613153C972BD44D64163567FD498C84324779F05A69DA29DFF0309F46A3F18DFB876897072454E50FF70C99203A28974AA24B2F2AD0BF65FACA902CFE3A0967B21> |-/seven <1C60D8A8C9B7A73DD6FE362CD24F05334B0EB647AEFE5409105064A3E2149E3F071B4B7682CB4AAE846128CC40E4FE81E9AE8C264167A3B3D819A723> |-/Z <1C60D8A8C9B7D8BE6A6EDEC9185C38B8A1B4E98DDBA0ADD0EBC62DF4F1DF2AC115152950B1B4300CAF5FD3A9831ED4BE2B0CBABB56F1E7F1E4D47831FA59792540FD9554FFC78A64DC234E66A3D7> |-/bracketright <1C60D8A8C9B81F2C36B2094B9ED0E07AB0AE245978D415C9B35A8D321C0AFE31914517F88ADB7E52176ED8827A777F14FE6FD4341F74> |-/j <1C60D8A8C9B854D0F8036B9E41E00749D27292159EBFE77AC2277EF5488334291DD30C4B9C3E7C953150698FE31B2CBE1624AFD85A81A9069F8F47C4285F33A4C9AD85DA78A27DB5C06356F829273C4740DFB56B8B0FDC43D66AC99A3ABDAF5532DEF5D91EF8D649F7038A091BBD40D049C74BB965EB68080498527B94AE> |-/k <1C60D8A8C9B7A73DC549024AEE55A01243B0ED1B2825DB74E3D4409DAB03360E64EE70A07ED7B69F115EEF98820D21F1DE6EF3BB4358612BA07FC9A40921C0AD30EF197C3D695EFDC35D3C9730116E52E0ABEFC9769B9302392F123FDEAA4AA885495C7D34579141F0B531400B42BB4E124EADD24EC34F713FF7466019E554EC1582FC6D1F609CBE080383D47963691E73E752C0BDF5CFFA1CA9F764FD810298046BFCBC263AE7BCB74C096697F8A00B5877DC20F2A2> |-/q <1C60D8A8C9B7A73DB5811938DD329AF571F14FFDE692A057FCB729720A5BED4D1F9C0C23BDB1CB452F40EB6D848BE0932F4C760F5C2503004914FFB4B67682FA186AE228665B2BFEA6ACC885BEC05363FF79301DC87EB9E5C026E33B1707B560B235E300E90D1225B3F5646ADDE05DCB20F259A4A8F9EE35B417CA23FCC315BAD2FB6734C0B8BCA0E27A3A137C64206716203345A864EDB66059A017842F1314A9089CC31918917957F569> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 37 /percent putdup 55 /seven putdup 90 /Z putdup 93 /bracketright putdup 106 /j putdup 107 /k putdup 113 /q putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 6{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I /.notdef /K /L 3{/.notdef}rp /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y 52{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf222.848 -144.986 mo(].)[3.32047 0 ]xsh52.4961 -133.529 mo(Themoststrikingresultisthatthetotaltransfercross)[6.08607 4.9803 9.24331 7.74891 4.9803 3.87453 7.57756 3.87952 2.7686 3.31647 2.76861 4.9803 2.76861 4.9803 9.78326 3.32146 4.42241 3.87451 4.98032 2.7686 7.58653 2.77158 8.68549 2.77158 4.98032 4.42239 7.58652 2.7686 4.9803 9.23433 2.77161 4.9803 2.76862 4.42241 7.5865 2.76862 3.31648 4.42241 4.98032 3.87454 3.31648 4.42241 8.12741 4.4194 3.31647 4.98035 3.87451 0 ]xsh40.535 -122.072 mo(sectionsforthe)[3.87354 4.4214 4.42141 2.76761 2.76761 4.97931 4.97931 9.24338 3.31548 4.97932 8.67635 2.77159 4.97931 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf112.509 -125.69 mo(90)[3.48341 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf119.979 -122.072 mo(Zrand)[6.08309 8.69429 4.4194 4.97731 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf154.503 -125.69 mo(92)[3.48341 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf161.982 -122.072 mo(Zrtargetsareessentiallythe)[6.08707 8.69429 2.76961 4.4234 3.14113 4.98129 4.4234 2.76961 9.24338 4.4194 3.31747 9.78326 4.4234 3.87553 3.87553 4.42339 4.98131 2.76959 2.76961 4.42339 2.76962 2.76959 10.3412 2.76959 4.98129 0 ]xsh40.5369 -110.615 mo(same,namely,3.46\(17\)and3.74\(19\)mb)[3.87354 4.4214 7.74891 4.42141 6.97481 4.97931 4.4214 7.74892 4.4214 2.76761 4.32875 6.98378 4.97932 2.48866 4.97931 4.97931 3.31548 4.97931 4.97931 7.8116 4.4214 4.97931 9.46844 4.97931 2.48865 4.97931 4.97931 3.31548 4.97931 4.97929 7.81161 7.7489 0 ]xsh%ADOBeginSubsetFont: CMKQMX+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSH+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B745265DB920B47933B671A6716EFB8EB6DAEE719CDC462CFE1483DCAB3C27> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSH+MTMI /Encoding getdup 61 /slash putpop%ADOEndSubsetFont
/YOSQSH+MTMI*1 [49{/.notdef}rp /Delta1 11{/.notdef}rp /slash 3{/.notdef}rp /A 3{/.notdef}rp /E 186{/.notdef}rp]YOSQSH+MTMI nfYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf212.24 -110.615 mo(=)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf216.921 -110.615 mo(ster,respectively)[3.87453 2.76862 4.42239 2.92494 6.96585 3.32047 4.42239 3.87454 4.9803 4.42239 4.42239 2.76862 2.52054 4.82388 4.42239 2.76862 0 ]xsh40.5379 -99.1581 mo(\(just6%ofthetotalquasielasticscatteringatthisangle\).This)[3.31647 2.7686 4.9803 3.87453 5.16561 4.97732 10.7008 4.97732 5.72343 2.77159 4.9803 6.82239 2.76861 4.9803 2.76861 4.42239 5.17458 4.9803 4.9803 4.42239 3.87454 2.7686 4.42241 2.76859 4.42241 3.87453 2.76862 2.76859 6.8224 3.87453 4.42239 4.42241 2.7686 2.7686 4.42239 3.31648 2.7686 4.9803 7.38925 4.42241 5.17458 2.76862 4.9803 2.76862 6.27353 4.42241 4.9803 4.98032 2.76862 4.42241 3.31647 4.89563 6.08411 4.98029 2.76862 0 ]xsh40.5379 -87.7011 mo(equalityimpliesthatwhiletransferscan,inprinciple,playa)[4.4224 4.9803 4.9803 4.4224 2.7686 2.76861 2.76861 8.18128 2.76861 7.74991 4.9803 2.76861 2.7686 4.42239 7.07452 2.77159 4.9803 4.4224 5.95763 7.192 4.9803 2.7686 2.7686 7.61443 2.7686 3.31647 4.42241 4.9803 3.87453 3.31648 4.42239 3.31647 7.06555 4.42241 4.42239 4.98032 5.69661 2.76862 8.16336 4.98032 3.31648 2.76862 4.9803 4.42241 2.76862 4.98032 2.76862 4.42241 5.68765 4.98029 2.76862 4.42242 8.18127 0 ]xsh40.5379 -76.2441 mo(signi\256cantroleintheshapeofbarrierdistributions\(see,e.g.,)[3.87453 2.7686 4.9803 4.9803 2.7686 5.5382 4.42241 4.42239 4.98031 5.63385 3.31647 4.9803 2.7686 7.26274 2.7686 7.82064 2.76861 4.9803 7.2717 3.87952 4.9803 4.42241 4.98029 7.27171 4.9803 6.16479 4.98029 4.42241 3.31647 3.31648 2.7686 4.42239 6.16478 4.9803 2.76862 3.87453 2.76862 3.31648 2.76862 4.77907 4.97731 2.7686 2.76862 4.98032 4.98032 6.72284 3.31648 3.87454 4.42241 4.42239 5.328 4.42242 2.48965 4.98032 2.48965 0 ]xsh40.5379 -64.7871 mo(Ref.[)[6.64513 4.4234 3.31747 5.33696 0 ]xsh.883635 .769161 0 0 cmyk
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf63.5774 -64.7871 mo(19)[4.97732 0 ]xsh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/z <1C60D8A8C9B77FE2B2232EA49D913A839F944BFBD58B5F9C53AFDB3D34F4E5415E4B3404E59C07E141AA5433E3E87B3F0CD3EE7F94ADC8BC88439282D910FBCA4AB475DDE170B794FDC643F3659C48C39F39> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 122 /z putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 6{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /I /.notdef /K /L 3{/.notdef}rp /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z 51{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf73.5311 -64.7871 mo(]\),someothermechanismisresponsibleforthevery)[3.31647 3.31647 5.328 3.87453 4.9803 7.74991 7.26273 4.98031 2.76861 4.9803 4.42239 6.16478 7.74991 4.42239 4.42239 4.98032 4.42239 4.98032 2.76859 3.87454 10.6112 2.7686 6.70491 3.31648 4.42239 3.87454 4.98029 4.98032 4.98029 3.87454 2.76859 4.98032 2.76859 7.2717 3.3165 4.98032 6.15582 2.77158 4.98032 7.26276 4.82388 4.4194 3.31647 0 ]xsh40.5369 -53.3301 mo(markeddifferencebetweenthebarrierdistributionsforthetwo)[7.7499 4.4224 3.31647 4.87769 4.4224 6.86723 4.98031 2.7686 3.0694 3.32046 4.4224 3.31647 4.42239 4.9803 4.42241 6.30931 4.9803 4.42241 2.7686 7.192 4.42239 4.42239 6.87619 2.7686 4.9803 6.30035 4.9803 4.42241 3.31647 3.31648 2.7686 4.42239 5.19344 4.9803 2.7686 3.87454 2.7686 3.31648 2.76862 4.77907 4.97731 2.76862 2.7686 4.98032 4.98032 5.75148 3.31648 4.9803 5.19341 2.77161 4.98032 6.30035 2.76862 7.09238 0 ]xsh40.5369 -41.8731 mo(zirconiumisotopes.)[4.4224 2.7686 3.31647 4.4224 4.9803 4.98031 2.7686 4.98031 10.2605 2.76861 3.87453 4.9803 2.7686 4.9803 4.9803 4.42241 3.87453 0 ]xsh52.498 -30.4161 mo(ThemostlikelyexplanationcanbeseeninFig.)[6.08508 4.97931 6.37209 7.7489 4.97931 3.87354 4.72527 2.76761 2.76761 4.87769 4.42142 2.76761 6.92998 4.26599 4.97931 4.97931 2.76761 4.4214 4.97931 4.4214 2.76761 2.76761 4.97929 6.95689 4.4214 4.4214 6.93895 4.97929 6.37209 3.87352 4.4214 4.4214 6.93895 2.76762 6.92102 5.5372 2.76761 4.97931 0 ]xsh.883635 .769161 0 0 cmyk
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf238.294 -30.4161 mo(5)sh1 /0 /CSD get_res sepcs
1 sep
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf243.271 -30.4161 mo(,wherewe)[4.4463 7.19101 4.97931 4.42139 3.31549 6.38104 7.19101 0 ]xsh40.5379 -18.9591 mo(comparethe)[4.42041 4.97831 7.74791 4.97831 4.42041 3.31448 7.68616 2.77159 4.9783 0 ]xsh%ADOBeginSubsetFont: CMKQMX+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSH+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Q <1C60D8A8C9B68526F8CE277F69C50E315DA1AFB3CF74BC68725E3B28111EC7AE2F9552D742AB23417643D7C5209367BF315A5A3AF9616C0FE4A96399BF366140F216A75510B2434D6E2653267FFCA6351459F03E510730AF26850AAEDCB22BE84C5C771171AD29C92D6F1B7FA784E00D0DFC4E842C442761B11AD223588912A8B87CBDFE73B2117A5D22439AA3FFA67918C0261FA708CB53C8011D11B3360C7A4A205B4D7EF25032EE33E0AC756F3EAF0F3963A0A62981D35DAE7B27559A83305B7457E269F46B899A68F4F9FDD1F55D639601DB687C769322424F7C262DCF8A> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSH+MTMI /Encoding getdup 81 /Q putpop%ADOEndSubsetFont
/YOSQSH+MTMI*1 [49{/.notdef}rp /Delta1 11{/.notdef}rp /slash 3{/.notdef}rp /A 3{/.notdef}rp /E 11{/.notdef}rp /Q 174{/.notdef}rp]YOSQSH+MTMI nfYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf93.5031 -18.9591 mo(Q)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf101.954 -18.9591 mo(-valuespectrafor\(nontransfer\)backscattered)[3.31647 4.72527 4.42239 2.76861 4.98031 7.67719 3.87453 4.9803 4.42239 4.42241 2.7686 3.31647 7.66823 3.31647 4.9803 6.56129 3.32047 4.9803 4.9803 4.9803 2.76862 3.31647 4.42239 4.9803 3.87453 3.31648 4.42239 3.31648 6.56128 4.98032 4.42239 4.42239 4.98032 3.87451 4.42239 4.42242 2.76859 2.76862 4.42242 3.31647 4.42242 0 ]xsh78.272 174.457 mo
165.105 174.457 li
165.105 166.996 li
78.272 166.996 li
cp
.694423 .677272 .637385 .738643 cmyk
f
.466 lw
1 lc
1 lj
78.272 166.996 mo
165.105 166.996 li
165.105 174.457 li
78.272 174.457 li
cp
@
gsave
67.454 13.668 mo
284.581 13.668 li
284.581 174.55 li
67.454 174.55 li
cp
eclp
78.272 174.457 mo
78.272 166.996 li
165.105 166.996 mo
165.105 174.457 li
78.272 166.996 mo
165.105 166.996 li
@
grestore
186.837 174.457 mo
273.668 174.457 li
273.668 156.363 li
186.837 156.363 li
cp
f
186.837 156.363 mo
273.668 156.363 li
273.668 174.457 li
186.837 174.457 li
cp
@
gsave
67.454 13.668 mo
284.581 13.668 li
284.581 174.55 li
67.454 174.55 li
cp
eclp
186.837 174.457 mo
186.837 156.363 li
273.668 156.363 mo
273.668 174.457 li
186.837 156.363 mo
273.668 156.363 li
@
grestore
161.094 166.809 mo
164.918 162.985 li
156.524 166.809 mo
164.918 158.416 li
151.954 166.809 mo
164.918 153.846 li
147.384 166.809 mo
164.918 149.275 li
142.814 166.809 mo
164.918 144.705 li
138.244 166.809 mo
164.918 140.136 li
133.673 166.809 mo
164.918 135.565 li
129.104 166.809 mo
164.918 130.995 li
124.533 166.809 mo
164.918 126.426 li
119.963 166.809 mo
164.918 121.855 li
115.393 166.809 mo
164.918 117.286 li
110.823 166.809 mo
164.918 112.715 li
106.253 166.809 mo
164.918 108.145 li
101.683 166.809 mo
164.918 103.576 li
97.113 166.809 mo
164.918 99.006 li
92.542 166.809 mo
164.918 94.436 li
87.973 166.809 mo
164.918 89.866 li
83.402 166.809 mo
164.918 85.296 li
78.832 166.809 mo
164.918 80.726 li
78.459 162.612 mo
164.918 76.156 li
78.459 158.042 mo
164.918 71.586 li
78.459 153.473 mo
160.722 71.213 li
78.459 148.902 mo
156.151 71.213 li
78.459 144.332 mo
151.581 71.213 li
78.459 139.763 mo
147.011 71.213 li
78.459 135.192 mo
142.441 71.213 li
78.459 130.623 mo
137.871 71.213 li
78.459 126.052 mo
133.301 71.213 li
78.459 121.482 mo
128.73 71.213 li
78.459 116.912 mo
124.161 71.213 li
78.459 112.343 mo
119.59 71.213 li
78.459 107.772 mo
115.02 71.213 li
78.459 103.202 mo
110.45 71.213 li
78.459 98.633 mo
105.88 71.213 li
78.459 94.062 mo
101.309 71.213 li
78.459 89.492 mo
96.74 71.213 li
78.459 84.923 mo
92.17 71.213 li
78.459 80.353 mo
87.6 71.213 li
78.459 75.783 mo
83.029 71.213 li
78.459 71.213 mo
78.459 71.213 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
78.272 166.996 mo
78.272 71.026 li
165.105 166.996 mo
78.272 166.996 li
165.105 71.026 mo
165.105 166.996 li
78.272 71.026 mo
165.105 71.026 li
.694423 .677272 .637385 .738643 cmyk
@
271.617 156.177 mo
273.481 154.311 li
267.048 156.177 mo
273.481 149.742 li
262.477 156.177 mo
273.481 145.171 li
257.906 156.177 mo
273.481 140.601 li
253.337 156.177 mo
273.481 136.032 li
248.767 156.177 mo
273.481 131.462 li
244.195 156.177 mo
273.481 126.891 li
239.626 156.177 mo
273.481 122.321 li
235.056 156.177 mo
273.481 117.752 li
230.486 156.177 mo
273.481 113.181 li
225.916 156.177 mo
273.481 108.611 li
221.345 156.177 mo
273.481 104.042 li
216.775 156.177 mo
273.481 99.472 li
212.206 156.177 mo
273.481 94.902 li
207.635 156.177 mo
273.481 90.332 li
203.064 156.177 mo
269.285 89.959 li
198.495 156.177 mo
264.716 89.959 li
193.925 156.177 mo
260.144 89.959 li
189.354 156.177 mo
255.574 89.959 li
187.023 153.939 mo
251.005 89.959 li
187.023 149.369 mo
246.435 89.959 li
187.023 144.8 mo
241.864 89.959 li
187.023 140.228 mo
237.294 89.959 li
187.023 135.658 mo
232.725 89.959 li
187.023 131.089 mo
228.154 89.959 li
187.023 126.518 mo
223.585 89.959 li
187.023 121.948 mo
219.014 89.959 li
187.023 117.379 mo
214.443 89.959 li
187.023 112.808 mo
209.874 89.959 li
187.023 108.239 mo
205.304 89.959 li
187.023 103.668 mo
200.733 89.959 li
187.023 99.099 mo
196.163 89.959 li
187.023 94.529 mo
191.593 89.959 li
187.023 89.959 mo
187.023 89.959 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
186.837 156.363 mo
186.837 89.773 li
273.668 156.363 mo
186.837 156.363 li
273.668 89.773 mo
273.668 156.363 li
186.837 89.773 mo
273.668 89.773 li
.694423 .677272 .637385 .738643 cmyk
@
160.722 65.057 mo
164.918 69.254 li
156.151 65.057 mo
161.934 70.84 li
151.581 65.057 mo
157.364 70.84 li
147.011 65.057 mo
152.794 70.84 li
142.441 65.057 mo
148.224 70.84 li
137.871 65.057 mo
143.653 70.84 li
133.301 65.057 mo
139.083 70.84 li
128.73 65.057 mo
134.513 70.84 li
124.161 65.057 mo
129.943 70.84 li
119.59 65.057 mo
125.373 70.84 li
115.02 65.057 mo
120.803 70.84 li
110.45 65.057 mo
116.232 70.84 li
105.88 65.057 mo
111.663 70.84 li
101.309 65.057 mo
107.092 70.84 li
96.74 65.057 mo
102.522 70.84 li
92.17 65.057 mo
97.952 70.84 li
87.6 65.057 mo
93.382 70.84 li
83.029 65.057 mo
88.811 70.84 li
78.459 65.057 mo
84.242 70.84 li
78.459 69.627 mo
79.671 70.84 li
78.459 65.057 mo
84.242 70.84 li
.460426 .311955 .994202 .0773327 cmyk
@
78.272 71.026 mo
78.272 64.871 li
165.105 71.026 mo
78.272 71.026 li
165.105 64.871 mo
165.105 71.026 li
78.272 64.871 mo
165.105 64.871 li
.694423 .677272 .637385 .738643 cmyk
@
269.285 83.244 mo
273.481 87.441 li
264.716 83.244 mo
271.057 89.586 li
260.144 83.244 mo
266.487 89.586 li
255.574 83.244 mo
261.917 89.586 li
251.005 83.244 mo
257.347 89.586 li
246.435 83.244 mo
252.776 89.586 li
241.864 83.244 mo
248.207 89.586 li
237.294 83.244 mo
243.637 89.586 li
232.725 83.244 mo
239.065 89.586 li
228.154 83.244 mo
234.496 89.586 li
223.585 83.244 mo
229.926 89.586 li
219.014 83.244 mo
225.356 89.586 li
214.443 83.244 mo
220.785 89.586 li
209.874 83.244 mo
216.216 89.586 li
205.304 83.244 mo
211.645 89.586 li
200.733 83.244 mo
207.076 89.586 li
196.163 83.244 mo
202.506 89.586 li
191.593 83.244 mo
197.935 89.586 li
187.023 83.244 mo
193.365 89.586 li
187.023 87.814 mo
188.795 89.586 li
187.023 83.244 mo
193.365 89.586 li
.460426 .311955 .994202 .0773327 cmyk
@
186.837 89.773 mo
186.837 83.057 li
273.668 89.773 mo
186.837 89.773 li
273.668 83.057 mo
273.668 89.773 li
186.837 83.057 mo
273.668 83.057 li
.694423 .677272 .637385 .738643 cmyk
@
269.285 67.109 mo
273.481 71.306 li
264.716 67.109 mo
273.481 75.876 li
260.144 67.109 mo
273.481 80.446 li
255.574 67.109 mo
271.336 82.871 li
251.005 67.109 mo
266.767 82.871 li
246.435 67.109 mo
262.197 82.871 li
241.864 67.109 mo
257.627 82.871 li
237.294 67.109 mo
253.057 82.871 li
232.725 67.109 mo
248.486 82.871 li
228.154 67.109 mo
243.916 82.871 li
223.585 67.109 mo
239.347 82.871 li
219.014 67.109 mo
234.776 82.871 li
214.443 67.109 mo
230.205 82.871 li
209.874 67.109 mo
225.636 82.871 li
205.304 67.109 mo
221.066 82.871 li
200.733 67.109 mo
216.496 82.871 li
196.163 67.109 mo
211.925 82.871 li
191.593 67.109 mo
207.355 82.871 li
187.023 67.109 mo
202.785 82.871 li
187.023 80.819 mo
189.074 82.871 li
187.023 76.249 mo
193.644 82.871 li
187.023 71.679 mo
198.216 82.871 li
187.023 67.109 mo
202.785 82.871 li
271.804 82.871 mo
273.481 81.192 li
267.232 82.871 mo
273.481 76.622 li
262.663 82.871 mo
273.481 72.052 li
258.093 82.871 mo
273.481 67.482 li
253.523 82.871 mo
269.285 67.109 li
248.952 82.871 mo
264.716 67.109 li
244.382 82.871 mo
260.144 67.109 li
239.812 82.871 mo
255.574 67.109 li
235.243 82.871 mo
251.005 67.109 li
230.672 82.871 mo
246.435 67.109 li
226.102 82.871 mo
241.864 67.109 li
221.532 82.871 mo
237.294 67.109 li
216.962 82.871 mo
232.725 67.109 li
212.393 82.871 mo
228.154 67.109 li
207.821 82.871 mo
223.585 67.109 li
203.251 82.871 mo
219.014 67.109 li
198.682 82.871 mo
214.443 67.109 li
194.112 82.871 mo
209.874 67.109 li
189.541 82.871 mo
205.304 67.109 li
187.023 80.819 mo
200.733 67.109 li
187.023 76.249 mo
196.163 67.109 li
187.023 71.679 mo
191.593 67.109 li
187.023 67.109 mo
187.023 67.109 li
.95346 .916228 .0104982 .0011902 cmyk
@
186.837 83.057 mo
186.837 66.923 li
273.668 83.057 mo
186.837 83.057 li
273.668 66.923 mo
273.668 83.057 li
186.837 66.923 mo
273.668 66.923 li
.694423 .677272 .637385 .738643 cmyk
@
271.896 61.793 mo
271.896 66.737 li
268.633 61.793 mo
268.633 66.737 li
265.368 61.793 mo
265.368 66.737 li
262.103 61.793 mo
262.103 66.737 li
258.839 61.793 mo
258.839 66.737 li
255.574 61.793 mo
255.574 66.737 li
252.31 61.793 mo
252.31 66.737 li
249.046 61.793 mo
249.046 66.737 li
245.782 61.793 mo
245.782 66.737 li
242.518 61.793 mo
242.518 66.737 li
239.252 61.793 mo
239.252 66.737 li
235.988 61.793 mo
235.988 66.737 li
232.725 61.793 mo
232.725 66.737 li
229.46 61.793 mo
229.46 66.737 li
226.195 61.793 mo
226.195 66.737 li
222.932 61.793 mo
222.932 66.737 li
219.667 61.793 mo
219.667 66.737 li
216.402 61.793 mo
216.402 66.737 li
213.139 61.793 mo
213.139 66.737 li
209.874 61.793 mo
209.874 66.737 li
206.609 61.793 mo
206.609 66.737 li
203.345 61.793 mo
203.345 66.737 li
200.08 61.793 mo
200.08 66.737 li
196.816 61.793 mo
196.816 66.737 li
193.552 61.793 mo
193.552 66.737 li
190.287 61.793 mo
190.287 66.737 li
187.023 61.793 mo
187.023 66.737 li
187.023 65.057 mo
273.481 65.057 li
187.023 61.793 mo
273.481 61.793 li
0 0 0 0 cmyk
@
186.837 66.923 mo
186.837 61.607 li
273.668 66.923 mo
186.837 66.923 li
273.668 61.607 mo
273.668 66.923 li
186.837 61.607 mo
273.668 61.607 li
.694423 .677272 .637385 .738643 cmyk
@
163.332 63.378 mo
163.332 64.684 li
160.069 63.378 mo
160.069 64.684 li
156.804 63.378 mo
156.804 64.684 li
153.539 63.378 mo
153.539 64.684 li
150.275 63.378 mo
150.275 64.684 li
147.011 63.378 mo
147.011 64.684 li
143.747 63.378 mo
143.747 64.684 li
140.483 63.378 mo
140.483 64.684 li
137.218 63.378 mo
137.218 64.684 li
133.954 63.378 mo
133.954 64.684 li
130.689 63.378 mo
130.689 64.684 li
127.425 63.378 mo
127.425 64.684 li
124.161 63.378 mo
124.161 64.684 li
120.896 63.378 mo
120.896 64.684 li
117.632 63.378 mo
117.632 64.684 li
114.367 63.378 mo
114.367 64.684 li
111.104 63.378 mo
111.104 64.684 li
107.839 63.378 mo
107.839 64.684 li
104.575 63.378 mo
104.575 64.684 li
101.309 63.378 mo
101.309 64.684 li
98.045 63.378 mo
98.045 64.684 li
94.781 63.378 mo
94.781 64.684 li
91.516 63.378 mo
91.516 64.684 li
88.252 63.378 mo
88.252 64.684 li
84.988 63.378 mo
84.988 64.684 li
81.724 63.378 mo
81.724 64.684 li
78.459 63.378 mo
78.459 64.684 li
.0149538 .94815 .00277714 0 cmyk
@
78.272 64.871 mo
78.272 63.192 li
165.105 64.871 mo
78.272 64.871 li
165.105 63.192 mo
165.105 64.871 li
78.272 63.192 mo
165.105 63.192 li
.694423 .677272 .637385 .738643 cmyk
@
271.896 54.332 mo
271.896 61.42 li
268.633 54.332 mo
268.633 61.42 li
265.368 54.332 mo
265.368 61.42 li
262.103 54.332 mo
262.103 61.42 li
258.839 54.332 mo
258.839 61.42 li
255.574 54.332 mo
255.574 61.42 li
252.31 54.332 mo
252.31 61.42 li
249.046 54.332 mo
249.046 61.42 li
245.782 54.332 mo
245.782 61.42 li
242.518 54.332 mo
242.518 61.42 li
239.252 54.332 mo
239.252 61.42 li
235.988 54.332 mo
235.988 61.42 li
232.725 54.332 mo
232.725 61.42 li
229.46 54.332 mo
229.46 61.42 li
226.195 54.332 mo
226.195 61.42 li
222.932 54.332 mo
222.932 61.42 li
219.667 54.332 mo
219.667 61.42 li
216.402 54.332 mo
216.402 61.42 li
213.139 54.332 mo
213.139 61.42 li
209.874 54.332 mo
209.874 61.42 li
206.609 54.332 mo
206.609 61.42 li
203.345 54.332 mo
203.345 61.42 li
200.08 54.332 mo
200.08 61.42 li
196.816 54.332 mo
196.816 61.42 li
193.552 54.332 mo
193.552 61.42 li
190.287 54.332 mo
190.287 61.42 li
187.023 54.332 mo
187.023 61.42 li
.0149538 .94815 .00277714 0 cmyk
@
186.837 61.607 mo
186.837 54.145 li
273.668 61.607 mo
186.837 61.607 li
273.668 54.145 mo
273.668 61.607 li
186.837 54.145 mo
273.668 54.145 li
.694423 .677272 .637385 .738643 cmyk
@
124.509 184.266 mo
124.509 184.808 124.509 184.266 124.509 184.808 cv
121.464 184.808 124.509 184.808 121.464 184.808 cv
121.46 184.674 121.482 184.542 121.53 184.417 cv
121.607 184.21 121.731 184.005 121.902 183.804 cv
122.073 183.602 122.32 183.371 122.643 183.106 cv
123.143 182.696 123.481 182.37 123.657 182.131 cv
123.833 181.89 123.921 181.664 123.921 181.45 cv
123.921 181.226 123.841 181.037 123.681 180.883 cv
123.52 180.73 123.311 180.652 123.054 180.652 cv
122.782 180.652 122.563 180.734 122.401 180.896 cv
122.237 181.06 122.154 181.287 122.152 181.576 cv
121.571 181.516 122.152 181.576 121.571 181.516 cv
121.61 181.082 121.761 180.753 122.02 180.525 cv
122.28 180.298 122.629 180.183 123.067 180.183 cv
123.509 180.183 123.858 180.306 124.116 180.552 cv
124.374 180.797 124.503 181.1 124.503 181.463 cv
124.503 181.647 124.465 181.829 124.39 182.006 cv
124.314 182.184 124.189 182.372 124.014 182.569 cv
123.839 182.765 123.548 183.036 123.142 183.38 cv
122.803 183.665 122.585 183.857 122.488 183.96 cv
122.391 184.061 122.312 184.164 122.249 184.266 cv
124.509 184.266 122.249 184.266 124.509 184.266 cv
f
230.01 183.594 mo
230.576 183.517 230.01 183.594 230.576 183.517 cv
230.64 183.839 230.751 184.069 230.907 184.211 cv
231.063 184.351 231.253 184.423 231.477 184.423 cv
231.743 184.423 231.969 184.33 232.15 184.146 cv
232.334 183.962 232.427 183.734 232.427 183.462 cv
232.427 183.202 232.341 182.987 232.172 182.819 cv
232.002 182.649 231.786 182.566 231.524 182.566 cv
231.418 182.566 231.284 182.587 231.126 182.629 cv
231.188 182.132 231.126 182.629 231.188 182.132 cv
231.226 182.137 231.256 182.139 231.279 182.139 cv
231.52 182.139 231.736 182.075 231.93 181.95 cv
232.122 181.825 232.219 181.631 232.219 181.369 cv
232.219 181.162 232.148 180.99 232.009 180.853 cv
231.868 180.717 231.686 180.649 231.465 180.649 cv
231.245 180.649 231.061 180.719 230.915 180.856 cv
230.769 180.995 230.673 181.202 230.632 181.478 cv
230.067 181.379 230.632 181.478 230.067 181.379 cv
230.136 180.999 230.293 180.704 230.538 180.496 cv
230.783 180.289 231.088 180.183 231.452 180.183 cv
231.703 180.183 231.935 180.238 232.146 180.346 cv
232.357 180.453 232.519 180.601 232.633 180.787 cv
232.744 180.973 232.8 181.172 232.8 181.382 cv
232.8 181.58 232.747 181.762 232.641 181.925 cv
232.533 182.088 232.375 182.218 232.165 182.314 cv
232.437 182.377 232.649 182.508 232.8 182.706 cv
232.951 182.904 233.026 183.151 233.026 183.449 cv
233.026 183.851 232.88 184.192 232.587 184.472 cv
232.293 184.751 231.923 184.891 231.475 184.891 cv
231.069 184.891 230.734 184.77 230.467 184.529 cv
230.2 184.289 230.048 183.976 230.01 183.594 cv
f
58.225 173.716 mo
58.225 174.801 58.352 175.522 58.606 175.882 cv
58.86 176.241 59.173 176.421 59.546 176.421 cv
59.919 176.421 60.232 176.241 60.486 175.88 cv
60.74 175.518 60.867 174.798 60.867 173.716 cv
60.867 172.628 60.74 171.905 60.486 171.548 cv
60.232 171.189 59.916 171.01 59.537 171.01 cv
59.165 171.01 58.867 171.168 58.645 171.484 cv
58.365 171.887 58.225 172.631 58.225 173.716 cv
cp
57.391 173.716 mo
57.391 172.933 57.471 172.305 57.632 171.828 cv
57.793 171.352 58.032 170.984 58.349 170.726 cv
58.666 170.469 59.065 170.339 59.546 170.339 cv
59.901 170.339 60.212 170.41 60.479 170.553 cv
60.747 170.696 60.968 170.901 61.142 171.17 cv
61.316 171.439 61.453 171.767 61.552 172.153 cv
61.651 172.539 61.701 173.06 61.701 173.716 cv
61.701 174.491 61.622 175.116 61.462 175.594 cv
61.303 176.07 61.064 176.438 60.747 176.698 cv
60.431 176.958 60.03 177.089 59.546 177.089 cv
58.909 177.089 58.408 176.86 58.044 176.402 cv
57.609 175.852 57.391 174.957 57.391 173.716 cv
f
60.448 144.8 mo
59.636 144.8 60.448 144.8 59.636 144.8 cv
59.636 139.628 59.636 144.8 59.636 139.628 cv
59.44 139.813 59.184 140 58.867 140.186 cv
58.55 140.373 58.266 140.514 58.013 140.606 cv
58.013 139.82 58.013 140.606 58.013 139.82 cv
58.467 139.607 58.864 139.349 59.203 139.046 cv
59.543 138.742 59.783 138.448 59.925 138.162 cv
60.448 138.162 59.925 138.162 60.448 138.162 cv
60.448 144.8 60.448 138.162 60.448 144.8 cv
f
61.656 111.842 mo
61.656 112.622 61.656 111.842 61.656 112.622 cv
57.287 112.622 61.656 112.622 57.287 112.622 cv
57.281 112.427 57.313 112.239 57.382 112.058 cv
57.493 111.762 57.671 111.469 57.916 111.179 cv
58.161 110.891 58.515 110.557 58.978 110.18 cv
59.696 109.59 60.182 109.123 60.434 108.778 cv
60.686 108.435 60.813 108.109 60.813 107.804 cv
60.813 107.48 60.698 107.211 60.468 106.989 cv
60.238 106.768 59.938 106.657 59.568 106.657 cv
59.178 106.657 58.865 106.775 58.631 107.009 cv
58.396 107.244 58.277 107.568 58.274 107.982 cv
57.441 107.897 58.274 107.982 57.441 107.897 cv
57.497 107.275 57.712 106.801 58.085 106.474 cv
58.458 106.149 58.958 105.985 59.586 105.985 cv
60.221 105.985 60.723 106.162 61.093 106.514 cv
61.462 106.865 61.647 107.301 61.647 107.821 cv
61.647 108.086 61.593 108.346 61.484 108.6 cv
61.376 108.857 61.197 109.126 60.946 109.408 cv
60.695 109.69 60.278 110.078 59.695 110.57 cv
59.208 110.979 58.895 111.258 58.757 111.402 cv
58.619 111.549 58.505 111.695 58.415 111.842 cv
61.656 111.842 58.415 111.842 61.656 111.842 cv
f
57.395 78.795 mo
58.207 78.686 57.395 78.795 58.207 78.686 cv
58.3 79.146 58.459 79.477 58.683 79.68 cv
58.906 79.884 59.18 79.985 59.501 79.985 cv
59.882 79.985 60.204 79.852 60.468 79.588 cv
60.731 79.323 60.863 78.996 60.863 78.605 cv
60.863 78.232 60.741 77.926 60.497 77.683 cv
60.254 77.441 59.944 77.32 59.568 77.32 cv
59.415 77.32 59.224 77.35 58.996 77.41 cv
59.086 76.698 58.996 77.41 59.086 76.698 cv
59.141 76.704 59.184 76.707 59.217 76.707 cv
59.562 76.707 59.874 76.617 60.15 76.437 cv
60.427 76.256 60.565 75.978 60.565 75.603 cv
60.565 75.305 60.464 75.059 60.263 74.863 cv
60.062 74.668 59.802 74.57 59.483 74.57 cv
59.167 74.57 58.904 74.669 58.693 74.867 cv
58.483 75.066 58.348 75.364 58.288 75.76 cv
57.476 75.616 58.288 75.76 57.476 75.616 cv
57.576 75.072 57.801 74.65 58.152 74.351 cv
58.505 74.053 58.942 73.903 59.465 73.903 cv
59.826 73.903 60.158 73.98 60.461 74.135 cv
60.765 74.29 60.997 74.501 61.158 74.768 cv
61.319 75.036 61.399 75.32 61.399 75.62 cv
61.399 75.906 61.323 76.166 61.169 76.401 cv
61.016 76.635 60.789 76.821 60.488 76.96 cv
60.879 77.05 61.183 77.237 61.399 77.521 cv
61.616 77.805 61.724 78.16 61.724 78.587 cv
61.724 79.164 61.513 79.654 61.093 80.054 cv
60.672 80.456 60.14 80.657 59.496 80.657 cv
58.916 80.657 58.434 80.484 58.051 80.138 cv
57.668 79.792 57.45 79.345 57.395 78.795 cv
f
59.992 46.036 mo
59.992 43.056 59.992 46.036 59.992 43.056 cv
57.923 46.036 59.992 43.056 57.923 46.036 cv
59.992 46.036 57.923 46.036 59.992 46.036 cv
cp
59.992 48.363 mo
59.992 46.78 59.992 48.363 59.992 46.78 cv
57.125 46.78 59.992 46.78 57.125 46.78 cv
57.125 46.036 57.125 46.78 57.125 46.036 cv
60.141 41.753 57.125 46.036 60.141 41.753 cv
60.804 41.753 60.141 41.753 60.804 41.753 cv
60.804 46.036 60.804 41.753 60.804 46.036 cv
61.696 46.036 60.804 46.036 61.696 46.036 cv
61.696 46.78 61.696 46.036 61.696 46.78 cv
60.804 46.78 61.696 46.78 60.804 46.78 cv
60.804 48.363 60.804 46.78 60.804 48.363 cv
59.992 48.363 60.804 48.363 59.992 48.363 cv
f
57.391 14.455 mo
58.243 14.383 57.391 14.455 58.243 14.383 cv
58.306 14.798 58.453 15.11 58.683 15.319 cv
58.912 15.528 59.19 15.632 59.514 15.632 cv
59.905 15.632 60.236 15.485 60.506 15.19 cv
60.777 14.896 60.912 14.505 60.912 14.018 cv
60.912 13.555 60.782 13.19 60.522 12.922 cv
60.262 12.655 59.922 12.521 59.501 12.521 cv
59.239 12.521 59.003 12.58 58.793 12.699 cv
58.582 12.818 58.417 12.972 58.297 13.161 cv
57.535 13.062 58.297 13.161 57.535 13.062 cv
58.176 9.66699 57.535 13.062 58.176 9.66699 cv
61.462 9.66699 58.176 9.66699 61.462 9.66699 cv
61.462 10.443 61.462 9.66699 61.462 10.443 cv
58.825 10.443 61.462 10.443 58.825 10.443 cv
58.469 12.219 58.825 10.443 58.469 12.219 cv
58.865 11.943 59.282 11.805 59.717 11.805 cv
60.294 11.805 60.782 12.004 61.178 12.404 cv
61.575 12.804 61.773 13.318 61.773 13.946 cv
61.773 14.544 61.599 15.061 61.25 15.496 cv
60.826 16.032 60.248 16.299 59.514 16.299 cv
58.913 16.299 58.422 16.131 58.042 15.794 cv
57.662 15.458 57.445 15.012 57.391 14.455 cv
f
gsave
284.814 3.22299 mo
40.581 3.22299 li
40.581 201.784 li
284.814 201.784 li
cp
clp
.653 lw
284.488 174.457 mo
284.488 13.668 li
281.316 13.668 li
284.488 29.71 mo
282.902 29.71 li
284.488 45.845 mo
281.316 45.845 li
284.488 61.886 mo
282.902 61.886 li
284.488 78.021 mo
281.316 78.021 li
284.488 94.062 mo
282.902 94.062 li
284.488 110.104 mo
281.316 110.104 li
284.488 126.238 mo
282.902 126.238 li
284.488 142.281 mo
281.316 142.281 li
284.488 158.416 mo
282.902 158.416 li
284.488 174.457 mo
281.316 174.457 li
67.454 13.668 mo
284.488 13.668 li
284.488 15.254 li
230.205 13.668 mo
230.205 16.839 li
176.017 13.668 mo
176.017 15.254 li
121.735 13.668 mo
121.735 16.839 li
67.454 13.668 mo
67.454 15.254 li
67.454 174.457 mo
67.454 13.668 li
64.282 13.668 mo
67.454 13.668 li
65.868 29.71 mo
67.454 29.71 li
64.282 45.845 mo
67.454 45.845 li
65.868 61.886 mo
67.454 61.886 li
64.282 78.021 mo
67.454 78.021 li
65.868 94.062 mo
67.454 94.062 li
64.282 110.104 mo
67.454 110.104 li
65.868 126.238 mo
67.454 126.238 li
64.282 142.281 mo
67.454 142.281 li
65.868 158.416 mo
67.454 158.416 li
64.282 174.457 mo
284.488 174.457 li
284.488 176.043 mo
284.488 174.457 li
230.205 177.628 mo
230.205 174.457 li
176.017 176.043 mo
176.017 174.457 li
121.735 177.628 mo
121.735 174.457 li
67.454 176.043 mo
67.454 174.457 li
@
grestore
161.747 45.938 mo
235.895 45.938 li
235.895 4.06299 li
161.747 4.06299 li
cp
0 0 0 0 cmyk
f
gsave
284.814 3.22299 mo
40.581 3.22299 li
40.581 201.784 li
284.814 201.784 li
cp
clp
.373 lw
161.747 4.06201 mo
235.895 4.06201 li
235.895 45.937 li
161.747 45.937 li
cp
.694423 .677272 .637385 .738643 cmyk
@
grestore
180.774 17.212 mo
185.064 12.922 li
176.204 17.212 mo
183.572 9.845 li
171.634 17.212 mo
179.002 9.845 li
167.063 17.212 mo
174.432 9.845 li
165.292 14.414 mo
169.862 9.845 li
165.292 9.845 mo
165.292 9.845 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
165.105 17.399 mo
165.105 9.65799 li
185.251 17.399 mo
165.105 17.399 li
185.251 9.65799 mo
185.251 17.399 li
165.105 9.65799 mo
185.251 9.65799 li
.694423 .677272 .637385 .738643 cmyk
@
191.524 14.568 mo
191.375 13.999 191.183 13.602 190.948 13.377 cv
190.713 13.152 190.475 13.039 190.23 13.039 cv
189.96 13.039 189.734 13.188 189.555 13.485 cv
189.376 13.782 189.286 14.255 189.286 14.904 cv
189.286 15.288 189.324 15.59 189.402 15.809 cv
189.479 16.029 189.597 16.199 189.752 16.319 cv
189.908 16.439 190.073 16.499 190.248 16.499 cv
190.461 16.499 190.654 16.402 190.831 16.205 cv
191.071 15.94 191.303 15.394 191.524 14.568 cv
cp
192.025 12.857 mo
192.713 12.857 192.025 12.857 192.713 12.857 cv
192.175 14.742 192.713 12.857 192.175 14.742 cv
192.139 14.861 192.082 15.048 192.005 15.302 cv
192.109 15.727 192.188 15.981 192.241 16.064 cv
192.34 16.216 192.466 16.292 192.618 16.292 cv
192.728 16.292 192.831 16.246 192.925 16.156 cv
193.019 16.064 193.081 15.922 193.111 15.728 cv
193.277 15.728 193.111 15.728 193.277 15.728 cv
193.238 16.126 193.154 16.402 193.025 16.554 cv
192.897 16.705 192.749 16.781 192.58 16.781 cv
192.424 16.781 192.28 16.715 192.151 16.582 cv
192.023 16.45 191.908 16.165 191.806 15.728 cv
191.684 15.969 191.565 16.151 191.449 16.276 cv
191.286 16.447 191.109 16.575 190.919 16.659 cv
190.728 16.743 190.512 16.785 190.269 16.785 cv
189.658 16.785 189.209 16.582 188.921 16.177 cv
188.634 15.77 188.49 15.307 188.49 14.788 cv
188.49 14.18 188.658 13.688 188.996 13.311 cv
189.332 12.933 189.727 12.745 190.181 12.745 cv
190.496 12.745 190.774 12.841 191.015 13.033 cv
191.255 13.225 191.473 13.582 191.669 14.104 cv
192.025 12.857 191.669 14.104 192.025 12.857 cv
f
196.354 15.224 mo
197.157 15.098 196.354 15.224 197.157 15.098 cv
197.201 15.419 197.328 15.665 197.532 15.837 cv
197.738 16.008 198.027 16.094 198.395 16.094 cv
198.769 16.094 199.045 16.018 199.226 15.866 cv
199.406 15.714 199.497 15.536 199.497 15.332 cv
199.497 15.148 199.417 15.004 199.257 14.899 cv
199.146 14.827 198.87 14.735 198.428 14.624 cv
197.833 14.474 197.42 14.344 197.19 14.234 cv
196.961 14.124 196.786 13.972 196.667 13.779 cv
196.549 13.585 196.49 13.371 196.49 13.136 cv
196.49 12.923 196.538 12.725 196.635 12.544 cv
196.733 12.362 196.866 12.211 197.034 12.091 cv
197.161 11.997 197.334 11.918 197.552 11.853 cv
197.769 11.789 198.003 11.757 198.252 11.757 cv
198.628 11.757 198.958 11.811 199.241 11.919 cv
199.526 12.027 199.736 12.174 199.87 12.358 cv
200.006 12.544 200.099 12.79 200.15 13.1 cv
199.356 13.208 200.15 13.1 199.356 13.208 cv
199.321 12.962 199.216 12.769 199.043 12.632 cv
198.871 12.493 198.627 12.424 198.31 12.424 cv
197.937 12.424 197.672 12.486 197.513 12.609 cv
197.353 12.732 197.273 12.876 197.273 13.041 cv
197.273 13.147 197.306 13.241 197.373 13.325 cv
197.439 13.413 197.543 13.485 197.684 13.542 cv
197.766 13.572 198.005 13.641 198.4 13.749 cv
198.975 13.902 199.375 14.028 199.602 14.126 cv
199.829 14.223 200.008 14.366 200.137 14.552 cv
200.266 14.738 200.33 14.97 200.33 15.246 cv
200.33 15.516 200.252 15.771 200.094 16.011 cv
199.936 16.249 199.709 16.434 199.41 16.565 cv
199.113 16.696 198.776 16.761 198.4 16.761 cv
197.779 16.761 197.304 16.632 196.978 16.373 cv
196.652 16.115 196.443 15.731 196.354 15.224 cv
f
203.113 15.927 mo
203.231 16.644 203.113 15.927 203.231 16.644 cv
203.003 16.692 202.798 16.716 202.617 16.716 cv
202.324 16.716 202.095 16.669 201.933 16.576 cv
201.77 16.483 201.656 16.36 201.59 16.209 cv
201.523 16.057 201.491 15.737 201.491 15.251 cv
201.491 12.496 201.491 15.251 201.491 12.496 cv
200.895 12.496 201.491 12.496 200.895 12.496 cv
200.895 11.865 200.895 12.496 200.895 11.865 cv
201.491 11.865 200.895 11.865 201.491 11.865 cv
201.491 10.68 201.491 11.865 201.491 10.68 cv
202.298 10.192 201.491 10.68 202.298 10.192 cv
202.298 11.865 202.298 10.192 202.298 11.865 cv
203.113 11.865 202.298 11.865 203.113 11.865 cv
203.113 12.496 203.113 11.865 203.113 12.496 cv
202.298 12.496 203.113 12.496 202.298 12.496 cv
202.298 15.296 202.298 12.496 202.298 15.296 cv
202.298 15.528 202.312 15.676 202.341 15.742 cv
202.369 15.808 202.416 15.861 202.479 15.9 cv
202.545 15.939 202.637 15.959 202.758 15.959 cv
202.848 15.959 202.967 15.948 203.113 15.927 cv
f
203.944 16.653 mo
203.944 11.865 203.944 16.653 203.944 11.865 cv
204.676 11.865 203.944 11.865 204.676 11.865 cv
204.676 12.591 204.676 11.865 204.676 12.591 cv
204.861 12.251 205.032 12.027 205.191 11.919 cv
205.349 11.811 205.522 11.757 205.711 11.757 cv
205.985 11.757 206.263 11.844 206.545 12.018 cv
206.267 12.771 206.545 12.018 206.267 12.771 cv
206.067 12.654 205.869 12.595 205.671 12.595 cv
205.493 12.595 205.335 12.649 205.193 12.756 cv
205.052 12.862 204.951 13.01 204.892 13.2 cv
204.801 13.488 204.756 13.804 204.756 14.146 cv
204.756 16.653 204.756 14.146 204.756 16.653 cv
203.944 16.653 204.756 16.653 203.944 16.653 cv
f
207.036 16.653 mo
207.036 11.865 207.036 16.653 207.036 11.865 cv
207.847 11.865 207.036 11.865 207.847 11.865 cv
207.847 16.653 207.847 11.865 207.847 16.653 cv
207.036 16.653 207.847 16.653 207.036 16.653 cv
cp
207.036 10.976 mo
207.036 10.044 207.036 10.976 207.036 10.044 cv
207.847 10.044 207.036 10.044 207.847 10.044 cv
207.847 10.976 207.847 10.044 207.847 10.976 cv
207.036 10.976 207.847 10.976 207.036 10.976 cv
f
209.818 14.286 mo
209.818 14.902 209.942 15.357 210.192 15.652 cv
210.441 15.946 210.744 16.094 211.1 16.094 cv
211.459 16.094 211.769 15.941 212.025 15.636 cv
212.282 15.331 212.411 14.858 212.411 14.218 cv
212.411 13.608 212.285 13.151 212.034 12.848 cv
211.783 12.544 211.482 12.392 211.135 12.392 cv
210.789 12.392 210.483 12.554 210.217 12.877 cv
209.95 13.2 209.818 13.67 209.818 14.286 cv
cp
209.083 18.488 mo
209.083 11.865 209.083 18.488 209.083 11.865 cv
209.823 11.865 209.083 11.865 209.823 11.865 cv
209.823 12.487 209.823 11.865 209.823 12.487 cv
209.996 12.243 210.193 12.061 210.413 11.939 cv
210.632 11.817 210.899 11.757 211.211 11.757 cv
211.62 11.757 211.981 11.862 212.293 12.072 cv
212.605 12.283 212.842 12.579 213.001 12.963 cv
213.16 13.346 213.239 13.766 213.239 14.222 cv
213.239 14.713 213.152 15.154 212.977 15.546 cv
212.8 15.938 212.545 16.239 212.21 16.448 cv
211.874 16.657 211.521 16.761 211.152 16.761 cv
210.881 16.761 210.639 16.704 210.424 16.59 cv
210.209 16.475 210.033 16.331 209.894 16.157 cv
209.894 18.488 209.894 16.157 209.894 18.488 cv
209.083 18.488 209.894 18.488 209.083 18.488 cv
f
214.947 14.286 mo
214.947 14.902 215.072 15.357 215.322 15.652 cv
215.571 15.946 215.874 16.094 216.227 16.094 cv
216.589 16.094 216.896 15.941 217.155 15.636 cv
217.412 15.331 217.54 14.858 217.54 14.218 cv
217.54 13.608 217.415 13.151 217.164 12.848 cv
216.912 12.544 216.612 12.392 216.264 12.392 cv
215.919 12.392 215.612 12.554 215.347 12.877 cv
215.08 13.2 214.947 13.67 214.947 14.286 cv
cp
214.213 18.488 mo
214.213 11.865 214.213 18.488 214.213 11.865 cv
214.952 11.865 214.213 11.865 214.952 11.865 cv
214.952 12.487 214.952 11.865 214.952 12.487 cv
215.126 12.243 215.323 12.061 215.543 11.939 cv
215.762 11.817 216.028 11.757 216.341 11.757 cv
216.75 11.757 217.109 11.862 217.423 12.072 cv
217.735 12.283 217.971 12.579 218.131 12.963 cv
218.29 13.346 218.369 13.766 218.369 14.222 cv
218.369 14.713 218.282 15.154 218.105 15.546 cv
217.93 15.938 217.675 16.239 217.34 16.448 cv
217.004 16.657 216.651 16.761 216.282 16.761 cv
216.011 16.761 215.769 16.704 215.554 16.59 cv
215.339 16.475 215.162 16.331 215.024 16.157 cv
215.024 18.488 215.024 16.157 215.024 18.488 cv
214.213 18.488 215.024 18.488 214.213 18.488 cv
f
219.347 16.653 mo
219.347 11.865 219.347 16.653 219.347 11.865 cv
220.158 11.865 219.347 11.865 220.158 11.865 cv
220.158 16.653 220.158 11.865 220.158 16.653 cv
219.347 16.653 220.158 16.653 219.347 16.653 cv
cp
219.347 10.976 mo
219.347 10.044 219.347 10.976 219.347 10.044 cv
220.158 10.044 219.347 10.044 220.158 10.044 cv
220.158 10.976 220.158 10.044 220.158 10.976 cv
219.347 10.976 220.158 10.976 219.347 10.976 cv
f
221.394 16.653 mo
221.394 11.865 221.394 16.653 221.394 11.865 cv
222.125 11.865 221.394 11.865 222.125 11.865 cv
222.125 12.546 222.125 11.865 222.125 12.546 cv
222.476 12.019 222.985 11.757 223.648 11.757 cv
223.936 11.757 224.201 11.808 224.444 11.912 cv
224.686 12.016 224.867 12.152 224.987 12.32 cv
225.108 12.488 225.191 12.688 225.239 12.92 cv
225.269 13.07 225.285 13.333 225.285 13.709 cv
225.285 16.653 225.285 13.709 225.285 16.653 cv
224.474 16.653 225.285 16.653 224.474 16.653 cv
224.474 13.741 224.474 16.653 224.474 13.741 cv
224.474 13.409 224.443 13.163 224.379 12.999 cv
224.316 12.835 224.203 12.704 224.044 12.606 cv
223.882 12.509 223.693 12.46 223.477 12.46 cv
223.131 12.46 222.833 12.57 222.583 12.789 cv
222.332 13.009 222.206 13.425 222.206 14.038 cv
222.206 16.653 222.206 14.038 222.206 16.653 cv
221.394 16.653 222.206 16.653 221.394 16.653 cv
f
227.047 14.173 mo
227.047 14.802 227.172 15.26 227.421 15.548 cv
227.67 15.837 227.983 15.981 228.359 15.981 cv
228.731 15.981 229.044 15.837 229.297 15.551 cv
229.549 15.263 229.676 14.813 229.676 14.2 cv
229.676 13.614 229.545 13.173 229.285 12.875 cv
229.025 12.577 228.712 12.429 228.346 12.429 cv
227.984 12.429 227.679 12.575 227.425 12.868 cv
227.173 13.161 227.047 13.596 227.047 14.173 cv
cp
226.375 17.05 mo
227.164 17.167 226.375 17.05 227.164 17.167 cv
227.197 17.41 227.289 17.588 227.439 17.699 cv
227.641 17.849 227.916 17.924 228.264 17.924 cv
228.64 17.924 228.93 17.849 229.134 17.699 cv
229.339 17.548 229.477 17.338 229.549 17.068 cv
229.591 16.902 229.611 16.555 229.608 16.026 cv
229.254 16.444 228.811 16.653 228.282 16.653 cv
227.624 16.653 227.114 16.415 226.754 15.94 cv
226.394 15.466 226.213 14.896 226.213 14.232 cv
226.213 13.775 226.295 13.353 226.461 12.967 cv
226.627 12.581 226.866 12.283 227.18 12.072 cv
227.494 11.862 227.862 11.757 228.286 11.757 cv
228.852 11.757 229.317 11.985 229.685 12.442 cv
229.685 11.865 229.685 12.442 229.685 11.865 cv
230.433 11.865 229.685 11.865 230.433 11.865 cv
230.433 16.004 230.433 11.865 230.433 16.004 cv
230.433 16.749 230.356 17.277 230.205 17.589 cv
230.054 17.899 229.812 18.145 229.483 18.325 cv
229.154 18.506 228.75 18.596 228.269 18.596 cv
227.698 18.596 227.236 18.468 226.885 18.211 cv
226.533 17.953 226.362 17.566 226.375 17.05 cv
f
183.572 21.222 mo
185.064 22.715 li
179.002 21.222 mo
185.064 27.285 li
174.432 21.222 mo
181.8 28.591 li
169.862 21.222 mo
177.229 28.591 li
165.292 21.222 mo
172.66 28.591 li
165.292 25.793 mo
168.09 28.591 li
165.292 21.222 mo
172.66 28.591 li
180.774 28.591 mo
185.064 24.301 li
176.204 28.591 mo
183.572 21.222 li
171.634 28.591 mo
179.002 21.222 li
167.063 28.591 mo
174.432 21.222 li
165.292 25.793 mo
169.862 21.222 li
165.292 21.222 mo
165.292 21.222 li
.95346 .916228 .0104982 .0011902 cmyk
@
165.105 28.777 mo
165.105 21.036 li
185.251 28.777 mo
165.105 28.777 li
185.251 21.036 mo
185.251 28.777 li
165.105 21.036 mo
185.251 21.036 li
.694423 .677272 .637385 .738643 cmyk
@
191.583 28.031 mo
190.77 28.031 191.583 28.031 190.77 28.031 cv
190.77 22.86 190.77 28.031 190.77 22.86 cv
190.575 23.046 190.318 23.233 190.001 23.419 cv
189.685 23.606 189.4 23.745 189.147 23.839 cv
189.147 23.054 189.147 23.839 189.147 23.054 cv
189.602 22.841 189.998 22.582 190.338 22.278 cv
190.678 21.975 190.919 21.68 191.059 21.395 cv
191.583 21.395 191.059 21.395 191.583 21.395 cv
191.583 28.031 191.583 21.395 191.583 28.031 cv
f
193.88 28.031 mo
193.88 23.243 193.88 28.031 193.88 23.243 cv
194.611 23.243 193.88 23.243 194.611 23.243 cv
194.611 23.924 194.611 23.243 194.611 23.924 cv
194.963 23.398 195.471 23.135 196.135 23.135 cv
196.423 23.135 196.689 23.187 196.932 23.29 cv
197.173 23.394 197.353 23.53 197.474 23.699 cv
197.595 23.867 197.679 24.067 197.726 24.298 cv
197.756 24.448 197.771 24.712 197.771 25.087 cv
197.771 28.031 197.771 25.087 197.771 28.031 cv
196.96 28.031 197.771 28.031 196.96 28.031 cv
196.96 25.119 196.96 28.031 196.96 25.119 cv
196.96 24.788 196.929 24.54 196.864 24.377 cv
196.802 24.213 196.69 24.082 196.529 23.985 cv
196.368 23.887 196.18 23.839 195.963 23.839 cv
195.618 23.839 195.319 23.948 195.068 24.167 cv
194.817 24.387 194.691 24.804 194.691 25.416 cv
194.691 28.031 194.691 25.416 194.691 28.031 cv
193.88 28.031 194.691 28.031 193.88 28.031 cv
f
202.356 25.664 mo
202.356 26.28 202.48 26.736 202.731 27.03 cv
202.98 27.325 203.282 27.472 203.638 27.472 cv
203.998 27.472 204.307 27.32 204.563 27.014 cv
204.82 26.71 204.949 26.237 204.949 25.596 cv
204.949 24.986 204.823 24.53 204.572 24.226 cv
204.321 23.923 204.022 23.771 203.673 23.771 cv
203.327 23.771 203.021 23.932 202.756 24.255 cv
202.49 24.578 202.356 25.048 202.356 25.664 cv
cp
201.621 29.866 mo
201.621 23.243 201.621 29.866 201.621 23.243 cv
202.361 23.243 201.621 23.243 202.361 23.243 cv
202.361 23.866 202.361 23.243 202.361 23.866 cv
202.536 23.622 202.732 23.439 202.952 23.318 cv
203.171 23.196 203.437 23.135 203.749 23.135 cv
204.158 23.135 204.519 23.24 204.831 23.45 cv
205.144 23.661 205.38 23.958 205.54 24.341 cv
205.698 24.724 205.778 25.144 205.778 25.601 cv
205.778 26.091 205.69 26.532 205.516 26.925 cv
205.339 27.316 205.084 27.617 204.748 27.826 cv
204.413 28.035 204.061 28.139 203.69 28.139 cv
203.42 28.139 203.179 28.082 202.963 27.968 cv
202.748 27.854 202.571 27.71 202.433 27.535 cv
202.433 29.866 202.433 27.535 202.433 29.866 cv
201.621 29.866 202.433 29.866 201.621 29.866 cv
f
206.755 28.031 mo
206.755 23.243 206.755 28.031 206.755 23.243 cv
207.567 23.243 206.755 23.243 207.567 23.243 cv
207.567 28.031 207.567 23.243 207.567 28.031 cv
206.755 28.031 207.567 28.031 206.755 28.031 cv
cp
206.755 22.355 mo
206.755 21.422 206.755 22.355 206.755 21.422 cv
207.567 21.422 206.755 21.422 207.567 21.422 cv
207.567 22.355 207.567 21.422 207.567 22.355 cv
206.755 22.355 207.567 22.355 206.755 22.355 cv
f
211.928 26.277 mo
212.726 26.381 211.928 26.277 212.726 26.381 cv
212.639 26.931 212.416 27.362 212.057 27.672 cv
211.696 27.984 211.256 28.139 210.733 28.139 cv
210.078 28.139 209.551 27.925 209.152 27.497 cv
208.755 27.069 208.556 26.455 208.556 25.655 cv
208.556 25.138 208.641 24.686 208.812 24.298 cv
208.984 23.91 209.244 23.62 209.594 23.426 cv
209.944 23.232 210.326 23.135 210.737 23.135 cv
211.257 23.135 211.683 23.266 212.014 23.53 cv
212.344 23.792 212.556 24.166 212.649 24.65 cv
211.86 24.771 212.649 24.65 211.86 24.771 cv
211.785 24.45 211.652 24.208 211.461 24.046 cv
211.269 23.883 211.039 23.802 210.769 23.802 cv
210.359 23.802 210.028 23.949 209.772 24.242 cv
209.517 24.534 209.39 24.998 209.39 25.633 cv
209.39 26.276 209.513 26.743 209.759 27.035 cv
210.006 27.326 210.327 27.472 210.724 27.472 cv
211.042 27.472 211.309 27.374 211.521 27.179 cv
211.735 26.984 211.87 26.683 211.928 26.277 cv
f
213.472 28.031 mo
213.472 21.422 213.472 28.031 213.472 21.422 cv
214.282 21.422 213.472 21.422 214.282 21.422 cv
214.282 25.191 214.282 21.422 214.282 25.191 cv
216.203 23.243 214.282 25.191 216.203 23.243 cv
217.253 23.243 216.203 23.243 217.253 23.243 cv
215.424 25.02 217.253 23.243 215.424 25.02 cv
217.438 28.031 215.424 25.02 217.438 28.031 cv
216.437 28.031 217.438 28.031 216.437 28.031 cv
214.855 25.583 216.437 28.031 214.855 25.583 cv
214.282 26.133 214.855 25.583 214.282 26.133 cv
214.282 28.031 214.282 26.133 214.282 28.031 cv
213.472 28.031 214.282 28.031 213.472 28.031 cv
f
217.814 26.047 mo
217.814 25.231 217.814 26.047 217.814 25.231 cv
220.308 25.231 217.814 25.231 220.308 25.231 cv
220.308 26.047 220.308 25.231 220.308 26.047 cv
217.814 26.047 220.308 26.047 217.814 26.047 cv
f
224.346 28.031 mo
224.346 27.328 224.346 28.031 224.346 27.328 cv
223.973 27.869 223.467 28.139 222.826 28.139 cv
222.544 28.139 222.279 28.085 222.034 27.977 cv
221.79 27.869 221.608 27.733 221.49 27.569 cv
221.37 27.406 221.287 27.204 221.239 26.967 cv
221.206 26.807 221.189 26.555 221.189 26.21 cv
221.189 23.243 221.189 26.21 221.189 23.243 cv
222.001 23.243 221.189 23.243 222.001 23.243 cv
222.001 25.899 222.001 23.243 222.001 25.899 cv
222.001 26.323 222.018 26.608 222.05 26.755 cv
222.102 26.969 222.21 27.136 222.376 27.258 cv
222.541 27.38 222.745 27.44 222.988 27.44 cv
223.232 27.44 223.46 27.378 223.674 27.254 cv
223.887 27.128 224.039 26.959 224.127 26.744 cv
224.215 26.529 224.261 26.218 224.261 25.808 cv
224.261 23.243 224.261 25.808 224.261 23.243 cv
225.071 23.243 224.261 23.243 225.071 23.243 cv
225.071 28.031 225.071 23.243 225.071 28.031 cv
224.346 28.031 225.071 28.031 224.346 28.031 cv
f
227.072 25.664 mo
227.072 26.28 227.197 26.736 227.446 27.03 cv
227.696 27.325 227.998 27.472 228.353 27.472 cv
228.713 27.472 229.022 27.32 229.279 27.014 cv
229.536 26.71 229.665 26.237 229.665 25.596 cv
229.665 24.986 229.539 24.53 229.288 24.226 cv
229.037 23.923 228.736 23.771 228.389 23.771 cv
228.043 23.771 227.737 23.932 227.472 24.255 cv
227.205 24.578 227.072 25.048 227.072 25.664 cv
cp
226.337 29.866 mo
226.337 23.243 226.337 29.866 226.337 23.243 cv
227.077 23.243 226.337 23.243 227.077 23.243 cv
227.077 23.866 227.077 23.243 227.077 23.866 cv
227.251 23.622 227.447 23.439 227.668 23.318 cv
227.887 23.196 228.153 23.135 228.465 23.135 cv
228.874 23.135 229.235 23.24 229.547 23.45 cv
229.86 23.661 230.096 23.958 230.256 24.341 cv
230.414 24.724 230.494 25.144 230.494 25.601 cv
230.494 26.091 230.406 26.532 230.23 26.925 cv
230.055 27.316 229.799 27.617 229.464 27.826 cv
229.128 28.035 228.776 28.139 228.406 28.139 cv
228.137 28.139 227.894 28.082 227.679 27.968 cv
227.464 27.854 227.287 27.71 227.149 27.535 cv
227.149 29.866 227.149 27.535 227.149 29.866 cv
226.337 29.866 227.149 29.866 226.337 29.866 cv
f
184.878 32.601 mo
184.878 39.969 li
181.613 32.601 mo
181.613 39.969 li
178.349 32.601 mo
178.349 39.969 li
175.084 32.601 mo
175.084 39.969 li
171.82 32.601 mo
171.82 39.969 li
168.557 32.601 mo
168.557 39.969 li
165.292 32.601 mo
165.292 39.969 li
165.292 39.13 mo
185.064 39.13 li
165.292 35.866 mo
185.064 35.866 li
165.292 32.601 mo
185.064 32.601 li
0 0 0 0 cmyk
@
165.105 40.155 mo
165.105 32.415 li
185.251 40.155 mo
165.105 40.155 li
185.251 32.415 mo
185.251 40.155 li
165.105 32.415 mo
185.251 32.415 li
.694423 .677272 .637385 .738643 cmyk
@
192.79 38.629 mo
192.79 39.41 192.79 38.629 192.79 39.41 cv
188.421 39.41 192.79 39.41 188.421 39.41 cv
188.416 39.214 188.447 39.026 188.517 38.846 cv
188.628 38.549 188.806 38.256 189.051 37.967 cv
189.295 37.678 189.649 37.345 190.112 36.966 cv
190.831 36.377 191.316 35.91 191.568 35.566 cv
191.821 35.222 191.947 34.897 191.947 34.59 cv
191.947 34.268 191.832 33.997 191.602 33.776 cv
191.372 33.555 191.072 33.445 190.703 33.445 cv
190.312 33.445 189.999 33.562 189.765 33.796 cv
189.53 34.031 189.412 34.356 189.409 34.77 cv
188.575 34.685 189.409 34.77 188.575 34.685 cv
188.632 34.062 188.847 33.588 189.22 33.262 cv
189.593 32.936 190.093 32.773 190.721 32.773 cv
191.355 32.773 191.857 32.949 192.227 33.301 cv
192.598 33.652 192.781 34.088 192.781 34.608 cv
192.781 34.872 192.727 35.133 192.619 35.388 cv
192.511 35.643 192.331 35.912 192.081 36.195 cv
191.83 36.477 191.412 36.866 190.829 37.358 cv
190.342 37.767 190.03 38.044 189.892 38.19 cv
189.753 38.336 189.639 38.482 189.549 38.629 cv
192.79 38.629 189.549 38.629 192.79 38.629 cv
f
193.88 39.41 mo
193.88 34.621 193.88 39.41 193.88 34.621 cv
194.611 34.621 193.88 34.621 194.611 34.621 cv
194.611 35.302 194.611 34.621 194.611 35.302 cv
194.963 34.776 195.471 34.513 196.135 34.513 cv
196.423 34.513 196.689 34.565 196.932 34.669 cv
197.173 34.772 197.353 34.908 197.474 35.076 cv
197.595 35.245 197.679 35.445 197.726 35.677 cv
197.756 35.827 197.771 36.09 197.771 36.466 cv
197.771 39.41 197.771 36.466 197.771 39.41 cv
196.96 39.41 197.771 39.41 196.96 39.41 cv
196.96 36.497 196.96 39.41 196.96 36.497 cv
196.96 36.166 196.929 35.919 196.864 35.756 cv
196.802 35.592 196.69 35.461 196.529 35.363 cv
196.368 35.265 196.18 35.217 195.963 35.217 cv
195.618 35.217 195.319 35.326 195.068 35.546 cv
194.817 35.765 194.691 36.181 194.691 36.794 cv
194.691 39.41 194.691 36.794 194.691 39.41 cv
193.88 39.41 194.691 39.41 193.88 39.41 cv
f
202.356 37.043 mo
202.356 37.658 202.48 38.114 202.731 38.408 cv
202.98 38.703 203.282 38.85 203.638 38.85 cv
203.998 38.85 204.307 38.698 204.563 38.392 cv
204.82 38.088 204.949 37.615 204.949 36.975 cv
204.949 36.365 204.823 35.908 204.572 35.604 cv
204.321 35.301 204.022 35.149 203.673 35.149 cv
203.327 35.149 203.021 35.31 202.756 35.634 cv
202.49 35.957 202.356 36.427 202.356 37.043 cv
cp
201.621 41.244 mo
201.621 34.621 201.621 41.244 201.621 34.621 cv
202.361 34.621 201.621 34.621 202.361 34.621 cv
202.361 35.244 202.361 34.621 202.361 35.244 cv
202.536 35 202.732 34.818 202.952 34.696 cv
203.171 34.574 203.437 34.513 203.749 34.513 cv
204.158 34.513 204.519 34.618 204.831 34.829 cv
205.144 35.039 205.38 35.336 205.54 35.719 cv
205.698 36.103 205.778 36.523 205.778 36.979 cv
205.778 37.47 205.69 37.91 205.516 38.303 cv
205.339 38.695 205.084 38.995 204.748 39.204 cv
204.413 39.413 204.061 39.518 203.69 39.518 cv
203.42 39.518 203.179 39.461 202.963 39.346 cv
202.748 39.232 202.571 39.088 202.433 38.913 cv
202.433 41.244 202.433 38.913 202.433 41.244 cv
201.621 41.244 202.433 41.244 201.621 41.244 cv
f
206.755 39.41 mo
206.755 34.621 206.755 39.41 206.755 34.621 cv
207.567 34.621 206.755 34.621 207.567 34.621 cv
207.567 39.41 207.567 34.621 207.567 39.41 cv
206.755 39.41 207.567 39.41 206.755 39.41 cv
cp
206.755 33.734 mo
206.755 32.8 206.755 33.734 206.755 32.8 cv
207.567 32.8 206.755 32.8 207.567 32.8 cv
207.567 33.734 207.567 32.8 207.567 33.734 cv
206.755 33.734 207.567 33.734 206.755 33.734 cv
f
211.928 37.656 mo
212.726 37.759 211.928 37.656 212.726 37.759 cv
212.639 38.309 212.416 38.74 212.057 39.051 cv
211.696 39.362 211.256 39.518 210.733 39.518 cv
210.078 39.518 209.551 39.304 209.152 38.875 cv
208.755 38.447 208.556 37.833 208.556 37.033 cv
208.556 36.517 208.641 36.064 208.812 35.677 cv
208.984 35.288 209.244 34.998 209.594 34.804 cv
209.944 34.611 210.326 34.513 210.737 34.513 cv
211.257 34.513 211.683 34.645 212.014 34.908 cv
212.344 35.171 212.556 35.544 212.649 36.028 cv
211.86 36.15 212.649 36.028 211.86 36.15 cv
211.785 35.828 211.652 35.586 211.461 35.424 cv
211.269 35.262 211.039 35.18 210.769 35.18 cv
210.359 35.18 210.028 35.327 209.772 35.62 cv
209.517 35.913 209.39 36.377 209.39 37.011 cv
209.39 37.654 209.513 38.122 209.759 38.413 cv
210.006 38.705 210.327 38.85 210.724 38.85 cv
211.042 38.85 211.309 38.753 211.521 38.557 cv
211.735 38.362 211.87 38.062 211.928 37.656 cv
f
213.472 39.41 mo
213.472 32.8 213.472 39.41 213.472 32.8 cv
214.282 32.8 213.472 32.8 214.282 32.8 cv
214.282 36.569 214.282 32.8 214.282 36.569 cv
216.203 34.621 214.282 36.569 216.203 34.621 cv
217.253 34.621 216.203 34.621 217.253 34.621 cv
215.424 36.398 217.253 34.621 215.424 36.398 cv
217.438 39.41 215.424 36.398 217.438 39.41 cv
216.437 39.41 217.438 39.41 216.437 39.41 cv
214.855 36.962 216.437 39.41 214.855 36.962 cv
214.282 37.512 214.855 36.962 214.282 37.512 cv
214.282 39.41 214.282 37.512 214.282 39.41 cv
213.472 39.41 214.282 39.41 213.472 39.41 cv
f
217.814 37.426 mo
217.814 36.61 217.814 37.426 217.814 36.61 cv
220.308 36.61 217.814 36.61 220.308 36.61 cv
220.308 37.426 220.308 36.61 220.308 37.426 cv
217.814 37.426 220.308 37.426 217.814 37.426 cv
f
224.346 39.41 mo
224.346 38.706 224.346 39.41 224.346 38.706 cv
223.973 39.247 223.467 39.518 222.826 39.518 cv
222.544 39.518 222.279 39.464 222.034 39.355 cv
221.79 39.247 221.608 39.111 221.49 38.947 cv
221.37 38.783 221.287 38.583 221.239 38.346 cv
221.206 38.186 221.189 37.934 221.189 37.588 cv
221.189 34.621 221.189 37.588 221.189 34.621 cv
222.001 34.621 221.189 34.621 222.001 34.621 cv
222.001 37.277 222.001 34.621 222.001 37.277 cv
222.001 37.701 222.018 37.986 222.05 38.134 cv
222.102 38.347 222.21 38.514 222.376 38.636 cv
222.541 38.758 222.745 38.819 222.988 38.819 cv
223.232 38.819 223.46 38.756 223.674 38.632 cv
223.887 38.507 224.039 38.338 224.127 38.122 cv
224.215 37.908 224.261 37.596 224.261 37.187 cv
224.261 34.621 224.261 37.187 224.261 34.621 cv
225.071 34.621 224.261 34.621 225.071 34.621 cv
225.071 39.41 225.071 34.621 225.071 39.41 cv
224.346 39.41 225.071 39.41 224.346 39.41 cv
f
227.072 37.043 mo
227.072 37.658 227.197 38.114 227.446 38.408 cv
227.696 38.703 227.998 38.85 228.353 38.85 cv
228.713 38.85 229.022 38.698 229.279 38.392 cv
229.536 38.088 229.665 37.615 229.665 36.975 cv
229.665 36.365 229.539 35.908 229.288 35.604 cv
229.037 35.301 228.736 35.149 228.389 35.149 cv
228.043 35.149 227.737 35.31 227.472 35.634 cv
227.205 35.957 227.072 36.427 227.072 37.043 cv
cp
226.337 41.244 mo
226.337 34.621 226.337 41.244 226.337 34.621 cv
227.077 34.621 226.337 34.621 227.077 34.621 cv
227.077 35.244 227.077 34.621 227.077 35.244 cv
227.251 35 227.447 34.818 227.668 34.696 cv
227.887 34.574 228.153 34.513 228.465 34.513 cv
228.874 34.513 229.235 34.618 229.547 34.829 cv
229.86 35.039 230.096 35.336 230.256 35.719 cv
230.414 36.103 230.494 36.523 230.494 36.979 cv
230.494 37.47 230.406 37.91 230.23 38.303 cv
230.055 38.695 229.799 38.995 229.464 39.204 cv
229.128 39.413 228.776 39.518 228.406 39.518 cv
228.137 39.518 227.894 39.461 227.679 39.346 cv
227.464 39.232 227.287 39.088 227.149 38.913 cv
227.149 41.244 227.149 38.913 227.149 41.244 cv
226.337 41.244 227.149 41.244 226.337 41.244 cv
f
74.355 46.405 mo
159.509 46.405 li
159.509 3.41 li
74.355 3.41 li
cp
0 0 0 0 cmyk
f
gsave
284.814 3.22299 mo
40.581 3.22299 li
40.581 201.784 li
284.814 201.784 li
cp
clp
.373 lw
74.355 3.409 mo
159.509 3.409 li
159.509 46.404 li
74.355 46.404 li
cp
.694423 .677272 .637385 .738643 cmyk
@
grestore
77.62 17.305 mo
97.765 17.305 li
97.765 9.5643 li
77.62 9.5643 li
cp
.694423 .677272 .637385 .738643 cmyk
f
77.62 9.565 mo
97.765 9.565 li
97.765 17.3057 li
77.62 17.3057 li
cp
@
104.097 16.559 mo
103.286 16.559 104.097 16.559 103.286 16.559 cv
103.286 11.388 103.286 16.559 103.286 11.388 cv
103.09 11.575 102.834 11.762 102.517 11.947 cv
102.2 12.134 101.915 12.273 101.662 12.367 cv
101.662 11.582 101.662 12.367 101.662 11.582 cv
102.116 11.369 102.513 11.11 102.853 10.807 cv
103.192 10.503 103.433 10.209 103.574 9.923 cv
104.097 9.923 103.574 9.923 104.097 9.923 cv
104.097 16.559 104.097 9.923 104.097 16.559 cv
f
107.13 14.193 mo
107.13 14.809 107.255 15.264 107.504 15.559 cv
107.754 15.853 108.056 16.001 108.411 16.001 cv
108.771 16.001 109.08 15.847 109.337 15.543 cv
109.594 15.238 109.723 14.765 109.723 14.125 cv
109.723 13.515 109.598 13.058 109.346 12.755 cv
109.095 12.451 108.795 12.299 108.447 12.299 cv
108.101 12.299 107.795 12.461 107.529 12.784 cv
107.263 13.107 107.13 13.576 107.13 14.193 cv
cp
106.395 18.394 mo
106.395 11.772 106.395 18.394 106.395 11.772 cv
107.135 11.772 106.395 11.772 107.135 11.772 cv
107.135 12.394 107.135 11.772 107.135 12.394 cv
107.309 12.15 107.506 11.968 107.725 11.846 cv
107.945 11.724 108.211 11.663 108.523 11.663 cv
108.932 11.663 109.293 11.768 109.605 11.979 cv
109.918 12.189 110.154 12.486 110.313 12.869 cv
110.473 13.253 110.552 13.673 110.552 14.13 cv
110.552 14.619 110.464 15.06 110.288 15.453 cv
110.112 15.846 109.857 16.145 109.522 16.354 cv
109.187 16.563 108.834 16.668 108.465 16.668 cv
108.194 16.668 107.952 16.611 107.736 16.497 cv
107.521 16.383 107.345 16.238 107.206 16.063 cv
107.206 18.394 107.206 16.063 107.206 18.394 cv
106.395 18.394 107.206 18.394 106.395 18.394 cv
f
113.812 15.131 mo
114.614 15.004 113.812 15.131 114.614 15.004 cv
114.66 15.326 114.785 15.572 114.991 15.744 cv
115.197 15.914 115.484 16.001 115.854 16.001 cv
116.227 16.001 116.503 15.925 116.684 15.773 cv
116.864 15.621 116.954 15.443 116.954 15.239 cv
116.954 15.055 116.874 14.911 116.715 14.806 cv
116.604 14.734 116.328 14.642 115.886 14.531 cv
115.29 14.38 114.878 14.251 114.648 14.141 cv
114.418 14.032 114.244 13.879 114.125 13.685 cv
114.007 13.492 113.947 13.278 113.947 13.043 cv
113.947 12.829 113.996 12.632 114.093 12.45 cv
114.191 12.268 114.324 12.117 114.493 11.997 cv
114.619 11.904 114.791 11.825 115.009 11.761 cv
115.227 11.696 115.46 11.663 115.71 11.663 cv
116.086 11.663 116.415 11.718 116.7 11.825 cv
116.983 11.934 117.193 12.081 117.328 12.265 cv
117.464 12.45 117.557 12.698 117.608 13.007 cv
116.815 13.115 117.608 13.007 116.815 13.115 cv
116.778 12.868 116.674 12.676 116.501 12.538 cv
116.329 12.399 116.084 12.331 115.768 12.331 cv
115.395 12.331 115.13 12.392 114.971 12.515 cv
114.811 12.639 114.731 12.783 114.731 12.949 cv
114.731 13.054 114.765 13.148 114.831 13.232 cv
114.897 13.32 115.001 13.392 115.141 13.449 cv
115.223 13.478 115.462 13.548 115.859 13.656 cv
116.433 13.809 116.833 13.935 117.06 14.033 cv
117.287 14.131 117.465 14.272 117.595 14.459 cv
117.724 14.645 117.788 14.877 117.788 15.153 cv
117.788 15.424 117.709 15.678 117.551 15.917 cv
117.394 16.156 117.166 16.341 116.869 16.471 cv
116.571 16.603 116.234 16.668 115.859 16.668 cv
115.237 16.668 114.763 16.538 114.436 16.28 cv
114.11 16.021 113.902 15.638 113.812 15.131 cv
f
120.572 15.833 mo
120.689 16.551 120.572 15.833 120.689 16.551 cv
120.461 16.598 120.256 16.623 120.076 16.623 cv
119.781 16.623 119.553 16.576 119.391 16.483 cv
119.228 16.39 119.114 16.267 119.047 16.116 cv
118.982 15.964 118.948 15.644 118.948 15.157 cv
118.948 12.403 118.948 15.157 118.948 12.403 cv
118.354 12.403 118.948 12.403 118.354 12.403 cv
118.354 11.772 118.354 12.403 118.354 11.772 cv
118.948 11.772 118.354 11.772 118.948 11.772 cv
118.948 10.586 118.948 11.772 118.948 10.586 cv
119.756 10.099 118.948 10.586 119.756 10.099 cv
119.756 11.772 119.756 10.099 119.756 11.772 cv
120.572 11.772 119.756 11.772 120.572 11.772 cv
120.572 12.403 120.572 11.772 120.572 12.403 cv
119.756 12.403 120.572 12.403 119.756 12.403 cv
119.756 15.203 119.756 12.403 119.756 15.203 cv
119.756 15.434 119.77 15.583 119.798 15.649 cv
119.827 15.715 119.873 15.768 119.938 15.806 cv
120.002 15.846 120.095 15.866 120.215 15.866 cv
120.306 15.866 120.424 15.855 120.572 15.833 cv
f
121.402 16.559 mo
121.402 11.772 121.402 16.559 121.402 11.772 cv
122.133 11.772 121.402 11.772 122.133 11.772 cv
122.133 12.497 122.133 11.772 122.133 12.497 cv
122.319 12.158 122.491 11.934 122.649 11.825 cv
122.807 11.718 122.98 11.663 123.17 11.663 cv
123.443 11.663 123.721 11.75 124.003 11.925 cv
123.724 12.678 124.003 11.925 123.724 12.678 cv
123.526 12.56 123.327 12.502 123.129 12.502 cv
122.952 12.502 122.792 12.555 122.651 12.662 cv
122.51 12.769 122.409 12.917 122.349 13.106 cv
122.259 13.395 122.214 13.71 122.214 14.053 cv
122.214 16.559 122.214 14.053 122.214 16.559 cv
121.402 16.559 122.214 16.559 121.402 16.559 cv
f
124.494 16.559 mo
124.494 11.772 124.494 16.559 124.494 11.772 cv
125.305 11.772 124.494 11.772 125.305 11.772 cv
125.305 16.559 125.305 11.772 125.305 16.559 cv
124.494 16.559 125.305 16.559 124.494 16.559 cv
cp
124.494 10.883 mo
124.494 9.95001 124.494 10.883 124.494 9.95001 cv
125.305 9.95001 124.494 9.95001 125.305 9.95001 cv
125.305 10.883 125.305 9.95001 125.305 10.883 cv
124.494 10.883 125.305 10.883 124.494 10.883 cv
f
127.276 14.193 mo
127.276 14.809 127.4 15.264 127.65 15.559 cv
127.9 15.853 128.201 16.001 128.557 16.001 cv
128.917 16.001 129.225 15.847 129.483 15.543 cv
129.74 15.238 129.868 14.765 129.868 14.125 cv
129.868 13.515 129.743 13.058 129.492 12.755 cv
129.241 12.451 128.941 12.299 128.592 12.299 cv
128.246 12.299 127.941 12.461 127.675 12.784 cv
127.409 13.107 127.276 13.576 127.276 14.193 cv
cp
126.54 18.394 mo
126.54 11.772 126.54 18.394 126.54 11.772 cv
127.28 11.772 126.54 11.772 127.28 11.772 cv
127.28 12.394 127.28 11.772 127.28 12.394 cv
127.455 12.15 127.651 11.968 127.871 11.846 cv
128.09 11.724 128.356 11.663 128.669 11.663 cv
129.078 11.663 129.438 11.768 129.751 11.979 cv
130.063 12.189 130.3 12.486 130.458 12.869 cv
130.618 13.253 130.698 13.673 130.698 14.13 cv
130.698 14.619 130.61 15.06 130.434 15.453 cv
130.258 15.846 130.002 16.145 129.667 16.354 cv
129.333 16.563 128.98 16.668 128.61 16.668 cv
128.34 16.668 128.098 16.611 127.882 16.497 cv
127.668 16.383 127.491 16.238 127.352 16.063 cv
127.352 18.394 127.352 16.063 127.352 18.394 cv
126.54 18.394 127.352 18.394 126.54 18.394 cv
f
132.406 14.193 mo
132.406 14.809 132.53 15.264 132.78 15.559 cv
133.029 15.853 133.331 16.001 133.686 16.001 cv
134.046 16.001 134.355 15.847 134.612 15.543 cv
134.869 15.238 134.998 14.765 134.998 14.125 cv
134.998 13.515 134.872 13.058 134.621 12.755 cv
134.371 12.451 134.071 12.299 133.722 12.299 cv
133.376 12.299 133.071 12.461 132.804 12.784 cv
132.538 13.107 132.406 13.576 132.406 14.193 cv
cp
131.67 18.394 mo
131.67 11.772 131.67 18.394 131.67 11.772 cv
132.41 11.772 131.67 11.772 132.41 11.772 cv
132.41 12.394 132.41 11.772 132.41 12.394 cv
132.584 12.15 132.781 11.968 133 11.846 cv
133.22 11.724 133.486 11.663 133.799 11.663 cv
134.208 11.663 134.568 11.768 134.881 11.979 cv
135.193 12.189 135.43 12.486 135.588 12.869 cv
135.748 13.253 135.827 13.673 135.827 14.13 cv
135.827 14.619 135.739 15.06 135.564 15.453 cv
135.388 15.846 135.132 16.145 134.797 16.354 cv
134.462 16.563 134.109 16.668 133.74 16.668 cv
133.469 16.668 133.227 16.611 133.012 16.497 cv
132.797 16.383 132.621 16.238 132.482 16.063 cv
132.482 18.394 132.482 16.063 132.482 18.394 cv
131.67 18.394 132.482 18.394 131.67 18.394 cv
f
136.805 16.559 mo
136.805 11.772 136.805 16.559 136.805 11.772 cv
137.616 11.772 136.805 11.772 137.616 11.772 cv
137.616 16.559 137.616 11.772 137.616 16.559 cv
136.805 16.559 137.616 16.559 136.805 16.559 cv
cp
136.805 10.883 mo
136.805 9.95001 136.805 10.883 136.805 9.95001 cv
137.616 9.95001 136.805 9.95001 137.616 9.95001 cv
137.616 10.883 137.616 9.95001 137.616 10.883 cv
136.805 10.883 137.616 10.883 136.805 10.883 cv
f
138.852 16.559 mo
138.852 11.772 138.852 16.559 138.852 11.772 cv
139.582 11.772 138.852 11.772 139.582 11.772 cv
139.582 12.452 139.582 11.772 139.582 12.452 cv
139.934 11.927 140.442 11.663 141.106 11.663 cv
141.395 11.663 141.66 11.715 141.902 11.819 cv
142.144 11.923 142.325 12.058 142.446 12.227 cv
142.566 12.395 142.65 12.595 142.698 12.827 cv
142.727 12.977 142.743 13.24 142.743 13.616 cv
142.743 16.559 142.743 13.616 142.743 16.559 cv
141.932 16.559 142.743 16.559 141.932 16.559 cv
141.932 13.647 141.932 16.559 141.932 13.647 cv
141.932 13.317 141.9 13.07 141.837 12.906 cv
141.774 12.742 141.662 12.611 141.501 12.513 cv
141.34 12.415 141.152 12.367 140.935 12.367 cv
140.59 12.367 140.291 12.476 140.04 12.696 cv
139.789 12.915 139.663 13.331 139.663 13.945 cv
139.663 16.559 139.663 13.945 139.663 16.559 cv
138.852 16.559 139.663 16.559 138.852 16.559 cv
f
144.505 14.08 mo
144.505 14.708 144.629 15.166 144.879 15.455 cv
145.128 15.744 145.441 15.888 145.817 15.888 cv
146.19 15.888 146.502 15.744 146.755 15.457 cv
147.007 15.17 147.133 14.72 147.133 14.107 cv
147.133 13.521 147.003 13.079 146.744 12.782 cv
146.483 12.484 146.17 12.335 145.803 12.335 cv
145.443 12.335 145.136 12.482 144.884 12.775 cv
144.631 13.068 144.505 13.503 144.505 14.08 cv
cp
143.833 16.956 mo
144.622 17.074 143.833 16.956 144.622 17.074 cv
144.655 17.317 144.747 17.494 144.897 17.606 cv
145.099 17.756 145.373 17.831 145.722 17.831 cv
146.098 17.831 146.388 17.756 146.592 17.606 cv
146.796 17.455 146.935 17.245 147.007 16.974 cv
147.049 16.809 147.069 16.462 147.066 15.933 cv
146.711 16.35 146.269 16.559 145.74 16.559 cv
145.081 16.559 144.573 16.322 144.211 15.847 cv
143.851 15.372 143.67 14.803 143.67 14.138 cv
143.67 13.681 143.753 13.26 143.919 12.874 cv
144.084 12.487 144.323 12.189 144.638 11.979 cv
144.952 11.768 145.321 11.663 145.745 11.663 cv
146.31 11.663 146.775 11.892 147.143 12.348 cv
147.143 11.772 147.143 12.348 147.143 11.772 cv
147.891 11.772 147.143 11.772 147.891 11.772 cv
147.891 15.91 147.891 11.772 147.891 15.91 cv
147.891 16.656 147.815 17.184 147.663 17.495 cv
147.511 17.806 147.271 18.052 146.942 18.232 cv
146.613 18.412 146.207 18.502 145.727 18.502 cv
145.156 18.502 144.694 18.374 144.343 18.117 cv
143.991 17.86 143.821 17.473 143.833 16.956 cv
f
97.393 21.13 mo
97.393 28.497 li
94.128 21.13 mo
94.128 28.497 li
90.864 21.13 mo
90.864 28.497 li
87.6 21.13 mo
87.6 28.497 li
84.335 21.13 mo
84.335 28.497 li
81.071 21.13 mo
81.071 28.497 li
77.806 21.13 mo
77.806 28.497 li
.0149538 .94815 .00277714 0 cmyk
@
77.62 28.684 mo
77.62 20.943 li
97.766 28.684 mo
77.62 28.684 li
97.766 20.943 mo
97.766 28.684 li
77.62 20.943 mo
97.766 20.943 li
.694423 .677272 .637385 .738643 cmyk
@
105.305 27.158 mo
105.305 27.938 105.305 27.158 105.305 27.938 cv
100.936 27.938 105.305 27.938 100.936 27.938 cv
100.931 27.742 100.962 27.554 101.031 27.374 cv
101.143 27.077 101.321 26.783 101.566 26.495 cv
101.81 26.207 102.164 25.873 102.627 25.494 cv
103.345 24.906 103.831 24.438 104.083 24.095 cv
104.336 23.75 104.462 23.425 104.462 23.118 cv
104.462 22.797 104.348 22.526 104.117 22.305 cv
103.887 22.084 103.588 21.973 103.218 21.973 cv
102.827 21.973 102.515 22.091 102.28 22.325 cv
102.045 22.559 101.927 22.884 101.924 23.299 cv
101.089 23.213 101.924 23.299 101.089 23.213 cv
101.147 22.591 101.362 22.117 101.734 21.791 cv
102.107 21.465 102.608 21.301 103.236 21.301 cv
103.87 21.301 104.372 21.477 104.742 21.829 cv
105.111 22.18 105.296 22.617 105.296 23.137 cv
105.296 23.401 105.242 23.66 105.134 23.916 cv
105.026 24.172 104.846 24.441 104.595 24.723 cv
104.344 25.006 103.927 25.393 103.344 25.887 cv
102.857 26.296 102.544 26.573 102.407 26.719 cv
102.268 26.864 102.154 27.011 102.063 27.158 cv
105.305 27.158 102.063 27.158 105.305 27.158 cv
f
107.13 25.571 mo
107.13 26.187 107.255 26.642 107.504 26.937 cv
107.754 27.231 108.056 27.379 108.411 27.379 cv
108.771 27.379 109.08 27.226 109.337 26.921 cv
109.594 26.617 109.723 26.143 109.723 25.503 cv
109.723 24.893 109.598 24.436 109.346 24.133 cv
109.095 23.829 108.795 23.678 108.447 23.678 cv
108.101 23.678 107.795 23.839 107.529 24.162 cv
107.263 24.485 107.13 24.954 107.13 25.571 cv
cp
106.395 29.773 mo
106.395 23.15 106.395 29.773 106.395 23.15 cv
107.135 23.15 106.395 23.15 107.135 23.15 cv
107.135 23.772 107.135 23.15 107.135 23.772 cv
107.309 23.529 107.506 23.346 107.725 23.224 cv
107.945 23.102 108.211 23.041 108.523 23.041 cv
108.932 23.041 109.293 23.147 109.605 23.357 cv
109.918 23.568 110.154 23.865 110.313 24.248 cv
110.473 24.631 110.552 25.051 110.552 25.508 cv
110.552 25.997 110.464 26.439 110.288 26.831 cv
110.112 27.223 109.857 27.524 109.522 27.733 cv
109.187 27.942 108.834 28.046 108.465 28.046 cv
108.194 28.046 107.952 27.989 107.736 27.874 cv
107.521 27.761 107.345 27.617 107.206 27.442 cv
107.206 29.773 107.206 27.442 107.206 29.773 cv
106.395 29.773 107.206 29.773 106.395 29.773 cv
f
113.812 26.509 mo
114.614 26.382 113.812 26.509 114.614 26.382 cv
114.66 26.704 114.785 26.951 114.991 27.121 cv
115.197 27.293 115.484 27.379 115.854 27.379 cv
116.227 27.379 116.503 27.303 116.684 27.151 cv
116.864 26.999 116.954 26.821 116.954 26.617 cv
116.954 26.434 116.874 26.289 116.715 26.184 cv
116.604 26.112 116.328 26.02 115.886 25.909 cv
115.29 25.759 114.878 25.629 114.648 25.519 cv
114.418 25.409 114.244 25.258 114.125 25.064 cv
114.007 24.87 113.947 24.656 113.947 24.421 cv
113.947 24.208 113.996 24.01 114.093 23.828 cv
114.191 23.646 114.324 23.496 114.493 23.376 cv
114.619 23.283 114.791 23.203 115.009 23.138 cv
115.227 23.074 115.46 23.041 115.71 23.041 cv
116.086 23.041 116.415 23.096 116.7 23.204 cv
116.983 23.312 117.193 23.458 117.328 23.644 cv
117.464 23.828 117.557 24.075 117.608 24.385 cv
116.815 24.493 117.608 24.385 116.815 24.493 cv
116.778 24.247 116.674 24.055 116.501 23.916 cv
116.329 23.778 116.084 23.709 115.768 23.709 cv
115.395 23.709 115.13 23.771 114.971 23.894 cv
114.811 24.017 114.731 24.161 114.731 24.326 cv
114.731 24.431 114.765 24.527 114.831 24.611 cv
114.897 24.698 115.001 24.77 115.141 24.827 cv
115.223 24.857 115.462 24.926 115.859 25.034 cv
116.433 25.188 116.833 25.313 117.06 25.411 cv
117.287 25.509 117.465 25.651 117.595 25.837 cv
117.724 26.023 117.788 26.255 117.788 26.532 cv
117.788 26.802 117.709 27.057 117.551 27.295 cv
117.394 27.534 117.166 27.719 116.869 27.85 cv
116.571 27.98 116.234 28.046 115.859 28.046 cv
115.237 28.046 114.763 27.917 114.436 27.658 cv
114.11 27.4 113.902 27.016 113.812 26.509 cv
f
120.572 27.212 mo
120.689 27.929 120.572 27.212 120.689 27.929 cv
120.461 27.977 120.256 28.001 120.076 28.001 cv
119.781 28.001 119.553 27.954 119.391 27.861 cv
119.228 27.768 119.114 27.646 119.047 27.494 cv
118.982 27.342 118.948 27.023 118.948 26.536 cv
118.948 23.781 118.948 26.536 118.948 23.781 cv
118.354 23.781 118.948 23.781 118.354 23.781 cv
118.354 23.15 118.354 23.781 118.354 23.15 cv
118.948 23.15 118.354 23.15 118.948 23.15 cv
118.948 21.964 118.948 23.15 118.948 21.964 cv
119.756 21.477 118.948 21.964 119.756 21.477 cv
119.756 23.15 119.756 21.477 119.756 23.15 cv
120.572 23.15 119.756 23.15 120.572 23.15 cv
120.572 23.781 120.572 23.15 120.572 23.781 cv
119.756 23.781 120.572 23.781 119.756 23.781 cv
119.756 26.58 119.756 23.781 119.756 26.58 cv
119.756 26.812 119.77 26.961 119.798 27.027 cv
119.827 27.093 119.873 27.146 119.938 27.185 cv
120.002 27.224 120.095 27.243 120.215 27.243 cv
120.306 27.243 120.424 27.233 120.572 27.212 cv
f
121.402 27.938 mo
121.402 23.15 121.402 27.938 121.402 23.15 cv
122.133 23.15 121.402 23.15 122.133 23.15 cv
122.133 23.876 122.133 23.15 122.133 23.876 cv
122.319 23.536 122.491 23.312 122.649 23.204 cv
122.807 23.096 122.98 23.041 123.17 23.041 cv
123.443 23.041 123.721 23.129 124.003 23.304 cv
123.724 24.056 124.003 23.304 123.724 24.056 cv
123.526 23.939 123.327 23.88 123.129 23.88 cv
122.952 23.88 122.792 23.934 122.651 24.04 cv
122.51 24.147 122.409 24.295 122.349 24.485 cv
122.259 24.773 122.214 25.088 122.214 25.431 cv
122.214 27.938 122.214 25.431 122.214 27.938 cv
121.402 27.938 122.214 27.938 121.402 27.938 cv
f
124.494 27.938 mo
124.494 23.15 124.494 27.938 124.494 23.15 cv
125.305 23.15 124.494 23.15 125.305 23.15 cv
125.305 27.938 125.305 23.15 125.305 27.938 cv
124.494 27.938 125.305 27.938 124.494 27.938 cv
cp
124.494 22.262 mo
124.494 21.328 124.494 22.262 124.494 21.328 cv
125.305 21.328 124.494 21.328 125.305 21.328 cv
125.305 22.262 125.305 21.328 125.305 22.262 cv
124.494 22.262 125.305 22.262 124.494 22.262 cv
f
127.276 25.571 mo
127.276 26.187 127.4 26.642 127.65 26.937 cv
127.9 27.231 128.201 27.379 128.557 27.379 cv
128.917 27.379 129.225 27.226 129.483 26.921 cv
129.74 26.617 129.868 26.143 129.868 25.503 cv
129.868 24.893 129.743 24.436 129.492 24.133 cv
129.241 23.829 128.941 23.678 128.592 23.678 cv
128.246 23.678 127.941 23.839 127.675 24.162 cv
127.409 24.485 127.276 24.954 127.276 25.571 cv
cp
126.54 29.773 mo
126.54 23.15 126.54 29.773 126.54 23.15 cv
127.28 23.15 126.54 23.15 127.28 23.15 cv
127.28 23.772 127.28 23.15 127.28 23.772 cv
127.455 23.529 127.651 23.346 127.871 23.224 cv
128.09 23.102 128.356 23.041 128.669 23.041 cv
129.078 23.041 129.438 23.147 129.751 23.357 cv
130.063 23.568 130.3 23.865 130.458 24.248 cv
130.618 24.631 130.698 25.051 130.698 25.508 cv
130.698 25.997 130.61 26.439 130.434 26.831 cv
130.258 27.223 130.002 27.524 129.667 27.733 cv
129.333 27.942 128.98 28.046 128.61 28.046 cv
128.34 28.046 128.098 27.989 127.882 27.874 cv
127.668 27.761 127.491 27.617 127.352 27.442 cv
127.352 29.773 127.352 27.442 127.352 29.773 cv
126.54 29.773 127.352 29.773 126.54 29.773 cv
f
132.406 25.571 mo
132.406 26.187 132.53 26.642 132.78 26.937 cv
133.029 27.231 133.331 27.379 133.686 27.379 cv
134.046 27.379 134.355 27.226 134.612 26.921 cv
134.869 26.617 134.998 26.143 134.998 25.503 cv
134.998 24.893 134.872 24.436 134.621 24.133 cv
134.371 23.829 134.071 23.678 133.722 23.678 cv
133.376 23.678 133.071 23.839 132.804 24.162 cv
132.538 24.485 132.406 24.954 132.406 25.571 cv
cp
131.67 29.773 mo
131.67 23.15 131.67 29.773 131.67 23.15 cv
132.41 23.15 131.67 23.15 132.41 23.15 cv
132.41 23.772 132.41 23.15 132.41 23.772 cv
132.584 23.529 132.781 23.346 133 23.224 cv
133.22 23.102 133.486 23.041 133.799 23.041 cv
134.208 23.041 134.568 23.147 134.881 23.357 cv
135.193 23.568 135.43 23.865 135.588 24.248 cv
135.748 24.631 135.827 25.051 135.827 25.508 cv
135.827 25.997 135.739 26.439 135.564 26.831 cv
135.388 27.223 135.132 27.524 134.797 27.733 cv
134.462 27.942 134.109 28.046 133.74 28.046 cv
133.469 28.046 133.227 27.989 133.012 27.874 cv
132.797 27.761 132.621 27.617 132.482 27.442 cv
132.482 29.773 132.482 27.442 132.482 29.773 cv
131.67 29.773 132.482 29.773 131.67 29.773 cv
f
136.805 27.938 mo
136.805 23.15 136.805 27.938 136.805 23.15 cv
137.616 23.15 136.805 23.15 137.616 23.15 cv
137.616 27.938 137.616 23.15 137.616 27.938 cv
136.805 27.938 137.616 27.938 136.805 27.938 cv
cp
136.805 22.262 mo
136.805 21.328 136.805 22.262 136.805 21.328 cv
137.616 21.328 136.805 21.328 137.616 21.328 cv
137.616 22.262 137.616 21.328 137.616 22.262 cv
136.805 22.262 137.616 22.262 136.805 22.262 cv
f
138.852 27.938 mo
138.852 23.15 138.852 27.938 138.852 23.15 cv
139.582 23.15 138.852 23.15 139.582 23.15 cv
139.582 23.831 139.582 23.15 139.582 23.831 cv
139.934 23.304 140.442 23.041 141.106 23.041 cv
141.395 23.041 141.66 23.094 141.902 23.197 cv
142.144 23.301 142.325 23.437 142.446 23.606 cv
142.566 23.773 142.65 23.973 142.698 24.205 cv
142.727 24.355 142.743 24.618 142.743 24.994 cv
142.743 27.938 142.743 24.994 142.743 27.938 cv
141.932 27.938 142.743 27.938 141.932 27.938 cv
141.932 25.026 141.932 27.938 141.932 25.026 cv
141.932 24.695 141.9 24.447 141.837 24.283 cv
141.774 24.119 141.662 23.989 141.501 23.891 cv
141.34 23.794 141.152 23.745 140.935 23.745 cv
140.59 23.745 140.291 23.855 140.04 24.075 cv
139.789 24.293 139.663 24.71 139.663 25.323 cv
139.663 27.938 139.663 25.323 139.663 27.938 cv
138.852 27.938 139.663 27.938 138.852 27.938 cv
f
144.505 25.458 mo
144.505 26.087 144.629 26.545 144.879 26.833 cv
145.128 27.121 145.441 27.266 145.817 27.266 cv
146.19 27.266 146.502 27.122 146.755 26.836 cv
147.007 26.549 147.133 26.098 147.133 25.485 cv
147.133 24.899 147.003 24.457 146.744 24.16 cv
146.483 23.862 146.17 23.714 145.803 23.714 cv
145.443 23.714 145.136 23.86 144.884 24.153 cv
144.631 24.446 144.505 24.882 144.505 25.458 cv
cp
143.833 28.335 mo
144.622 28.452 143.833 28.335 144.622 28.452 cv
144.655 28.695 144.747 28.873 144.897 28.984 cv
145.099 29.134 145.373 29.209 145.722 29.209 cv
146.098 29.209 146.388 29.134 146.592 28.984 cv
146.796 28.833 146.935 28.623 147.007 28.353 cv
147.049 28.187 147.069 27.84 147.066 27.311 cv
146.711 27.729 146.269 27.938 145.74 27.938 cv
145.081 27.938 144.573 27.7 144.211 27.225 cv
143.851 26.751 143.67 26.181 143.67 25.517 cv
143.67 25.06 143.753 24.638 143.919 24.252 cv
144.084 23.866 144.323 23.568 144.638 23.357 cv
144.952 23.147 145.321 23.041 145.745 23.041 cv
146.31 23.041 146.775 23.27 147.143 23.727 cv
147.143 23.15 147.143 23.727 147.143 23.15 cv
147.891 23.15 147.143 23.15 147.891 23.15 cv
147.891 27.289 147.891 23.15 147.891 27.289 cv
147.891 28.034 147.815 28.563 147.663 28.873 cv
147.511 29.184 147.271 29.43 146.942 29.61 cv
146.613 29.791 146.207 29.881 145.727 29.881 cv
145.156 29.881 144.694 29.752 144.343 29.495 cv
143.991 29.239 143.821 28.851 143.833 28.335 cv
f
96.087 32.508 mo
97.579 34 li
91.516 32.508 mo
97.579 38.57 li
86.947 32.508 mo
94.314 39.876 li
82.377 32.508 mo
89.745 39.876 li
77.806 32.508 mo
85.175 39.876 li
77.806 37.078 mo
80.604 39.876 li
77.806 32.508 mo
85.175 39.876 li
.460426 .311955 .994202 .0773327 cmyk
@
77.62 40.062 mo
77.62 32.322 li
97.766 40.062 mo
77.62 40.062 li
97.766 32.322 mo
97.766 40.062 li
77.62 32.322 mo
97.766 32.322 li
.694423 .677272 .637385 .738643 cmyk
@
101.072 37.193 mo
101.896 37.12 101.072 37.193 101.896 37.12 cv
101.936 37.451 102.027 37.722 102.17 37.934 cv
102.312 38.146 102.534 38.318 102.835 38.449 cv
103.135 38.579 103.474 38.644 103.849 38.644 cv
104.183 38.644 104.477 38.595 104.733 38.496 cv
104.988 38.396 105.178 38.261 105.303 38.087 cv
105.428 37.915 105.49 37.726 105.49 37.522 cv
105.49 37.314 105.43 37.133 105.31 36.979 cv
105.189 36.824 104.991 36.694 104.715 36.589 cv
104.537 36.519 104.145 36.412 103.537 36.266 cv
102.931 36.12 102.505 35.983 102.262 35.853 cv
101.946 35.688 101.711 35.483 101.557 35.239 cv
101.402 34.993 101.325 34.719 101.325 34.415 cv
101.325 34.082 101.419 33.77 101.608 33.48 cv
101.798 33.19 102.074 32.97 102.438 32.82 cv
102.802 32.669 103.206 32.594 103.65 32.594 cv
104.141 32.594 104.573 32.673 104.947 32.83 cv
105.321 32.989 105.608 33.221 105.81 33.528 cv
106.012 33.834 106.12 34.181 106.135 34.569 cv
105.296 34.632 106.135 34.569 105.296 34.632 cv
105.251 34.214 105.099 33.898 104.839 33.685 cv
104.579 33.471 104.194 33.365 103.687 33.365 cv
103.158 33.365 102.772 33.462 102.53 33.656 cv
102.288 33.85 102.167 34.083 102.167 34.357 cv
102.167 34.595 102.253 34.79 102.424 34.943 cv
102.592 35.096 103.032 35.253 103.743 35.414 cv
104.454 35.575 104.941 35.716 105.207 35.836 cv
105.591 36.013 105.875 36.238 106.058 36.51 cv
106.241 36.782 106.333 37.095 106.333 37.45 cv
106.333 37.802 106.232 38.133 106.031 38.444 cv
105.83 38.755 105.54 38.997 105.163 39.169 cv
104.786 39.343 104.362 39.429 103.889 39.429 cv
103.291 39.429 102.79 39.342 102.386 39.167 cv
101.982 38.993 101.665 38.731 101.435 38.381 cv
101.205 38.031 101.083 37.635 101.072 37.193 cv
f
109.193 38.59 mo
109.311 39.307 109.193 38.59 109.311 39.307 cv
109.082 39.355 108.877 39.379 108.697 39.379 cv
108.402 39.379 108.174 39.333 108.012 39.24 cv
107.849 39.146 107.735 39.024 107.669 38.872 cv
107.603 38.72 107.57 38.401 107.57 37.914 cv
107.57 35.159 107.57 37.914 107.57 35.159 cv
106.975 35.159 107.57 35.159 106.975 35.159 cv
106.975 34.528 106.975 35.159 106.975 34.528 cv
107.57 34.528 106.975 34.528 107.57 34.528 cv
107.57 33.343 107.57 34.528 107.57 33.343 cv
108.377 32.856 107.57 33.343 108.377 32.856 cv
108.377 34.528 108.377 32.856 108.377 34.528 cv
109.193 34.528 108.377 34.528 109.193 34.528 cv
109.193 35.159 109.193 34.528 109.193 35.159 cv
108.377 35.159 109.193 35.159 108.377 35.159 cv
108.377 37.959 108.377 35.159 108.377 37.959 cv
108.377 38.19 108.391 38.34 108.42 38.406 cv
108.449 38.472 108.495 38.524 108.56 38.564 cv
108.624 38.602 108.716 38.622 108.837 38.622 cv
108.927 38.622 109.045 38.612 109.193 38.59 cv
f
110.023 39.317 mo
110.023 34.528 110.023 39.317 110.023 34.528 cv
110.754 34.528 110.023 34.528 110.754 34.528 cv
110.754 35.254 110.754 34.528 110.754 35.254 cv
110.94 34.915 111.113 34.691 111.27 34.582 cv
111.428 34.474 111.601 34.42 111.791 34.42 cv
112.064 34.42 112.343 34.507 112.625 34.682 cv
112.345 35.435 112.625 34.682 112.345 35.435 cv
112.147 35.317 111.949 35.259 111.75 35.259 cv
111.573 35.259 111.413 35.312 111.272 35.418 cv
111.131 35.525 111.031 35.674 110.97 35.863 cv
110.88 36.151 110.835 36.467 110.835 36.809 cv
110.835 39.317 110.835 36.809 110.835 39.317 cv
110.023 39.317 110.835 39.317 110.023 39.317 cv
f
113.115 39.317 mo
113.115 34.528 113.115 39.317 113.115 34.528 cv
113.927 34.528 113.115 34.528 113.927 34.528 cv
113.927 39.317 113.927 34.528 113.927 39.317 cv
113.115 39.317 113.927 39.317 113.115 39.317 cv
cp
113.115 33.64 mo
113.115 32.707 113.115 33.64 113.115 32.707 cv
113.927 32.707 113.115 32.707 113.927 32.707 cv
113.927 33.64 113.927 32.707 113.927 33.64 cv
113.115 33.64 113.927 33.64 113.115 33.64 cv
f
115.897 36.95 mo
115.897 37.565 116.022 38.021 116.272 38.315 cv
116.521 38.61 116.823 38.757 117.178 38.757 cv
117.538 38.757 117.847 38.604 118.104 38.3 cv
118.361 37.994 118.489 37.522 118.489 36.882 cv
118.489 36.271 118.364 35.814 118.113 35.511 cv
117.862 35.208 117.562 35.055 117.213 35.055 cv
116.868 35.055 116.562 35.218 116.296 35.541 cv
116.03 35.864 115.897 36.333 115.897 36.95 cv
cp
115.162 41.151 mo
115.162 34.528 115.162 41.151 115.162 34.528 cv
115.901 34.528 115.162 34.528 115.901 34.528 cv
115.901 35.151 115.901 34.528 115.901 35.151 cv
116.076 34.907 116.273 34.724 116.493 34.602 cv
116.712 34.481 116.977 34.42 117.29 34.42 cv
117.699 34.42 118.059 34.525 118.372 34.736 cv
118.685 34.946 118.921 35.243 119.08 35.626 cv
119.24 36.01 119.319 36.429 119.319 36.886 cv
119.319 37.376 119.231 37.817 119.055 38.209 cv
118.88 38.602 118.624 38.902 118.289 39.111 cv
117.954 39.32 117.601 39.425 117.231 39.425 cv
116.961 39.425 116.719 39.367 116.504 39.253 cv
116.289 39.139 116.112 38.995 115.974 38.82 cv
115.974 41.151 115.974 38.82 115.974 41.151 cv
115.162 41.151 115.974 41.151 115.162 41.151 cv
f
121.027 36.95 mo
121.027 37.565 121.152 38.021 121.401 38.315 cv
121.651 38.61 121.953 38.757 122.308 38.757 cv
122.668 38.757 122.977 38.604 123.233 38.3 cv
123.491 37.994 123.619 37.522 123.619 36.882 cv
123.619 36.271 123.494 35.814 123.243 35.511 cv
122.992 35.208 122.692 35.055 122.343 35.055 cv
121.997 35.055 121.692 35.218 121.426 35.541 cv
121.16 35.864 121.027 36.333 121.027 36.95 cv
cp
120.292 41.151 mo
120.292 34.528 120.292 41.151 120.292 34.528 cv
121.031 34.528 120.292 34.528 121.031 34.528 cv
121.031 35.151 121.031 34.528 121.031 35.151 cv
121.206 34.907 121.402 34.724 121.622 34.602 cv
121.841 34.481 122.107 34.42 122.42 34.42 cv
122.829 34.42 123.189 34.525 123.502 34.736 cv
123.815 34.946 124.051 35.243 124.21 35.626 cv
124.37 36.01 124.449 36.429 124.449 36.886 cv
124.449 37.376 124.361 37.817 124.185 38.209 cv
124.01 38.602 123.754 38.902 123.419 39.111 cv
123.083 39.32 122.731 39.425 122.361 39.425 cv
122.091 39.425 121.848 39.367 121.633 39.253 cv
121.418 39.139 121.242 38.995 121.103 38.82 cv
121.103 41.151 121.103 38.82 121.103 41.151 cv
120.292 41.151 121.103 41.151 120.292 41.151 cv
f
125.652 39.317 mo
125.652 38.392 125.652 39.317 125.652 38.392 cv
126.576 38.392 125.652 38.392 126.576 38.392 cv
126.576 39.317 126.576 38.392 126.576 39.317 cv
125.652 39.317 126.576 39.317 125.652 39.317 cv
f
130.423 37.571 mo
131.235 37.463 130.423 37.571 131.235 37.463 cv
131.329 37.923 131.487 38.255 131.711 38.458 cv
131.934 38.66 132.208 38.762 132.529 38.762 cv
132.911 38.762 133.233 38.629 133.496 38.365 cv
133.759 38.1 133.891 37.773 133.891 37.382 cv
133.891 37.01 133.769 36.702 133.526 36.46 cv
133.282 36.218 132.973 36.097 132.597 36.097 cv
132.444 36.097 132.252 36.127 132.024 36.187 cv
132.115 35.475 132.024 36.187 132.115 35.475 cv
132.168 35.481 132.212 35.484 132.245 35.484 cv
132.591 35.484 132.902 35.394 133.179 35.214 cv
133.454 35.033 133.594 34.755 133.594 34.38 cv
133.594 34.082 133.493 33.835 133.291 33.64 cv
133.09 33.445 132.83 33.347 132.512 33.347 cv
132.196 33.347 131.933 33.446 131.722 33.645 cv
131.512 33.843 131.377 34.141 131.316 34.537 cv
130.505 34.393 131.316 34.537 130.505 34.393 cv
130.604 33.849 130.829 33.428 131.181 33.128 cv
131.533 32.829 131.971 32.68 132.493 32.68 cv
132.854 32.68 133.186 32.758 133.49 32.912 cv
133.793 33.067 134.025 33.278 134.186 33.545 cv
134.347 33.813 134.427 34.097 134.427 34.398 cv
134.427 34.683 134.351 34.943 134.197 35.177 cv
134.044 35.412 133.817 35.598 133.516 35.736 cv
133.907 35.826 134.211 36.014 134.427 36.298 cv
134.643 36.582 134.752 36.937 134.752 37.364 cv
134.752 37.941 134.541 38.43 134.121 38.831 cv
133.7 39.233 133.168 39.433 132.525 39.433 cv
131.944 39.433 131.463 39.261 131.079 38.915 cv
130.697 38.57 130.478 38.121 130.423 37.571 cv
f
138.386 39.317 mo
138.386 34.528 138.386 39.317 138.386 34.528 cv
139.116 34.528 138.386 34.528 139.116 34.528 cv
139.116 35.209 139.116 34.528 139.116 35.209 cv
139.468 34.683 139.976 34.42 140.64 34.42 cv
140.929 34.42 141.194 34.472 141.435 34.576 cv
141.678 34.679 141.859 34.815 141.979 34.983 cv
142.1 35.152 142.183 35.352 142.231 35.583 cv
142.262 35.733 142.276 35.996 142.276 36.372 cv
142.276 39.317 142.276 36.372 142.276 39.317 cv
141.465 39.317 142.276 39.317 141.465 39.317 cv
141.465 36.404 141.465 39.317 141.465 36.404 cv
141.465 36.073 141.434 35.826 141.371 35.662 cv
141.308 35.498 141.195 35.368 141.035 35.27 cv
140.873 35.172 140.685 35.123 140.469 35.123 cv
140.123 35.123 139.825 35.233 139.574 35.452 cv
139.323 35.672 139.198 36.088 139.198 36.701 cv
139.198 39.317 139.198 36.701 139.198 39.317 cv
138.386 39.317 139.198 39.317 138.386 39.317 cv
f
146.653 39.317 mo
146.653 38.613 146.653 39.317 146.653 38.613 cv
146.28 39.154 145.774 39.425 145.134 39.425 cv
144.852 39.425 144.588 39.37 144.343 39.262 cv
144.098 39.154 143.916 39.018 143.797 38.854 cv
143.678 38.69 143.595 38.49 143.547 38.252 cv
143.514 38.093 143.498 37.841 143.498 37.495 cv
143.498 34.528 143.498 37.495 143.498 34.528 cv
144.309 34.528 143.498 34.528 144.309 34.528 cv
144.309 37.184 144.309 34.528 144.309 37.184 cv
144.309 37.608 144.325 37.893 144.359 38.04 cv
144.41 38.254 144.518 38.421 144.683 38.543 cv
144.849 38.665 145.053 38.725 145.296 38.725 cv
145.54 38.725 145.769 38.663 145.982 38.538 cv
146.195 38.414 146.346 38.244 146.435 38.029 cv
146.523 37.814 146.568 37.502 146.568 37.094 cv
146.568 34.528 146.568 37.094 146.568 34.528 cv
147.379 34.528 146.568 34.528 147.379 34.528 cv
147.379 39.317 147.379 34.528 147.379 39.317 cv
146.653 39.317 147.379 39.317 146.653 39.317 cv
f
151.769 37.562 mo
152.568 37.666 151.769 37.562 152.568 37.666 cv
152.48 38.216 152.257 38.646 151.898 38.957 cv
151.539 39.269 151.098 39.425 150.575 39.425 cv
149.919 39.425 149.393 39.211 148.995 38.782 cv
148.596 38.354 148.397 37.74 148.397 36.941 cv
148.397 36.423 148.483 35.971 148.654 35.583 cv
148.826 35.195 149.086 34.905 149.436 34.711 cv
149.787 34.517 150.168 34.42 150.579 34.42 cv
151.099 34.42 151.524 34.552 151.855 34.815 cv
152.186 35.077 152.398 35.451 152.491 35.935 cv
151.702 36.056 152.491 35.935 151.702 36.056 cv
151.627 35.735 151.494 35.493 151.303 35.331 cv
151.112 35.168 150.881 35.087 150.611 35.087 cv
150.202 35.087 149.87 35.234 149.614 35.527 cv
149.359 35.82 149.231 36.283 149.231 36.918 cv
149.231 37.561 149.354 38.029 149.601 38.32 cv
149.848 38.612 150.169 38.757 150.565 38.757 cv
150.884 38.757 151.15 38.66 151.364 38.464 cv
151.578 38.269 151.712 37.968 151.769 37.562 cv
f
153.29 39.317 mo
153.29 32.707 153.29 39.317 153.29 32.707 cv
154.102 32.707 153.29 32.707 154.102 32.707 cv
154.102 39.317 154.102 32.707 154.102 39.317 cv
153.29 39.317 154.102 39.317 153.29 39.317 cv
f
218.174 201.598 mo
243.264 201.598 li
243.264 178.28 li
218.174 178.28 li
cp
0 0 0 0 cmyk
f
gsave
284.814 3.22299 mo
40.581 3.22299 li
40.581 201.784 li
284.814 201.784 li
cp
clp
.373 lw
218.174 178.28 mo
243.264 178.28 li
243.264 201.598 li
218.174 201.598 li
cp
.694423 .677272 .637385 .738643 cmyk
@
grestore
223.128 184.645 mo
223.128 184.319 223.054 184.065 222.904 183.886 cv
222.754 183.706 222.581 183.616 222.385 183.616 cv
222.197 183.616 222.041 183.689 221.919 183.838 cv
221.795 183.985 221.733 184.227 221.733 184.561 cv
221.733 184.903 221.8 185.152 221.935 185.312 cv
222.068 185.473 222.236 185.552 222.437 185.552 cv
222.632 185.552 222.796 185.475 222.929 185.322 cv
223.062 185.168 223.128 184.942 223.128 184.645 cv
cp
220.841 186.854 mo
221.818 186.746 220.841 186.854 221.818 186.746 cv
221.843 186.944 221.906 187.093 222.006 187.189 cv
222.107 187.285 222.24 187.333 222.406 187.333 cv
222.614 187.333 222.792 187.237 222.938 187.045 cv
223.084 186.852 223.179 186.455 223.219 185.85 cv
222.965 186.145 222.646 186.293 222.265 186.293 cv
221.851 186.293 221.493 186.134 221.191 185.812 cv
220.891 185.493 220.74 185.076 220.74 184.561 cv
220.74 184.028 220.898 183.597 221.218 183.268 cv
221.534 182.942 221.939 182.778 222.431 182.778 cv
222.966 182.778 223.405 182.984 223.748 183.398 cv
224.091 183.812 224.263 184.492 224.263 185.439 cv
224.263 186.404 224.083 187.099 223.726 187.527 cv
223.369 187.954 222.903 188.167 222.33 188.167 cv
221.918 188.167 221.584 188.057 221.33 187.839 cv
221.076 187.619 220.913 187.29 220.841 186.854 cv
.694423 .677272 .637385 .738643 cmyk
f
228.337 187.135 mo
228.337 188.074 228.337 187.135 228.337 188.074 cv
224.793 188.074 228.337 188.074 224.793 188.074 cv
224.832 187.719 224.947 187.382 225.139 187.064 cv
225.331 186.746 225.709 186.326 226.275 185.8 cv
226.731 185.375 227.011 185.088 227.114 184.936 cv
227.253 184.727 227.322 184.521 227.322 184.317 cv
227.322 184.092 227.262 183.919 227.141 183.799 cv
227.019 183.677 226.852 183.616 226.639 183.616 cv
226.428 183.616 226.26 183.68 226.135 183.807 cv
226.011 183.933 225.938 184.144 225.919 184.44 cv
224.912 184.339 225.919 184.44 224.912 184.339 cv
224.972 183.783 225.16 183.384 225.477 183.141 cv
225.793 182.899 226.189 182.778 226.664 182.778 cv
227.185 182.778 227.594 182.919 227.892 183.198 cv
228.188 183.479 228.337 183.828 228.337 184.246 cv
228.337 184.483 228.294 184.709 228.209 184.924 cv
228.125 185.139 227.989 185.363 227.805 185.598 cv
227.683 185.755 227.462 185.978 227.143 186.271 cv
226.824 186.564 226.622 186.759 226.536 186.854 cv
226.451 186.95 226.383 187.044 226.329 187.135 cv
228.337 187.135 226.329 187.135 228.337 187.135 cv
f
228.848 195.068 mo
228.848 193.439 228.848 195.068 228.848 193.439 cv
233.547 187.636 228.848 193.439 233.547 187.636 cv
229.379 187.636 233.547 187.636 229.379 187.636 cv
229.379 186.123 229.379 187.636 229.379 186.123 cv
235.927 186.123 229.379 186.123 235.927 186.123 cv
235.927 187.526 235.927 186.123 235.927 187.526 cv
231.026 193.56 235.927 187.526 231.026 193.56 cv
236.116 193.56 231.026 193.56 236.116 193.56 cv
236.116 195.068 236.116 193.56 236.116 195.068 cv
228.848 195.068 236.116 195.068 228.848 195.068 cv
f
238.807 195.068 mo
237.092 195.068 238.807 195.068 237.092 195.068 cv
237.092 188.588 237.092 195.068 237.092 188.588 cv
238.685 188.588 237.092 188.588 238.685 188.588 cv
238.685 189.51 238.685 188.588 238.685 189.51 cv
238.957 189.073 239.203 188.787 239.42 188.648 cv
239.638 188.511 239.885 188.441 240.162 188.441 cv
240.552 188.441 240.929 188.549 241.291 188.765 cv
240.76 190.26 241.291 188.765 240.76 190.26 cv
240.471 190.072 240.203 189.98 239.954 189.98 cv
239.715 189.98 239.512 190.046 239.344 190.177 cv
239.177 190.309 239.046 190.549 238.95 190.894 cv
238.855 191.24 238.807 191.965 238.807 193.067 cv
238.807 195.068 238.807 193.067 238.807 195.068 cv
f
108.771 201.131 mo
134.793 201.131 li
134.793 177.255 li
108.771 177.255 li
cp
0 0 0 0 cmyk
f
gsave
284.814 3.22299 mo
40.581 3.22299 li
40.581 201.784 li
284.814 201.784 li
cp
clp
.373 lw
108.771 177.255 mo
134.793 177.255 li
134.793 201.131 li
108.771 201.131 li
cp
.694423 .677272 .637385 .738643 cmyk
@
grestore
114.192 183.898 mo
114.192 183.573 114.118 183.32 113.967 183.14 cv
113.817 182.96 113.644 182.871 113.447 182.871 cv
113.261 182.871 113.105 182.944 112.981 183.092 cv
112.858 183.239 112.796 183.48 112.796 183.816 cv
112.796 184.156 112.863 184.407 112.997 184.566 cv
113.132 184.725 113.3 184.805 113.501 184.805 cv
113.696 184.805 113.859 184.728 113.992 184.575 cv
114.125 184.422 114.192 184.197 114.192 183.898 cv
cp
111.904 186.108 mo
112.882 186 111.904 186.108 112.882 186 cv
112.906 186.199 112.969 186.348 113.07 186.442 cv
113.17 186.539 113.304 186.587 113.469 186.587 cv
113.677 186.587 113.855 186.49 114.002 186.299 cv
114.147 186.107 114.241 185.709 114.282 185.104 cv
114.028 185.399 113.71 185.547 113.329 185.547 cv
112.913 185.547 112.556 185.387 112.254 185.066 cv
111.954 184.746 111.803 184.329 111.803 183.816 cv
111.803 183.281 111.962 182.849 112.28 182.523 cv
112.598 182.195 113.002 182.032 113.495 182.032 cv
114.029 182.032 114.468 182.239 114.811 182.651 cv
115.154 183.066 115.326 183.747 115.326 184.694 cv
115.326 185.658 115.147 186.354 114.789 186.781 cv
114.432 187.208 113.967 187.422 113.393 187.422 cv
112.981 187.422 112.647 187.311 112.393 187.092 cv
112.139 186.872 111.976 186.545 111.904 186.108 cv
.694423 .677272 .637385 .738643 cmyk
f
117.695 182.871 mo
117.573 182.871 117.463 182.909 117.368 182.986 cv
117.272 183.064 117.197 183.205 117.145 183.406 cv
117.075 183.668 117.04 184.107 117.04 184.726 cv
117.04 185.345 117.071 185.77 117.134 186.002 cv
117.196 186.233 117.275 186.388 117.37 186.464 cv
117.464 186.542 117.573 186.579 117.695 186.579 cv
117.817 186.579 117.926 186.541 118.022 186.463 cv
118.119 186.385 118.192 186.244 118.246 186.043 cv
118.315 185.784 118.35 185.345 118.35 184.726 cv
118.35 184.107 118.319 183.682 118.256 183.451 cv
118.194 183.22 118.116 183.064 118.02 182.986 cv
117.926 182.909 117.817 182.871 117.695 182.871 cv
cp
117.695 182.032 mo
118.206 182.032 118.605 182.214 118.893 182.579 cv
119.236 183.01 119.408 183.725 119.408 184.726 cv
119.408 185.724 119.235 186.441 118.89 186.878 cv
118.604 187.237 118.206 187.418 117.695 187.418 cv
117.182 187.418 116.768 187.221 116.454 186.826 cv
116.14 186.431 115.983 185.727 115.983 184.716 cv
115.983 183.723 116.155 183.008 116.501 182.571 cv
116.786 182.212 117.184 182.032 117.695 182.032 cv
f
119.911 194.323 mo
119.911 192.693 119.911 194.323 119.911 192.693 cv
124.61 186.89 119.911 192.693 124.61 186.89 cv
120.442 186.89 124.61 186.89 120.442 186.89 cv
120.442 185.377 120.442 186.89 120.442 185.377 cv
126.99 185.377 120.442 185.377 126.99 185.377 cv
126.99 186.78 126.99 185.377 126.99 186.78 cv
122.09 192.815 126.99 186.78 122.09 192.815 cv
127.179 192.815 122.09 192.815 127.179 192.815 cv
127.179 194.323 127.179 192.815 127.179 194.323 cv
119.911 194.323 127.179 194.323 119.911 194.323 cv
f
129.87 194.323 mo
128.155 194.323 129.87 194.323 128.155 194.323 cv
128.155 187.843 128.155 194.323 128.155 187.843 cv
129.748 187.843 128.155 187.843 129.748 187.843 cv
129.748 188.764 129.748 187.843 129.748 188.764 cv
130.02 188.328 130.266 188.042 130.483 187.902 cv
130.701 187.765 130.948 187.695 131.225 187.695 cv
131.615 187.695 131.992 187.803 132.354 188.018 cv
131.823 189.514 132.354 188.018 131.823 189.514 cv
131.534 189.326 131.266 189.233 131.018 189.233 cv
130.777 189.233 130.574 189.299 130.407 189.431 cv
130.24 189.563 130.109 189.803 130.013 190.148 cv
129.918 190.494 129.87 191.219 129.87 192.32 cv
129.87 194.323 129.87 192.32 129.87 194.323 cv
f
48.768 149.263 mo
41.668 149.263 48.768 149.263 41.668 149.263 cv
41.668 151.916 41.668 149.263 41.668 151.916 cv
40.718 151.916 41.668 151.916 40.718 151.916 cv
40.718 145.536 40.718 151.916 40.718 145.536 cv
41.668 145.536 40.718 145.536 41.668 145.536 cv
41.668 148.198 41.668 145.536 41.668 148.198 cv
48.768 148.198 41.668 148.198 48.768 148.198 cv
48.768 149.263 48.768 148.198 48.768 149.263 cv
f
48.768 144.472 mo
42.936 144.472 48.768 144.472 42.936 144.472 cv
42.936 143.583 42.936 144.472 42.936 143.583 cv
43.82 143.583 42.936 143.583 43.82 143.583 cv
43.406 143.356 43.135 143.146 43.002 142.954 cv
42.871 142.763 42.805 142.551 42.805 142.32 cv
42.805 141.988 42.911 141.648 43.124 141.303 cv
44.04 141.644 43.124 141.303 44.04 141.644 cv
43.897 141.886 43.826 142.128 43.826 142.369 cv
43.826 142.585 43.891 142.779 44.02 142.951 cv
44.151 143.123 44.331 143.245 44.562 143.319 cv
44.913 143.429 45.298 143.482 45.715 143.482 cv
48.768 143.482 45.715 143.482 48.768 143.482 cv
48.768 144.472 48.768 143.482 48.768 144.472 cv
f
45.84 136.963 mo
45.987 137.322 46.112 137.86 46.214 138.578 cv
46.273 138.984 46.34 139.27 46.412 139.439 cv
46.486 139.606 46.593 139.736 46.733 139.829 cv
46.874 139.92 47.03 139.965 47.203 139.965 cv
47.466 139.965 47.685 139.866 47.861 139.668 cv
48.038 139.468 48.125 139.175 48.125 138.792 cv
48.125 138.411 48.041 138.072 47.876 137.775 cv
47.709 137.479 47.48 137.262 47.192 137.123 cv
46.968 137.016 46.639 136.963 46.203 136.963 cv
45.84 136.963 46.203 136.963 45.84 136.963 cv
cp
48.048 136.882 mo
48.359 137.248 48.579 137.599 48.707 137.939 cv
48.835 138.276 48.899 138.639 48.899 139.027 cv
48.899 139.668 48.742 140.159 48.43 140.505 cv
48.116 140.848 47.717 141.02 47.23 141.02 cv
46.945 141.02 46.684 140.956 46.448 140.826 cv
46.212 140.697 46.022 140.525 45.879 140.315 cv
45.737 140.105 45.628 139.868 45.556 139.604 cv
45.504 139.411 45.455 139.117 45.407 138.724 cv
45.311 137.929 45.199 137.341 45.067 136.963 cv
44.932 136.96 44.846 136.957 44.809 136.957 cv
44.406 136.957 44.122 137.052 43.957 137.237 cv
43.734 137.49 43.623 137.865 43.623 138.364 cv
43.623 138.828 43.704 139.171 43.868 139.392 cv
44.03 139.613 44.319 139.778 44.732 139.884 cv
44.6 140.849 44.732 139.884 44.6 140.849 cv
44.187 140.763 43.852 140.617 43.599 140.416 cv
43.344 140.216 43.147 139.925 43.011 139.544 cv
42.873 139.162 42.805 138.722 42.805 138.221 cv
42.805 137.723 42.864 137.318 42.98 137.007 cv
43.097 136.695 43.245 136.467 43.422 136.321 cv
43.601 136.174 43.824 136.072 44.095 136.014 cv
44.264 135.98 44.567 135.965 45.006 135.965 cv
46.324 135.965 45.006 135.965 46.324 135.965 cv
47.243 135.965 47.824 135.942 48.067 135.901 cv
48.31 135.859 48.545 135.776 48.768 135.651 cv
48.768 136.682 48.768 135.651 48.768 136.682 cv
48.562 136.786 48.322 136.852 48.048 136.882 cv
f
48.768 134.447 mo
42.936 134.447 48.768 134.447 42.936 134.447 cv
42.936 133.558 42.936 134.447 42.936 133.558 cv
43.766 133.558 42.936 133.558 43.766 133.558 cv
43.125 133.131 42.805 132.513 42.805 131.704 cv
42.805 131.351 42.869 131.029 42.994 130.734 cv
43.121 130.439 43.286 130.219 43.491 130.072 cv
43.696 129.925 43.939 129.824 44.222 129.765 cv
44.404 129.729 44.725 129.709 45.182 129.709 cv
48.768 129.709 45.182 129.709 48.768 129.709 cv
48.768 130.698 48.768 129.709 48.768 130.698 cv
45.221 130.698 48.768 130.698 45.221 130.698 cv
44.818 130.698 44.517 130.736 44.318 130.813 cv
44.118 130.89 43.958 131.028 43.84 131.222 cv
43.721 131.418 43.662 131.647 43.662 131.911 cv
43.662 132.333 43.795 132.695 44.062 133.002 cv
44.33 133.306 44.836 133.459 45.583 133.459 cv
48.768 133.459 45.583 133.459 48.768 133.459 cv
48.768 134.447 48.768 133.459 48.768 134.447 cv
f
47.027 128.606 mo
46.873 127.629 47.027 128.606 46.873 127.629 cv
47.265 127.572 47.565 127.422 47.774 127.171 cv
47.982 126.919 48.087 126.569 48.087 126.118 cv
48.087 125.665 47.995 125.328 47.809 125.108 cv
47.625 124.888 47.408 124.78 47.159 124.78 cv
46.935 124.78 46.759 124.877 46.632 125.071 cv
46.543 125.205 46.432 125.542 46.296 126.082 cv
46.114 126.805 45.955 127.306 45.822 127.588 cv
45.688 127.868 45.504 128.08 45.268 128.224 cv
45.031 128.369 44.77 128.44 44.485 128.44 cv
44.226 128.44 43.984 128.382 43.763 128.263 cv
43.542 128.144 43.357 127.981 43.211 127.777 cv
43.097 127.624 43.001 127.413 42.923 127.149 cv
42.844 126.882 42.805 126.598 42.805 126.296 cv
42.805 125.837 42.871 125.436 43.002 125.09 cv
43.135 124.743 43.313 124.488 43.538 124.324 cv
43.763 124.159 44.063 124.045 44.441 123.983 cv
44.573 124.95 44.441 123.983 44.573 124.95 cv
44.272 124.994 44.038 125.121 43.871 125.33 cv
43.702 125.542 43.617 125.839 43.617 126.223 cv
43.617 126.677 43.693 127.001 43.842 127.195 cv
43.993 127.39 44.167 127.486 44.37 127.486 cv
44.498 127.486 44.613 127.445 44.716 127.366 cv
44.822 127.285 44.909 127.159 44.979 126.986 cv
45.016 126.889 45.1 126.596 45.232 126.114 cv
45.418 125.414 45.57 124.927 45.689 124.65 cv
45.809 124.375 45.981 124.157 46.209 123.999 cv
46.435 123.842 46.717 123.764 47.054 123.764 cv
47.383 123.764 47.694 123.859 47.985 124.053 cv
48.276 124.243 48.502 124.52 48.661 124.884 cv
48.82 125.246 48.899 125.656 48.899 126.114 cv
48.899 126.871 48.741 127.447 48.427 127.845 cv
48.112 128.242 47.645 128.497 47.027 128.606 cv
f
48.768 122.31 mo
43.706 122.31 48.768 122.31 43.706 122.31 cv
43.706 123.184 43.706 122.31 43.706 123.184 cv
42.936 123.184 43.706 123.184 42.936 123.184 cv
42.936 122.31 42.936 123.184 42.936 122.31 cv
42.316 122.31 42.936 122.31 42.316 122.31 cv
41.925 122.31 41.634 122.276 41.443 122.208 cv
41.187 122.112 40.979 121.943 40.82 121.704 cv
40.661 121.465 40.581 121.131 40.581 120.697 cv
40.581 120.419 40.614 120.112 40.68 119.774 cv
41.542 119.924 40.68 119.774 41.542 119.924 cv
41.505 120.129 41.487 120.323 41.487 120.505 cv
41.487 120.806 41.551 121.018 41.68 121.143 cv
41.807 121.266 42.047 121.328 42.398 121.328 cv
42.936 121.328 42.398 121.328 42.936 121.328 cv
42.936 120.191 42.936 121.328 42.936 120.191 cv
43.706 120.191 42.936 120.191 43.706 120.191 cv
43.706 121.328 43.706 120.191 43.706 121.328 cv
48.768 121.328 43.706 121.328 48.768 121.328 cv
48.768 122.31 48.768 121.328 48.768 122.31 cv
f
45.292 118.682 mo
45.292 115.426 45.292 118.682 45.292 115.426 cv
44.801 115.472 44.434 115.595 44.188 115.8 cv
43.808 116.114 43.617 116.522 43.617 117.022 cv
43.617 117.479 43.769 117.859 44.073 118.17 cv
44.376 118.477 44.783 118.648 45.292 118.682 cv
cp
46.89 115.436 mo
47.016 114.416 46.89 115.436 47.016 114.416 cv
47.613 114.578 48.076 114.875 48.405 115.312 cv
48.735 115.746 48.899 116.303 48.899 116.979 cv
48.899 117.832 48.637 118.51 48.111 119.009 cv
47.586 119.509 46.85 119.758 45.901 119.758 cv
44.921 119.758 44.16 119.505 43.617 119.001 cv
43.076 118.495 42.805 117.841 42.805 117.035 cv
42.805 116.255 43.07 115.618 43.601 115.124 cv
44.131 114.63 44.878 114.384 45.84 114.384 cv
45.899 114.384 45.987 114.386 46.104 114.388 cv
46.104 118.736 46.104 114.388 46.104 118.736 cv
46.745 118.7 47.235 118.518 47.576 118.193 cv
47.916 117.867 48.087 117.461 48.087 116.974 cv
48.087 116.613 47.992 116.303 47.801 116.048 cv
47.61 115.791 47.307 115.588 46.89 115.436 cv
f
48.768 113.202 mo
42.936 113.202 48.768 113.202 42.936 113.202 cv
42.936 112.313 42.936 113.202 42.936 112.313 cv
43.82 112.313 42.936 112.313 43.82 112.313 cv
43.406 112.086 43.135 111.876 43.002 111.684 cv
42.871 111.492 42.805 111.281 42.805 111.05 cv
42.805 110.717 42.911 110.38 43.124 110.035 cv
44.04 110.375 43.124 110.035 44.04 110.375 cv
43.897 110.617 43.826 110.858 43.826 111.098 cv
43.826 111.315 43.891 111.51 44.02 111.681 cv
44.151 111.853 44.331 111.976 44.562 112.049 cv
44.913 112.159 45.298 112.215 45.715 112.215 cv
48.768 112.215 45.715 112.215 48.768 112.215 cv
48.768 113.202 48.768 112.215 48.768 113.202 cv
f
45.858 105.639 mo
46.604 105.639 47.162 105.481 47.533 105.166 cv
47.901 104.85 48.087 104.479 48.087 104.052 cv
48.087 103.619 47.91 103.252 47.556 102.951 cv
47.204 102.649 46.665 102.498 45.94 102.498 cv
45.142 102.498 44.556 102.652 44.184 102.959 cv
43.81 103.267 43.623 103.645 43.623 104.095 cv
43.623 104.535 43.803 104.901 44.161 105.195 cv
44.52 105.492 45.085 105.639 45.858 105.639 cv
cp
48.768 102.514 mo
48.031 102.514 48.768 102.514 48.031 102.514 cv
48.61 102.885 48.899 103.429 48.899 104.145 cv
48.899 104.609 48.771 105.037 48.515 105.428 cv
48.258 105.816 47.9 106.119 47.441 106.334 cv
46.982 106.548 46.454 106.653 45.858 106.653 cv
45.275 106.653 44.748 106.558 44.273 106.364 cv
43.8 106.17 43.437 105.879 43.184 105.49 cv
42.932 105.101 42.805 104.668 42.805 104.188 cv
42.805 103.839 42.879 103.524 43.027 103.249 cv
43.175 102.975 43.368 102.753 43.606 102.58 cv
40.718 102.58 43.606 102.58 40.718 102.58 cv
40.718 101.598 40.718 102.58 40.718 101.598 cv
48.768 101.598 40.718 101.598 48.768 101.598 cv
48.768 102.514 48.768 101.598 48.768 102.514 cv
f
44.904 97.494 mo
44.901 97.635 44.899 97.743 44.899 97.816 cv
44.899 98.419 45.034 98.867 45.304 99.158 cv
45.573 99.449 45.953 99.595 46.445 99.595 cv
47.088 99.595 47.604 99.42 47.995 99.075 cv
48.385 98.728 48.58 98.318 48.58 97.842 cv
48.58 97.446 48.439 97.119 48.154 96.863 cv
47.869 96.608 47.459 96.478 46.924 96.478 cv
46.15 96.478 45.477 96.817 44.904 97.494 cv
cp
44.904 94.853 mo
44.904 97.115 44.904 94.853 44.904 97.115 cv
45.187 96.608 45.5 96.221 45.844 95.959 cv
46.187 95.696 46.584 95.565 47.035 95.565 cv
47.554 95.565 47.998 95.775 48.368 96.191 cv
48.739 96.61 48.925 97.168 48.925 97.868 cv
48.925 98.604 48.673 99.226 48.171 99.731 cv
47.671 100.237 47.064 100.489 46.354 100.489 cv
45.927 100.489 45.539 100.383 45.192 100.171 cv
44.846 99.958 44.584 99.69 44.407 99.365 cv
44.23 99.041 44.142 98.542 44.142 97.873 cv
44.142 94.853 44.142 97.873 44.142 94.853 cv
44.904 94.853 44.142 94.853 44.904 94.853 cv
f
48.905 94.726 mo
40.581 92.393 48.905 94.726 40.581 92.393 cv
40.581 91.603 40.581 92.393 40.581 91.603 cv
48.905 93.93 40.581 91.603 48.905 93.93 cv
48.905 94.726 48.905 93.93 48.905 94.726 cv
f
45.858 90.209 mo
46.604 90.209 47.162 90.051 47.533 89.736 cv
47.901 89.421 48.087 89.05 48.087 88.621 cv
48.087 88.19 47.91 87.823 47.556 87.521 cv
47.204 87.219 46.665 87.067 45.94 87.067 cv
45.142 87.067 44.556 87.221 44.184 87.53 cv
43.81 87.837 43.623 88.215 43.623 88.665 cv
43.623 89.105 43.803 89.472 44.161 89.766 cv
44.52 90.061 45.085 90.209 45.858 90.209 cv
cp
48.768 87.084 mo
48.031 87.084 48.768 87.084 48.031 87.084 cv
48.61 87.454 48.899 87.997 48.899 88.716 cv
48.899 89.179 48.771 89.607 48.515 89.997 cv
48.258 90.386 47.9 90.688 47.441 90.903 cv
46.982 91.117 46.454 91.224 45.858 91.224 cv
45.275 91.224 44.748 91.127 44.273 90.933 cv
43.8 90.74 43.437 90.448 43.184 90.06 cv
42.932 89.672 42.805 89.239 42.805 88.759 cv
42.805 88.408 42.879 88.095 43.027 87.82 cv
43.175 87.545 43.368 87.323 43.606 87.151 cv
40.718 87.151 43.606 87.151 40.718 87.151 cv
40.718 86.167 40.718 87.151 40.718 86.167 cv
48.768 86.167 40.718 86.167 48.768 86.167 cv
48.768 87.084 48.768 86.167 48.768 87.084 cv
f
48.768 77.793 mo
48.768 80.657 48.768 77.793 48.768 80.657 cv
47.359 80.535 48.768 80.657 47.359 80.535 cv
47.16 80.06 46.877 79.711 46.51 79.487 cv
46.143 79.263 45.628 79.151 44.965 79.151 cv
44.049 79.151 43.347 79.374 42.857 79.82 cv
42.368 80.266 42.122 80.827 42.122 81.504 cv
42.122 82.158 42.371 82.709 42.867 83.16 cv
43.363 83.611 44.039 83.837 44.894 83.837 cv
45.567 83.837 46.104 83.721 46.505 83.491 cv
46.906 83.261 47.19 82.913 47.359 82.448 cv
48.768 82.322 47.359 82.448 48.768 82.322 cv
48.768 85.17 48.768 82.322 48.768 85.17 cv
47.359 85.17 48.768 85.17 47.359 85.17 cv
47.359 84.993 47.359 85.17 47.359 84.993 cv
47.564 84.984 47.703 84.93 47.778 84.832 cv
47.895 84.68 47.955 84.45 47.955 84.14 cv
47.955 82.777 47.955 84.14 47.955 82.777 cv
47.601 82.777 47.955 82.777 47.601 82.777 cv
47.395 83.484 47.044 84.029 46.545 84.416 cv
46.047 84.8 45.46 84.993 44.783 84.993 cv
43.935 84.993 43.22 84.679 42.637 84.051 cv
42.056 83.424 41.764 82.575 41.764 81.504 cv
41.764 80.848 41.888 80.244 42.135 79.694 cv
42.382 79.144 42.743 78.72 43.218 78.422 cv
43.693 78.123 44.214 77.974 44.783 77.974 cv
45.48 77.974 46.086 78.179 46.603 78.589 cv
47.121 78.997 47.453 79.532 47.601 80.192 cv
47.955 80.232 47.601 80.192 47.955 80.232 cv
47.955 78.844 47.955 80.232 47.955 78.844 cv
47.955 78.533 47.907 78.318 47.813 78.196 cv
47.719 78.075 47.567 78.005 47.359 77.984 cv
47.359 77.793 47.359 77.984 47.359 77.793 cv
48.768 77.793 47.359 77.793 48.768 77.793 cv
f
51.001 73.691 mo
40.718 73.691 51.001 73.691 40.718 73.691 cv
40.718 71.513 40.718 73.691 40.718 71.513 cv
41.537 71.513 40.718 71.513 41.537 71.513 cv
41.537 72.703 41.537 71.513 41.537 72.703 cv
50.184 72.703 41.537 72.703 50.184 72.703 cv
50.184 71.513 50.184 72.703 50.184 71.513 cv
51.001 71.513 50.184 71.513 51.001 71.513 cv
51.001 73.691 51.001 71.513 51.001 73.691 cv
f
48.768 70.595 mo
42.936 70.595 48.768 70.595 42.936 70.595 cv
42.936 69.71 42.936 70.595 42.936 69.71 cv
43.755 69.71 42.936 69.71 43.755 69.71 cv
43.469 69.529 43.24 69.284 43.065 68.98 cv
42.892 68.678 42.805 68.331 42.805 67.944 cv
42.805 67.511 42.894 67.157 43.074 66.881 cv
43.253 66.604 43.503 66.41 43.826 66.295 cv
43.145 65.835 42.805 65.235 42.805 64.495 cv
42.805 63.917 42.966 63.472 43.286 63.162 cv
43.605 62.85 44.099 62.695 44.765 62.695 cv
48.768 62.695 44.765 62.695 48.768 62.695 cv
48.768 63.677 48.768 62.695 48.768 63.677 cv
45.095 63.677 48.768 63.677 45.095 63.677 cv
44.699 63.677 44.414 63.709 44.24 63.773 cv
44.066 63.837 43.926 63.954 43.82 64.122 cv
43.714 64.29 43.662 64.489 43.662 64.715 cv
43.662 65.125 43.798 65.466 44.07 65.736 cv
44.343 66.007 44.78 66.142 45.38 66.142 cv
48.768 66.142 45.38 66.142 48.768 66.142 cv
48.768 67.13 48.768 66.142 48.768 67.13 cv
44.979 67.13 48.768 67.13 44.979 67.13 cv
44.54 67.13 44.21 67.211 43.991 67.372 cv
43.771 67.533 43.662 67.797 43.662 68.162 cv
43.662 68.441 43.734 68.698 43.881 68.934 cv
44.027 69.17 44.241 69.342 44.524 69.448 cv
44.804 69.554 45.211 69.606 45.742 69.606 cv
48.768 69.606 45.742 69.606 48.768 69.606 cv
48.768 70.595 48.768 69.606 48.768 70.595 cv
f
45.808 60.339 mo
46.507 60.339 47.013 60.243 47.324 60.052 cv
47.832 59.741 48.087 59.322 48.087 58.79 cv
48.087 58.358 47.899 57.985 47.524 57.67 cv
47.149 57.355 46.59 57.198 45.847 57.198 cv
45.085 57.198 44.524 57.349 44.161 57.651 cv
43.799 57.953 43.617 58.318 43.617 58.745 cv
43.617 59.178 43.805 59.551 44.18 59.866 cv
44.555 60.181 45.099 60.339 45.808 60.339 cv
cp
48.768 60.327 mo
48.768 61.244 48.768 60.327 48.768 61.244 cv
40.718 61.244 48.768 61.244 40.718 61.244 cv
40.718 60.256 40.718 61.244 40.718 60.256 cv
43.59 60.256 40.718 60.256 43.59 60.256 cv
43.067 59.838 42.805 59.306 42.805 58.658 cv
42.805 58.299 42.877 57.961 43.022 57.64 cv
43.167 57.319 43.369 57.056 43.631 56.849 cv
43.893 56.642 44.209 56.48 44.578 56.364 cv
44.948 56.247 45.343 56.188 45.764 56.188 cv
46.764 56.188 47.536 56.434 48.081 56.929 cv
48.626 57.423 48.899 58.016 48.899 58.707 cv
48.899 59.396 48.612 59.935 48.038 60.327 cv
48.768 60.327 48.038 60.327 48.768 60.327 cv
f
48.905 55.742 mo
40.581 53.409 48.905 55.742 40.581 53.409 cv
40.581 52.619 40.581 53.409 40.581 52.619 cv
48.905 54.946 40.581 52.619 48.905 54.946 cv
48.905 55.742 48.905 54.946 48.905 55.742 cv
f
47.027 52.278 mo
46.873 51.301 47.027 52.278 46.873 51.301 cv
47.265 51.246 47.565 51.093 47.774 50.842 cv
47.982 50.591 48.087 50.241 48.087 49.791 cv
48.087 49.337 47.995 49 47.809 48.781 cv
47.625 48.562 47.408 48.451 47.159 48.451 cv
46.935 48.451 46.759 48.548 46.632 48.742 cv
46.543 48.878 46.432 49.214 46.296 49.753 cv
46.114 50.477 45.955 50.98 45.822 51.26 cv
45.688 51.54 45.504 51.752 45.268 51.896 cv
45.031 52.04 44.77 52.113 44.485 52.113 cv
44.226 52.113 43.984 52.053 43.763 51.934 cv
43.542 51.816 43.357 51.654 43.211 51.449 cv
43.097 51.295 43.001 51.085 42.923 50.82 cv
42.844 50.555 42.805 50.27 42.805 49.967 cv
42.805 49.508 42.871 49.107 43.002 48.762 cv
43.135 48.415 43.313 48.159 43.538 47.995 cv
43.763 47.831 44.063 47.717 44.441 47.655 cv
44.573 48.621 44.441 47.655 44.573 48.621 cv
44.272 48.666 44.038 48.792 43.871 49.003 cv
43.702 49.213 43.617 49.511 43.617 49.895 cv
43.617 50.349 43.693 50.673 43.842 50.867 cv
43.993 51.06 44.167 51.158 44.37 51.158 cv
44.498 51.158 44.613 51.117 44.716 51.037 cv
44.822 50.956 44.909 50.83 44.979 50.658 cv
45.016 50.559 45.1 50.268 45.232 49.785 cv
45.418 49.085 45.57 48.598 45.689 48.321 cv
45.809 48.046 45.981 47.829 46.209 47.672 cv
46.435 47.515 46.717 47.435 47.054 47.435 cv
47.383 47.435 47.694 47.532 47.985 47.724 cv
48.276 47.916 48.502 48.193 48.661 48.555 cv
48.82 48.918 48.899 49.328 48.899 49.785 cv
48.899 50.542 48.741 51.12 48.427 51.517 cv
48.112 51.915 47.645 52.168 47.027 52.278 cv
f
47.884 44.062 mo
48.757 43.918 47.884 44.062 48.757 43.918 cv
48.815 44.197 48.844 44.446 48.844 44.666 cv
48.844 45.024 48.788 45.303 48.674 45.5 cv
48.561 45.698 48.412 45.837 48.227 45.918 cv
48.041 45.998 47.653 46.038 47.06 46.038 cv
43.706 46.038 47.06 46.038 43.706 46.038 cv
43.706 46.763 43.706 46.038 43.706 46.763 cv
42.936 46.763 43.706 46.763 42.936 46.763 cv
42.936 46.038 42.936 46.763 42.936 46.038 cv
41.492 46.038 42.936 46.038 41.492 46.038 cv
40.9 45.055 41.492 46.038 40.9 45.055 cv
42.936 45.055 40.9 45.055 42.936 45.055 cv
42.936 44.062 42.936 45.055 42.936 44.062 cv
43.706 44.062 42.936 44.062 43.706 44.062 cv
43.706 45.055 43.706 44.062 43.706 45.055 cv
47.115 45.055 43.706 45.055 47.115 45.055 cv
47.397 45.055 47.578 45.038 47.658 45.004 cv
47.739 44.968 47.802 44.911 47.851 44.834 cv
47.898 44.754 47.922 44.641 47.922 44.495 cv
47.922 44.386 47.909 44.241 47.884 44.062 cv
f
45.292 42.354 mo
45.292 39.099 45.292 42.354 45.292 39.099 cv
44.801 39.143 44.434 39.266 44.188 39.471 cv
43.808 39.786 43.617 40.195 43.617 40.696 cv
43.617 41.15 43.769 41.532 44.073 41.841 cv
44.376 42.15 44.783 42.322 45.292 42.354 cv
cp
46.89 39.11 mo
47.016 38.088 46.89 39.11 47.016 38.088 cv
47.613 38.249 48.076 38.548 48.405 38.983 cv
48.735 39.419 48.899 39.975 48.899 40.652 cv
48.899 41.505 48.637 42.181 48.111 42.68 cv
47.586 43.181 46.85 43.431 45.901 43.431 cv
44.921 43.431 44.16 43.178 43.617 42.673 cv
43.076 42.167 42.805 41.512 42.805 40.708 cv
42.805 39.927 43.07 39.29 43.601 38.797 cv
44.131 38.302 44.878 38.055 45.84 38.055 cv
45.899 38.055 45.987 38.057 46.104 38.061 cv
46.104 42.408 46.104 38.061 46.104 42.408 cv
46.745 42.371 47.235 42.191 47.576 41.865 cv
47.916 41.539 48.087 41.134 48.087 40.647 cv
48.087 40.285 47.992 39.975 47.801 39.719 cv
47.61 39.462 47.307 39.26 46.89 39.11 cv
f
48.768 36.875 mo
42.936 36.875 48.768 36.875 42.936 36.875 cv
42.936 35.985 42.936 36.875 42.936 35.985 cv
43.82 35.985 42.936 35.985 43.82 35.985 cv
43.406 35.759 43.135 35.549 43.002 35.356 cv
42.871 35.164 42.805 34.953 42.805 34.722 cv
42.805 34.389 42.911 34.051 43.124 33.706 cv
44.04 34.047 43.124 33.706 44.04 34.047 cv
43.897 34.288 43.826 34.53 43.826 34.771 cv
43.826 34.987 43.891 35.181 44.02 35.353 cv
44.151 35.526 44.331 35.649 44.562 35.721 cv
44.913 35.831 45.298 35.886 45.715 35.886 cv
48.768 35.886 45.715 35.886 48.768 35.886 cv
48.768 36.875 48.768 35.886 48.768 36.875 cv
f
51.001 31.436 mo
51.001 33.615 51.001 31.436 51.001 33.615 cv
50.184 33.615 51.001 33.615 50.184 33.615 cv
50.184 32.424 50.184 33.615 50.184 32.424 cv
41.537 32.424 50.184 32.424 41.537 32.424 cv
41.537 33.615 41.537 32.424 41.537 33.615 cv
40.718 33.615 41.537 33.615 40.718 33.615 cv
40.718 31.436 40.718 33.615 40.718 31.436 cv
51.001 31.436 40.718 31.436 51.001 31.436 cv
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB054073985C252F108C147E5B894B74E8DD41D4B2907B2971BD6DBC1DA40B30BE321EFA5013A17A623A37E171056FA1C8F8EA833B84DA2D5777727CE57C35BBEBB84A1CD5B36C6FDD2EDF02AB75D6D59B40E8D867EAC2EF07C9A4EC98494859463D49D6F36907EE221091971F8FF4FEE> |-/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF916442D9C9F4ED6F42D0588BBB70AFF4A34C797748BF897F607B52C72A4CB4A45FE66E245A32A75D88FD8959E00389A6DBAED16321CC2D91DF069B6D6467D128CC5B30A96938452FCD034FAF7C4DC50E3464B901F68B77945A36B587B81F6A85C08C5E954DCBEA7AEB21BCCFA49> |-/N <1C60D8A8C9B6079F1E48848E88AD51D864EC24104C6DD11D55A63CFF3E9C756106D0E97B2A535F11521FC421A87DB7AA1BB7E5E72F9C1F26749CEA60879128C49F034519E4F1E3D0B2668109027E7AE954A9FBCDB8C98F28D8FD5566696AFD7E7E86478C98CFD0142A5D34CA87950DF8C96F24696E1A4263A162D3B7D0318A42AFF3> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 68 /D putdup 77 /M putdup 78 /N putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 6{/.notdef}rp /A /.notdef /C /D /E /F /G /H /I /.notdef /K /L /M /N /.notdef /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z 51{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf52.497 219.712 mo(FIG.4.\(Coloronline\)Comparisonofdifferentialtransfercross)[4.98532 2.98574 6.47374 5.19334 4.4832 6.0299 2.98574 5.98066 4.4832 2.49265 4.4832 5.88638 4.4832 4.4832 2.49266 2.49265 4.4832 3.98109 5.89534 5.98065 4.48322 6.97585 4.4832 3.98108 2.98575 2.49266 3.48799 4.48322 7.38922 4.4823 5.89532 4.48233 2.49265 2.7634 2.98572 3.98111 2.98572 3.98111 4.48318 2.49265 2.49268 3.98108 5.40048 2.49265 2.98575 3.98108 4.48322 3.48798 2.98575 3.98108 5.88638 3.97839 2.98575 4.48318 3.48801 0 ]xsh40.5358 230.674 mo(sectionsmeasuredforthe)[3.4871 3.98019 3.98019 2.49176 2.49176 4.48231 4.4823 5.82285 6.97496 3.98019 3.98019 3.4871 4.4823 2.98485 3.98019 6.81358 2.98483 4.48232 5.3188 2.49266 4.4823 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf134.514 227.416 mo(20)[2.9882 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf140.994 230.674 mo(Ne)[6.47105 0 ]xsh%ADOBeginSubsetFont: KVXQMX+MTSY AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSI+MTSY dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B6C180FE7E255088499B6A505EB6DB68D164488832FE8CE1A33AC5E060A59D03BCEB9639BC4D489466A32ABD040C578748437F6AB5A2> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSI+MTSY /Encoding getdup 67 /plus putpop%ADOEndSubsetFont
/YOSQSI+MTSY*1 [67{/.notdef}rp /plus /equal 108{/.notdef}rp /openbullet 78{/.notdef}rp]YOSQSI+MTSY nfYOSQSI+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf154.935 230.674 mo(C)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf165.411 227.416 mo(90)[2.9882 0 ]xsh%ADOBeginSubsetFont: CMKQMX+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSH+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B821B3259708BCD717D7034C35291735F761867B0D7790444C597891B3AD34A0C55BF7F0630DAF50BF8F32C25C98049945665AAA61E7C5365BA0E652780DEDD63BA8A518E6584369A625690069> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSH+MTMI /Encoding getdup 59 /comma putpop%ADOEndSubsetFont
/YOSQSH+MTMI*1 [49{/.notdef}rp /Delta1 9{/.notdef}rp /comma /.notdef /slash 3{/.notdef}rp /A 3{/.notdef}rp /E 11{/.notdef}rp /Q 174{/.notdef}rp]YOSQSH+MTMI nfYOSQSH+MTMI*1 [5.9776 0 0 -5.9776 0 0 ]msf171.388 227.416 mo(;)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf173.368 227.416 mo(92)[2.9882 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf179.847 230.674 mo(Zrsystemsat)[5.48019 5.32777 3.48979 4.48499 3.48979 2.49445 3.98288 6.97766 5.81387 3.97839 0 ]xshYOSQSH+MTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf230.185 230.674 mo(E)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf236.637 232.015 mo(eff)[2.65526 1.83627 0 ]xshYOSQSI+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf246.411 230.674 mo(D)shYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf255.897 230.674 mo(50MeV)[4.4832 6.81357 7.97119 3.98108 0 ]xsh40.5353 241.636 mo(andaCManglearound156)[3.98108 4.4832 8.89198 8.3791 5.98065 12.3665 3.98108 4.4832 4.4832 2.49266 8.39703 3.97839 2.98575 4.4832 4.4832 4.4832 8.88301 4.48318 4.48322 0 ]xshYOSQSI+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf151.191 238.378 mo(\261)shYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf154.683 241.636 mo(.Differentbarsrepresentdifferent)[6.6423 6.47105 2.49266 2.76338 2.98575 3.98108 2.98575 3.98108 4.4832 6.90323 4.4832 3.98108 2.98575 7.89319 2.98575 3.98108 4.48322 2.98573 3.98109 3.48799 3.98108 4.4832 6.89426 4.48233 2.49265 2.76337 2.98575 3.98108 2.98575 3.98108 4.48318 0 ]xsh40.5353 252.589 mo(transferchannels.)[2.49266 2.98574 3.98109 4.4832 3.488 2.98574 3.98109 5.22913 3.98109 4.4832 3.98109 4.4832 4.4832 3.98108 2.49266 3.488 0 ]xshgsave
515.717 -417.494 mo
335.592 -417.494 li
335.592 -250.448 li
515.717 -250.448 li
cp
clp
.355 lw
0 lj
511.218 -417.316 mo
511.218 -414.948 li
469.889 -417.316 mo
469.889 -414.948 li
428.442 -417.316 mo
428.442 -414.948 li
387.112 -417.316 mo
387.112 -414.948 li
511.218 -275.211 mo
511.218 -277.58 li
469.889 -275.211 mo
469.889 -277.58 li
428.442 -275.211 mo
428.442 -277.58 li
387.112 -275.211 mo
387.112 -277.58 li
511.218 -417.316 mo
511.218 -416.132 li
490.494 -417.316 mo
490.494 -416.132 li
469.889 -417.316 mo
469.889 -416.132 li
449.165 -417.316 mo
449.165 -416.132 li
428.442 -417.316 mo
428.442 -416.132 li
407.718 -417.316 mo
407.718 -416.132 li
387.112 -417.316 mo
387.112 -416.132 li
366.389 -417.316 mo
366.389 -416.132 li
511.218 -275.211 mo
511.218 -276.395 li
490.494 -275.211 mo
490.494 -276.395 li
469.889 -275.211 mo
469.889 -276.395 li
449.165 -275.211 mo
449.165 -276.395 li
428.442 -275.211 mo
428.442 -276.395 li
407.718 -275.211 mo
407.718 -276.395 li
387.112 -275.211 mo
387.112 -276.395 li
366.389 -275.211 mo
366.389 -276.395 li
511.218 -368.882 mo
508.85 -368.882 li
511.218 -331.698 mo
508.85 -331.698 li
511.218 -294.632 mo
508.85 -294.632 li
366.389 -368.882 mo
368.758 -368.882 li
366.389 -331.698 mo
368.758 -331.698 li
366.389 -294.632 mo
368.758 -294.632 li
511.218 -404.409 mo
510.034 -404.409 li
511.218 -402.514 mo
510.034 -402.514 li
511.218 -400.264 mo
510.034 -400.264 li
511.218 -397.777 mo
510.034 -397.777 li
511.218 -394.934 mo
510.034 -394.934 li
511.218 -391.264 mo
510.034 -391.264 li
511.218 -386.646 mo
510.034 -386.646 li
511.218 -380.132 mo
510.034 -380.132 li
511.218 -368.882 mo
510.034 -368.882 li
511.218 -367.224 mo
510.034 -367.224 li
511.218 -365.329 mo
510.034 -365.329 li
511.218 -363.198 mo
510.034 -363.198 li
511.218 -360.711 mo
510.034 -360.711 li
511.218 -357.751 mo
510.034 -357.751 li
511.218 -354.079 mo
510.034 -354.079 li
511.218 -349.461 mo
510.034 -349.461 li
511.218 -342.948 mo
510.034 -342.948 li
511.218 -331.698 mo
510.034 -331.698 li
511.218 -330.04 mo
510.034 -330.04 li
511.218 -328.145 mo
510.034 -328.145 li
511.218 -326.014 mo
510.034 -326.014 li
511.218 -323.527 mo
510.034 -323.527 li
511.218 -320.566 mo
510.034 -320.566 li
511.218 -317.014 mo
510.034 -317.014 li
511.218 -312.276 mo
510.034 -312.276 li
511.218 -305.764 mo
510.034 -305.764 li
511.218 -294.632 mo
510.034 -294.632 li
511.218 -292.855 mo
510.034 -292.855 li
511.218 -290.961 mo
510.034 -290.961 li
511.218 -288.83 mo
510.034 -288.83 li
511.218 -286.344 mo
510.034 -286.344 li
511.218 -283.383 mo
510.034 -283.383 li
511.218 -279.829 mo
510.034 -279.829 li
511.218 -275.211 mo
510.034 -275.211 li
366.389 -404.409 mo
367.573 -404.409 li
366.389 -402.514 mo
367.573 -402.514 li
366.389 -400.264 mo
367.573 -400.264 li
366.389 -397.777 mo
367.573 -397.777 li
366.389 -394.934 mo
367.573 -394.934 li
366.389 -391.264 mo
367.573 -391.264 li
366.389 -386.646 mo
367.573 -386.646 li
366.389 -380.132 mo
367.573 -380.132 li
366.389 -368.882 mo
367.573 -368.882 li
366.389 -367.224 mo
367.573 -367.224 li
366.389 -365.329 mo
367.573 -365.329 li
366.389 -363.198 mo
367.573 -363.198 li
366.389 -360.711 mo
367.573 -360.711 li
366.389 -357.751 mo
367.573 -357.751 li
366.389 -354.079 mo
367.573 -354.079 li
366.389 -349.461 mo
367.573 -349.461 li
366.389 -342.948 mo
367.573 -342.948 li
366.389 -331.698 mo
367.573 -331.698 li
366.389 -330.04 mo
367.573 -330.04 li
366.389 -328.145 mo
367.573 -328.145 li
366.389 -326.014 mo
367.573 -326.014 li
366.389 -323.527 mo
367.573 -323.527 li
366.389 -320.566 mo
367.573 -320.566 li
366.389 -317.014 mo
367.573 -317.014 li
366.389 -312.276 mo
367.573 -312.276 li
366.389 -305.764 mo
367.573 -305.764 li
366.389 -294.632 mo
367.573 -294.632 li
366.389 -292.855 mo
367.573 -292.855 li
366.389 -290.961 mo
367.573 -290.961 li
366.389 -288.83 mo
367.573 -288.83 li
366.389 -286.344 mo
367.573 -286.344 li
366.389 -283.383 mo
367.573 -283.383 li
366.389 -279.829 mo
367.573 -279.829 li
366.389 -275.211 mo
367.573 -275.211 li
.694423 .677272 .637385 .738643 cmyk
@
grestore
.694423 .677272 .637385 .738643 cmyk
%ADOBeginSubsetFont: SBVPMX+TimesNewRomanPS Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /SBVPMX+TimesNewRomanPS def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1988, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times New Roman is a trademark of the Monotype Corporation Plc registered in the US Patent and TM Office and elsewhere.) def/Weight (Roman) def/ItalicAngle 0 def/BaseFontName (TimesNewRomanPS) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 67 /C putdup 77 /M putdup 81 /Q putdup 86 /V putdup 91 /bracketleft putdup 93 /bracketright putdup 101 /e putdup 110 /n putdup 111 /o putdup 115 /s putdup 116 /t putdup 117 /u putdup 127 /minus putdef/FontBBox {-167 -216 1009 878} defendsystemdict begindup /Private10 dict dup begin/|- {def} def/| {put} def/BlueValues [-15 -0 662 677 447 461 694 694] def/OtherBlues [384 384 -216 -213] def/StdHW [36] def/StdVW [87] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings21 dict dup begin/space <1C60D8A8C9B8707C25> |-/zero <1C60D8A8C9B7A73D33B1D1416E04E763984AB83B925BA8A4FDE215501CA86FB8A0453E2C2116D4EBB36C4E7E5E28E3C02FDE0FF4A749E3E3B61D0B5972B2FA36E008E079A694D81C4B7A2CE9635E3FDFE8FE87FF8DA92D> |-/one <1C60D8A8C9B7A73DC54E0D6CDEF63D6D8B1D1BAFF1FE96FACEB5D2E94CC33A048E79C70D79DA501F0FEDC03A8E3E458B1265FD28A5171BD1D7126471227C327E28D3395C> |-/two <1C60D8A8C9B7A73DC506FC27B647F3B220444418F84A63EEA0C85378D83FED067EE2616181F53C98E193A0786AFABC6AF3DE813E5DFEF95B86E3C09F0D4E4645F3E651EA1566CD58B7401E11D694DED682CB44FAD00D6F212FF07D> |-/three <1C60D8A8C9B7A73D33A01A1054C882E3E266AB9E20905BA640379B187EB6EBABF905E8CC50AED6B5FC34D0C1498F28808D72D7E0888E388EF7E4E369B1D9FA4BF0B525DDD6C359F5B06C0A93F3D1969130948DD8BC2D312D26A983C358CE52223BD90A9BC09D3854AEBC026CBBB15C22879B549123DF14A809BA94548C95DE9920DB766F5E> |-/four <1C60D8A8C9B7A73DB96726F82EC389232F73A7B6E7875DC9A46EF4FEC7F3D5E23D7BF70B540998FC5CC08E09E16340F0B45A6DECA08B4B9468D4E4B393F67B7110F71363573BAD8DD1FBA20AE97EE1AF738E6778F333F5BC98166EAE94F95B7717> |-/five <1C60D8A8C9B7A73D33A7C131526B80A16A362E096FD4079A6DA447FC592CE50E05C444F03F4DE25BC455446EB10265A6929854EAB3F755631C90267B50E2016F6B8C24401E3E0E13F1BC900E4A2A974AAD23E1A92F16F2A187> |-/C <1C60D8A8C9B64EDF7FCB1225CBEBAD7C2A1CDCAA154679A537BCF30C436AC0686DBF251E622CF18D32C29E14A13579E37F151EDC74261EA3C2645F3C009649E8FB800A09E17F1093EAEBAA6F4D561E521DEB52CBB9CC47D2A1DC16423790240EA0E7F9DA2BA7D79446F5CBA5E01E4CAFD0AFED04> |-/M <1C60D8A8C9B59F859BE36722F335C424A3959F3C40788D59DD8002721512B63F78C2CD40476BE632847058326A18680A51A56F350AFC4601E106D85D9935C71758FE4B99DBAD8FB00FF6547655EDC5ADFF53E68939F2E851D8568D22302C2C338F02446444A7B8C22A8A2420B3FB18D904D3E7> |-/Q <1C60D8A8C9B6079F6E02C9DA269270C5FCDED9146BB469F33CE6613B8C6C56187601C4763E04A25451AD4E7C9E186FD85AB83F3E30A17A58EBFBFA36DBA6CCE6C6E905E000287105EAFAEA0B660FE5E87063F9C3EAA64AEBD40CE32C9BEDA6F8C6D843B8D268C5D02CE259394A1EB422C484A5451B85781837883DA674CBBDFFFB8E> |-/V <1C60D8A8C9B6079F04A83E3B4E883805E50F0DF991CF8D253E7AC58EBBA67FB1D8E3B74B44AE939977C7855B691FDD2839D7955C25E1E1C4A5F8656B5FA0C006CB839E1339D47D3A599E0B9E9A0EC6884B72376B73C46E097A0F435E559D0069C3F87F> |-/bracketleft <1C60D8A8C9B81F2C36D8E73806322164F168F3E390041BCFDD43E533FD7FC74339F2B75EEC9B10D3B81F4C9B5F> |-/bracketright <1C60D8A8C9B81F2C36D8E73806322164DBB51B216257DA0F9A0B5E3BF60636EB3EFFFC65821B3952CF2758C6A9> |-/e <1C60D8A8C9B77FE2440C4A0C4012CA2ADDAA2063D74E7F1A056744D16DC4F1711CD9A18819F63D090F36F7759337998C39810BF5A75C4828A06DD1AF80A5B613D3D44E1887EDB74C939F0B6ED071D10A7C11B64F96C2949994CF7E72507E> |-/n <1C60D8A8C9B7A73DC54E0D6D91C3E91980CDB9ED8628529863FDA8E59433DE6741508E85BB48DEA8D8F35995C79E16FB246C14C08E968E06B7EB28A263EA4D02C2D4AC4FF358B280A76FE85394C58F344B6383A76E82DD831EC580F79F58C4C189013A273849481BB8E811BC56A157758889E377E0218E8E3AA75D3961996A62> |-/o <1C60D8A8C9B7A73D33B50B81AA1C79BFF5C80FF2E6B8582B3CBFC870793B8FCBB77F0EA55A311ED358B8FECB0DAF14839129AE21B31EDE6FF983A864436BE5880861C7AF605C2602EA8055F331AD0A14B46B75CF9DDA28DB> |-/s <1C60D8A8C9B7361F8817B24EDEBB3FEC23877BE06B4CEA431A203FA263480C82808DCDEF37434DC884CF47A95CFCA2EEFAE99363DF76BC32A4A07D0232E5A432177ACA5E94D85D520D9267F1BD03F3AA6F88055ECBD1847E79381F934A9F5A9CC398C1DBE6D1B6CA73CB7F71726529B6F74D3A0A410B63E551B4D3BB0E0FC526EE41AB7B0F71BEF97FB54247D7B1532BDEC7109C003CC2F9DC8E8468D906B41158ABD0EBEE0C4CFFBA60ED5114E2F3A6F07E68F4E4032CE723218BD2A56FB0E9C95C1EC44495195BACD012C08EA23526D3781F86E8D57E9389843E1A161250B27E692D1CC610434E460204D49E2F917C981F12C0F7E47A2C> |-/t <1C60D8A8C9B854D086439EA80B8393FEADC0052C70F648CAC1AE89BB317E735756E59E2E6F0095662D082F1C3CCBBEC180A0941B60E580CB7338163E763332C8A3E3C3B391BD27C4C84B1B4827> |-/u <1C60D8A8C9B7A73D33DFE69D77A124916B7E1247C1A9BF81A03F8ADE493085B97B716714DB79C7E9E35F4FCC1FEA9A2AD34D5DD72DDBDA28BEC83229FFB3DCB856708631257C0CA18B8CBF0BD48443F165C669304820FA055457C072B0393455C28F77520D28B094D4B8D54FD8> |-/minus <1C60D8A8C9B7E7C1AF2D8FDC8194CD280627469400F3168EF4DD6F92805D> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YOSQSJ+TimesNewRomanPS /SBVPMX+TimesNewRomanPS findfont ct_VMDictPut/YOSQSJ+TimesNewRomanPS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 13{/.notdef}rp /C 9{/.notdef}rp /M 3{/.notdef}rp /Q 4{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 8{/.notdef}rp /n /o 3{/.notdef}rp /s /t /u 9{/.notdef}rp /minus 128{/.notdef}rp]YOSQSJ+TimesNewRomanPS nfYOSQSJ+TimesNewRomanPS*1 [9 0 0 -9 0 0 ]msf384.864 -264.671 mo(051015)[41.328 39.1968 4.5 36.8289 4.5 0 ]xshYOSQSJ+TimesNewRomanPS*1 [9.3789 0 0 -9.3789 0 0 ]msf426.262 -252.474 mo(\177Q  [MeV])[5.28964 6.77158 2.34473 2.34473 3.12311 8.33792 4.16422 6.77158 0 ]xshYOSQSJ+TimesNewRomanPS*1 [9 0 0 -9 0 0 ]msf349.928 -291.67 mo(10)[4.5 0 ]xshYOSQSJ+TimesNewRomanPS*1 [5.3289 0 0 -5.3289 0 0 ]msf358.929 -297 mo(1)shYOSQSJ+TimesNewRomanPS*1 [9 0 0 -9 0 0 ]msf349.928 -328.736 mo(10)[4.5 0 ]xshYOSQSJ+TimesNewRomanPS*1 [5.3289 0 0 -5.3289 0 0 ]msf358.929 -334.066 mo(2)shYOSQSJ+TimesNewRomanPS*1 [9 0 0 -9 0 0 ]msf349.928 -365.921 mo(10)[4.5 0 ]xshYOSQSJ+TimesNewRomanPS*1 [5.3289 0 0 -5.3289 0 0 ]msf358.929 -371.25 mo(3)shYOSQSJ+TimesNewRomanPS*1 [9 0 0 -9 0 0 ]msf349.928 -403.105 mo(10)[4.5 0 ]xshYOSQSJ+TimesNewRomanPS*1 [5.3289 0 0 -5.3289 0 0 ]msf358.929 -408.435 mo(4)shYOSQSJ+TimesNewRomanPS*1 [0 -9.2724 -9.2724 0 0 0 ]msf343.297 -331.664 mo(Counts)[-6.18475 -4.63623 -4.63617 -4.63623 -2.5777 0 ]ysh.4 lw
0 lj
369.587 -283.855 mo
373.139 -311.685 li
376.81 -342.119 li
380.482 -394.698 li
384.152 -411.395 li
387.705 -412.816 li
391.376 -407.251 li
395.047 -392.804 li
398.718 -384.987 li
402.271 -381.553 li
405.942 -374.922 li
409.613 -362.132 li
413.284 -350.527 li
416.836 -345.434 li
420.508 -343.777 li
424.179 -342.948 li
427.85 -340.343 li
431.402 -335.605 li
435.073 -328.975 li
438.744 -325.777 li
442.415 -324.237 li
445.968 -321.632 li
449.639 -317.014 li
453.31 -313.343 li
456.982 -304.579 li
460.534 -307.066 li
464.205 -307.066 li
467.876 -301.619 li
471.548 -295.106 li
475.1 -298.066 li
478.771 -299.251 li
482.442 -301.619 li
486.113 -291.435 li
489.665 -293.33 li
493.337 -291.435 li
500.679 -291.435 li
504.232 -275.685 li
507.903 -289.304 li
511.218 -284.33 li
507.903 -293.449 mo
507.903 -293.449 li
507.903 -283.737 mo
507.903 -283.737 li
504.232 -281.724 mo
504.232 -281.724 li
500.679 -295.344 mo
500.679 -295.344 li
500.679 -286.344 mo
500.679 -286.344 li
497.008 -295.224 mo
497.008 -295.224 li
497.008 -286.58 mo
497.008 -286.58 li
493.337 -295.224 mo
493.337 -295.224 li
493.337 -286.58 mo
493.337 -286.58 li
489.665 -297.001 mo
489.665 -297.001 li
489.665 -288.711 mo
489.665 -288.711 li
486.113 -295.224 mo
486.113 -295.224 li
486.113 -286.58 mo
486.113 -286.58 li
482.442 -304.461 mo
482.442 -304.461 li
482.442 -298.066 mo
482.442 -298.066 li
478.771 -302.33 mo
478.771 -302.33 li
478.771 -295.579 mo
478.771 -295.579 li
475.1 -301.265 mo
475.1 -301.265 li
475.1 -294.04 mo
475.1 -294.04 li
471.548 -298.658 mo
471.548 -298.658 li
471.548 -290.488 mo
471.548 -290.488 li
467.876 -304.461 mo
467.876 -304.461 li
467.876 -298.066 mo
467.876 -298.066 li
464.205 -309.553 mo
464.205 -309.553 li
464.205 -304.106 mo
464.205 -304.106 li
460.534 -309.553 mo
460.534 -309.553 li
460.534 -304.106 mo
460.534 -304.106 li
456.982 -307.184 mo
456.982 -307.184 li
456.982 -301.383 mo
456.982 -301.383 li
453.31 -315.355 mo
453.31 -315.355 li
453.31 -310.974 mo
453.31 -310.974 li
449.639 -318.79 mo
449.639 -318.79 li
449.639 -315.001 mo
449.639 -315.001 li
445.968 -323.29 mo
445.968 -323.29 li
445.968 -319.975 mo
445.968 -319.975 li
442.415 -325.658 mo
442.415 -325.658 li
442.415 -322.698 mo
442.415 -322.698 li
438.744 -327.198 mo
438.744 -327.198 li
438.744 -324.237 mo
438.744 -324.237 li
435.073 -330.277 mo
435.073 -330.277 li
435.073 -327.672 mo
435.073 -327.672 li
431.402 -336.554 mo
431.402 -336.554 li
431.402 -334.422 mo
431.402 -334.422 li
427.85 -341.172 mo
427.85 -341.172 li
427.85 -339.396 mo
427.85 -339.396 li
424.179 -343.777 mo
424.179 -343.777 li
424.179 -342.001 mo
424.179 -342.001 li
420.508 -344.606 mo
420.508 -344.606 li
420.508 -342.948 mo
420.508 -342.948 li
416.836 -346.146 mo
416.836 -346.146 li
416.836 -344.606 mo
416.836 -344.606 li
413.284 -351.237 mo
413.284 -351.237 li
413.284 -349.816 mo
413.284 -349.816 li
409.613 -362.606 mo
409.613 -362.606 li
409.613 -361.658 mo
409.613 -361.658 li
405.942 -375.158 mo
405.942 -375.158 li
405.942 -374.566 mo
405.942 -374.566 li
402.271 -381.79 mo
402.271 -381.79 li
402.271 -381.316 mo
402.271 -381.316 li
398.718 -385.224 mo
398.718 -385.224 li
398.718 -384.75 mo
398.718 -384.75 li
395.047 -393.04 mo
395.047 -393.04 li
395.047 -392.684 mo
395.047 -392.684 li
391.376 -407.369 mo
391.376 -407.369 li
391.376 -407.132 mo
391.376 -407.132 li
387.705 -412.935 mo
387.705 -412.935 li
387.705 -412.816 mo
387.705 -412.816 li
384.152 -411.514 mo
384.152 -411.514 li
384.152 -411.277 mo
384.152 -411.277 li
380.482 -394.934 mo
380.482 -394.934 li
380.482 -394.579 mo
380.482 -394.579 li
376.81 -343.066 mo
376.81 -343.066 li
376.81 -341.29 mo
376.81 -341.29 li
373.139 -313.816 mo
373.139 -313.816 li
373.139 -309.198 mo
373.139 -309.198 li
369.587 -288.83 mo
369.587 -288.83 li
369.587 -276.75 mo
369.587 -276.75 li
507.903 -283.737 mo
507.903 -293.449 li
504.232 -275.211 mo
504.232 -281.724 li
500.679 -286.344 mo
500.679 -295.344 li
497.008 -286.58 mo
497.008 -295.224 li
493.337 -286.58 mo
493.337 -295.224 li
489.665 -288.711 mo
489.665 -297.001 li
486.113 -286.58 mo
486.113 -295.224 li
482.442 -298.066 mo
482.442 -304.461 li
478.771 -295.579 mo
478.771 -302.33 li
475.1 -294.04 mo
475.1 -301.265 li
471.548 -290.488 mo
471.548 -298.658 li
467.876 -298.066 mo
467.876 -304.461 li
464.205 -304.106 mo
464.205 -309.553 li
460.534 -304.106 mo
460.534 -309.553 li
456.982 -301.383 mo
456.982 -307.184 li
453.31 -310.974 mo
453.31 -315.355 li
449.639 -315.001 mo
449.639 -318.79 li
445.968 -319.975 mo
445.968 -323.29 li
442.415 -322.698 mo
442.415 -325.658 li
438.744 -324.237 mo
438.744 -327.198 li
435.073 -327.672 mo
435.073 -330.277 li
431.402 -334.422 mo
431.402 -336.554 li
427.85 -339.396 mo
427.85 -341.172 li
424.179 -342.001 mo
424.179 -343.777 li
420.508 -342.948 mo
420.508 -344.606 li
416.836 -344.606 mo
416.836 -346.146 li
413.284 -349.816 mo
413.284 -351.237 li
409.613 -361.658 mo
409.613 -362.606 li
405.942 -374.566 mo
405.942 -375.158 li
402.271 -381.316 mo
402.271 -381.79 li
398.718 -384.75 mo
398.718 -385.224 li
395.047 -392.684 mo
395.047 -393.04 li
391.376 -407.132 mo
391.376 -407.369 li
387.705 -412.816 mo
387.705 -412.935 li
384.152 -411.277 mo
384.152 -411.514 li
380.482 -394.579 mo
380.482 -394.934 li
376.81 -341.29 mo
376.81 -343.066 li
373.139 -309.198 mo
373.139 -313.816 li
369.587 -276.75 mo
369.587 -288.83 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
371.067 -283.916 mo
371.067 -284.765 370.377 -285.455 369.527 -285.455 cv
368.677 -285.455 367.987 -284.765 367.987 -283.916 cv
367.987 -283.065 368.677 -282.375 369.527 -282.375 cv
370.377 -282.375 371.067 -283.065 371.067 -283.916 cv
0 0 0 0 cmyk
f
.355 lw
371.067 -283.916 mo
371.067 -284.765 370.377 -285.455 369.527 -285.455 cv
368.677 -285.455 367.987 -284.765 367.987 -283.916 cv
367.987 -283.065 368.677 -282.375 369.527 -282.375 cv
370.377 -282.375 371.067 -283.065 371.067 -283.916 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
374.619 -311.744 mo
374.619 -312.594 373.93 -313.283 373.08 -313.283 cv
372.23 -313.283 371.54 -312.594 371.54 -311.744 cv
371.54 -310.894 372.23 -310.205 373.08 -310.205 cv
373.93 -310.205 374.619 -310.894 374.619 -311.744 cv
0 0 0 0 cmyk
f
374.619 -311.744 mo
374.619 -312.594 373.93 -313.283 373.08 -313.283 cv
372.23 -313.283 371.54 -312.594 371.54 -311.744 cv
371.54 -310.894 372.23 -310.205 373.08 -310.205 cv
373.93 -310.205 374.619 -310.894 374.619 -311.744 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
378.29 -342.178 mo
378.29 -343.028 377.601 -343.718 376.751 -343.718 cv
375.902 -343.718 375.212 -343.028 375.212 -342.178 cv
375.212 -341.329 375.902 -340.639 376.751 -340.639 cv
377.601 -340.639 378.29 -341.329 378.29 -342.178 cv
0 0 0 0 cmyk
f
378.29 -342.178 mo
378.29 -343.028 377.601 -343.718 376.751 -343.718 cv
375.902 -343.718 375.212 -343.028 375.212 -342.178 cv
375.212 -341.329 375.902 -340.639 376.751 -340.639 cv
377.601 -340.639 378.29 -341.329 378.29 -342.178 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
381.962 -394.757 mo
381.962 -395.607 381.272 -396.297 380.422 -396.297 cv
379.572 -396.297 378.882 -395.607 378.882 -394.757 cv
378.882 -393.907 379.572 -393.218 380.422 -393.218 cv
381.272 -393.218 381.962 -393.907 381.962 -394.757 cv
0 0 0 0 cmyk
f
381.962 -394.757 mo
381.962 -395.607 381.272 -396.297 380.422 -396.297 cv
379.572 -396.297 378.882 -395.607 378.882 -394.757 cv
378.882 -393.907 379.572 -393.218 380.422 -393.218 cv
381.272 -393.218 381.962 -393.907 381.962 -394.757 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
385.632 -411.395 mo
385.632 -412.245 384.943 -412.935 384.093 -412.935 cv
383.243 -412.935 382.554 -412.245 382.554 -411.395 cv
382.554 -410.546 383.243 -409.855 384.093 -409.855 cv
384.943 -409.855 385.632 -410.546 385.632 -411.395 cv
0 0 0 0 cmyk
f
385.632 -411.395 mo
385.632 -412.245 384.943 -412.935 384.093 -412.935 cv
383.243 -412.935 382.554 -412.245 382.554 -411.395 cv
382.554 -410.546 383.243 -409.855 384.093 -409.855 cv
384.943 -409.855 385.632 -410.546 385.632 -411.395 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
389.185 -412.816 mo
389.185 -413.666 388.495 -414.355 387.646 -414.355 cv
386.796 -414.355 386.106 -413.666 386.106 -412.816 cv
386.106 -411.967 386.796 -411.277 387.646 -411.277 cv
388.495 -411.277 389.185 -411.967 389.185 -412.816 cv
0 0 0 0 cmyk
f
389.185 -412.816 mo
389.185 -413.666 388.495 -414.355 387.646 -414.355 cv
386.796 -414.355 386.106 -413.666 386.106 -412.816 cv
386.106 -411.967 386.796 -411.277 387.646 -411.277 cv
388.495 -411.277 389.185 -411.967 389.185 -412.816 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
392.857 -407.251 mo
392.857 -408.101 392.167 -408.79 391.317 -408.79 cv
390.467 -408.79 389.777 -408.101 389.777 -407.251 cv
389.777 -406.401 390.467 -405.711 391.317 -405.711 cv
392.167 -405.711 392.857 -406.401 392.857 -407.251 cv
0 0 0 0 cmyk
f
392.857 -407.251 mo
392.857 -408.101 392.167 -408.79 391.317 -408.79 cv
390.467 -408.79 389.777 -408.101 389.777 -407.251 cv
389.777 -406.401 390.467 -405.711 391.317 -405.711 cv
392.167 -405.711 392.857 -406.401 392.857 -407.251 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
396.527 -392.862 mo
396.527 -393.712 395.838 -394.402 394.987 -394.402 cv
394.138 -394.402 393.448 -393.712 393.448 -392.862 cv
393.448 -392.013 394.138 -391.323 394.987 -391.323 cv
395.838 -391.323 396.527 -392.013 396.527 -392.862 cv
0 0 0 0 cmyk
f
396.527 -392.862 mo
396.527 -393.712 395.838 -394.402 394.987 -394.402 cv
394.138 -394.402 393.448 -393.712 393.448 -392.862 cv
393.448 -392.013 394.138 -391.323 394.987 -391.323 cv
395.838 -391.323 396.527 -392.013 396.527 -392.862 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
400.198 -385.047 mo
400.198 -385.896 399.509 -386.586 398.659 -386.586 cv
397.81 -386.586 397.119 -385.896 397.119 -385.047 cv
397.119 -384.197 397.81 -383.507 398.659 -383.507 cv
399.509 -383.507 400.198 -384.197 400.198 -385.047 cv
0 0 0 0 cmyk
f
400.198 -385.047 mo
400.198 -385.896 399.509 -386.586 398.659 -386.586 cv
397.81 -386.586 397.119 -385.896 397.119 -385.047 cv
397.119 -384.197 397.81 -383.507 398.659 -383.507 cv
399.509 -383.507 400.198 -384.197 400.198 -385.047 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
403.751 -381.612 mo
403.751 -382.462 403.061 -383.152 402.212 -383.152 cv
401.361 -383.152 400.672 -382.462 400.672 -381.612 cv
400.672 -380.763 401.361 -380.073 402.212 -380.073 cv
403.061 -380.073 403.751 -380.763 403.751 -381.612 cv
0 0 0 0 cmyk
f
403.751 -381.612 mo
403.751 -382.462 403.061 -383.152 402.212 -383.152 cv
401.361 -383.152 400.672 -382.462 400.672 -381.612 cv
400.672 -380.763 401.361 -380.073 402.212 -380.073 cv
403.061 -380.073 403.751 -380.763 403.751 -381.612 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
407.422 -374.981 mo
407.422 -375.83 406.733 -376.521 405.882 -376.521 cv
405.033 -376.521 404.344 -375.83 404.344 -374.981 cv
404.344 -374.131 405.033 -373.441 405.882 -373.441 cv
406.733 -373.441 407.422 -374.131 407.422 -374.981 cv
0 0 0 0 cmyk
f
407.422 -374.981 mo
407.422 -375.83 406.733 -376.521 405.882 -376.521 cv
405.033 -376.521 404.344 -375.83 404.344 -374.981 cv
404.344 -374.131 405.033 -373.441 405.882 -373.441 cv
406.733 -373.441 407.422 -374.131 407.422 -374.981 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
411.093 -362.191 mo
411.093 -363.041 410.404 -363.73 409.554 -363.73 cv
408.704 -363.73 408.014 -363.041 408.014 -362.191 cv
408.014 -361.342 408.704 -360.652 409.554 -360.652 cv
410.404 -360.652 411.093 -361.342 411.093 -362.191 cv
0 0 0 0 cmyk
f
411.093 -362.191 mo
411.093 -363.041 410.404 -363.73 409.554 -363.73 cv
408.704 -363.73 408.014 -363.041 408.014 -362.191 cv
408.014 -361.342 408.704 -360.652 409.554 -360.652 cv
410.404 -360.652 411.093 -361.342 411.093 -362.191 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
414.764 -350.586 mo
414.764 -351.436 414.074 -352.125 413.225 -352.125 cv
412.375 -352.125 411.686 -351.436 411.686 -350.586 cv
411.686 -349.736 412.375 -349.047 413.225 -349.047 cv
414.074 -349.047 414.764 -349.736 414.764 -350.586 cv
0 0 0 0 cmyk
f
414.764 -350.586 mo
414.764 -351.436 414.074 -352.125 413.225 -352.125 cv
412.375 -352.125 411.686 -351.436 411.686 -350.586 cv
411.686 -349.736 412.375 -349.047 413.225 -349.047 cv
414.074 -349.047 414.764 -349.736 414.764 -350.586 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
418.317 -345.494 mo
418.317 -346.344 417.627 -347.033 416.777 -347.033 cv
415.928 -347.033 415.237 -346.344 415.237 -345.494 cv
415.237 -344.644 415.928 -343.954 416.777 -343.954 cv
417.627 -343.954 418.317 -344.644 418.317 -345.494 cv
0 0 0 0 cmyk
f
418.317 -345.494 mo
418.317 -346.344 417.627 -347.033 416.777 -347.033 cv
415.928 -347.033 415.237 -346.344 415.237 -345.494 cv
415.237 -344.644 415.928 -343.954 416.777 -343.954 cv
417.627 -343.954 418.317 -344.644 418.317 -345.494 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
421.988 -343.836 mo
421.988 -344.685 421.298 -345.376 420.448 -345.376 cv
419.599 -345.376 418.909 -344.685 418.909 -343.836 cv
418.909 -342.986 419.599 -342.297 420.448 -342.297 cv
421.298 -342.297 421.988 -342.986 421.988 -343.836 cv
0 0 0 0 cmyk
f
421.988 -343.836 mo
421.988 -344.685 421.298 -345.376 420.448 -345.376 cv
419.599 -345.376 418.909 -344.685 418.909 -343.836 cv
418.909 -342.986 419.599 -342.297 420.448 -342.297 cv
421.298 -342.297 421.988 -342.986 421.988 -343.836 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
425.659 -343.007 mo
425.659 -343.857 424.969 -344.547 424.119 -344.547 cv
423.27 -344.547 422.58 -343.857 422.58 -343.007 cv
422.58 -342.157 423.27 -341.468 424.119 -341.468 cv
424.969 -341.468 425.659 -342.157 425.659 -343.007 cv
0 0 0 0 cmyk
f
425.659 -343.007 mo
425.659 -343.857 424.969 -344.547 424.119 -344.547 cv
423.27 -344.547 422.58 -343.857 422.58 -343.007 cv
422.58 -342.157 423.27 -341.468 424.119 -341.468 cv
424.969 -341.468 425.659 -342.157 425.659 -343.007 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
429.33 -340.402 mo
429.33 -341.252 428.64 -341.941 427.79 -341.941 cv
426.941 -341.941 426.251 -341.252 426.251 -340.402 cv
426.251 -339.552 426.941 -338.862 427.79 -338.862 cv
428.64 -338.862 429.33 -339.552 429.33 -340.402 cv
0 0 0 0 cmyk
f
429.33 -340.402 mo
429.33 -341.252 428.64 -341.941 427.79 -341.941 cv
426.941 -341.941 426.251 -341.252 426.251 -340.402 cv
426.251 -339.552 426.941 -338.862 427.79 -338.862 cv
428.64 -338.862 429.33 -339.552 429.33 -340.402 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
432.882 -335.665 mo
432.882 -336.515 432.194 -337.204 431.343 -337.204 cv
430.493 -337.204 429.804 -336.515 429.804 -335.665 cv
429.804 -334.815 430.493 -334.125 431.343 -334.125 cv
432.194 -334.125 432.882 -334.815 432.882 -335.665 cv
0 0 0 0 cmyk
f
432.882 -335.665 mo
432.882 -336.515 432.194 -337.204 431.343 -337.204 cv
430.493 -337.204 429.804 -336.515 429.804 -335.665 cv
429.804 -334.815 430.493 -334.125 431.343 -334.125 cv
432.194 -334.125 432.882 -334.815 432.882 -335.665 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
436.554 -329.034 mo
436.554 -329.883 435.864 -330.573 435.014 -330.573 cv
434.164 -330.573 433.475 -329.883 433.475 -329.034 cv
433.475 -328.184 434.164 -327.494 435.014 -327.494 cv
435.864 -327.494 436.554 -328.184 436.554 -329.034 cv
0 0 0 0 cmyk
f
436.554 -329.034 mo
436.554 -329.883 435.864 -330.573 435.014 -330.573 cv
434.164 -330.573 433.475 -329.883 433.475 -329.034 cv
433.475 -328.184 434.164 -327.494 435.014 -327.494 cv
435.864 -327.494 436.554 -328.184 436.554 -329.034 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
440.225 -325.836 mo
440.225 -326.686 439.535 -327.376 438.685 -327.376 cv
437.836 -327.376 437.146 -326.686 437.146 -325.836 cv
437.146 -324.986 437.836 -324.297 438.685 -324.297 cv
439.535 -324.297 440.225 -324.986 440.225 -325.836 cv
0 0 0 0 cmyk
f
440.225 -325.836 mo
440.225 -326.686 439.535 -327.376 438.685 -327.376 cv
437.836 -327.376 437.146 -326.686 437.146 -325.836 cv
437.146 -324.986 437.836 -324.297 438.685 -324.297 cv
439.535 -324.297 440.225 -324.986 440.225 -325.836 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
443.896 -324.297 mo
443.896 -325.146 443.206 -325.836 442.357 -325.836 cv
441.507 -325.836 440.817 -325.146 440.817 -324.297 cv
440.817 -323.447 441.507 -322.757 442.357 -322.757 cv
443.206 -322.757 443.896 -323.447 443.896 -324.297 cv
0 0 0 0 cmyk
f
443.896 -324.297 mo
443.896 -325.146 443.206 -325.836 442.357 -325.836 cv
441.507 -325.836 440.817 -325.146 440.817 -324.297 cv
440.817 -323.447 441.507 -322.757 442.357 -322.757 cv
443.206 -322.757 443.896 -323.447 443.896 -324.297 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
447.448 -321.691 mo
447.448 -322.541 446.759 -323.23 445.909 -323.23 cv
445.059 -323.23 444.37 -322.541 444.37 -321.691 cv
444.37 -320.842 445.059 -320.152 445.909 -320.152 cv
446.759 -320.152 447.448 -320.842 447.448 -321.691 cv
0 0 0 0 cmyk
f
447.448 -321.691 mo
447.448 -322.541 446.759 -323.23 445.909 -323.23 cv
445.059 -323.23 444.37 -322.541 444.37 -321.691 cv
444.37 -320.842 445.059 -320.152 445.909 -320.152 cv
446.759 -320.152 447.448 -320.842 447.448 -321.691 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
451.119 -317.073 mo
451.119 -317.923 450.43 -318.612 449.58 -318.612 cv
448.731 -318.612 448.04 -317.923 448.04 -317.073 cv
448.04 -316.223 448.731 -315.534 449.58 -315.534 cv
450.43 -315.534 451.119 -316.223 451.119 -317.073 cv
0 0 0 0 cmyk
f
451.119 -317.073 mo
451.119 -317.923 450.43 -318.612 449.58 -318.612 cv
448.731 -318.612 448.04 -317.923 448.04 -317.073 cv
448.04 -316.223 448.731 -315.534 449.58 -315.534 cv
450.43 -315.534 451.119 -316.223 451.119 -317.073 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
454.79 -313.402 mo
454.79 -314.252 454.101 -314.941 453.251 -314.941 cv
452.402 -314.941 451.711 -314.252 451.711 -313.402 cv
451.711 -312.552 452.402 -311.862 453.251 -311.862 cv
454.101 -311.862 454.79 -312.552 454.79 -313.402 cv
0 0 0 0 cmyk
f
454.79 -313.402 mo
454.79 -314.252 454.101 -314.941 453.251 -314.941 cv
452.402 -314.941 451.711 -314.252 451.711 -313.402 cv
451.711 -312.552 452.402 -311.862 453.251 -311.862 cv
454.101 -311.862 454.79 -312.552 454.79 -313.402 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
458.462 -304.639 mo
458.462 -305.489 457.773 -306.178 456.922 -306.178 cv
456.072 -306.178 455.382 -305.489 455.382 -304.639 cv
455.382 -303.789 456.072 -303.099 456.922 -303.099 cv
457.773 -303.099 458.462 -303.789 458.462 -304.639 cv
0 0 0 0 cmyk
f
458.462 -304.639 mo
458.462 -305.489 457.773 -306.178 456.922 -306.178 cv
456.072 -306.178 455.382 -305.489 455.382 -304.639 cv
455.382 -303.789 456.072 -303.099 456.922 -303.099 cv
457.773 -303.099 458.462 -303.789 458.462 -304.639 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
462.015 -307.126 mo
462.015 -307.975 461.324 -308.665 460.475 -308.665 cv
459.625 -308.665 458.935 -307.975 458.935 -307.126 cv
458.935 -306.275 459.625 -305.586 460.475 -305.586 cv
461.324 -305.586 462.015 -306.275 462.015 -307.126 cv
0 0 0 0 cmyk
f
462.015 -307.126 mo
462.015 -307.975 461.324 -308.665 460.475 -308.665 cv
459.625 -308.665 458.935 -307.975 458.935 -307.126 cv
458.935 -306.275 459.625 -305.586 460.475 -305.586 cv
461.324 -305.586 462.015 -306.275 462.015 -307.126 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
465.685 -307.126 mo
465.685 -307.975 464.995 -308.665 464.146 -308.665 cv
463.296 -308.665 462.607 -307.975 462.607 -307.126 cv
462.607 -306.275 463.296 -305.586 464.146 -305.586 cv
464.995 -305.586 465.685 -306.275 465.685 -307.126 cv
0 0 0 0 cmyk
f
465.685 -307.126 mo
465.685 -307.975 464.995 -308.665 464.146 -308.665 cv
463.296 -308.665 462.607 -307.975 462.607 -307.126 cv
462.607 -306.275 463.296 -305.586 464.146 -305.586 cv
464.995 -305.586 465.685 -306.275 465.685 -307.126 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
469.357 -301.679 mo
469.357 -302.529 468.667 -303.218 467.817 -303.218 cv
466.967 -303.218 466.278 -302.529 466.278 -301.679 cv
466.278 -300.829 466.967 -300.139 467.817 -300.139 cv
468.667 -300.139 469.357 -300.829 469.357 -301.679 cv
0 0 0 0 cmyk
f
469.357 -301.679 mo
469.357 -302.529 468.667 -303.218 467.817 -303.218 cv
466.967 -303.218 466.278 -302.529 466.278 -301.679 cv
466.278 -300.829 466.967 -300.139 467.817 -300.139 cv
468.667 -300.139 469.357 -300.829 469.357 -301.679 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
473.028 -295.165 mo
473.028 -296.015 472.337 -296.705 471.488 -296.705 cv
470.638 -296.705 469.948 -296.015 469.948 -295.165 cv
469.948 -294.316 470.638 -293.626 471.488 -293.626 cv
472.337 -293.626 473.028 -294.316 473.028 -295.165 cv
0 0 0 0 cmyk
f
473.028 -295.165 mo
473.028 -296.015 472.337 -296.705 471.488 -296.705 cv
470.638 -296.705 469.948 -296.015 469.948 -295.165 cv
469.948 -294.316 470.638 -293.626 471.488 -293.626 cv
472.337 -293.626 473.028 -294.316 473.028 -295.165 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
476.58 -298.125 mo
476.58 -298.975 475.89 -299.665 475.041 -299.665 cv
474.191 -299.665 473.501 -298.975 473.501 -298.125 cv
473.501 -297.276 474.191 -296.586 475.041 -296.586 cv
475.89 -296.586 476.58 -297.276 476.58 -298.125 cv
0 0 0 0 cmyk
f
476.58 -298.125 mo
476.58 -298.975 475.89 -299.665 475.041 -299.665 cv
474.191 -299.665 473.501 -298.975 473.501 -298.125 cv
473.501 -297.276 474.191 -296.586 475.041 -296.586 cv
475.89 -296.586 476.58 -297.276 476.58 -298.125 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
480.251 -299.31 mo
480.251 -300.16 479.562 -300.849 478.712 -300.849 cv
477.862 -300.849 477.172 -300.16 477.172 -299.31 cv
477.172 -298.46 477.862 -297.771 478.712 -297.771 cv
479.562 -297.771 480.251 -298.46 480.251 -299.31 cv
0 0 0 0 cmyk
f
480.251 -299.31 mo
480.251 -300.16 479.562 -300.849 478.712 -300.849 cv
477.862 -300.849 477.172 -300.16 477.172 -299.31 cv
477.172 -298.46 477.862 -297.771 478.712 -297.771 cv
479.562 -297.771 480.251 -298.46 480.251 -299.31 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
483.922 -301.679 mo
483.922 -302.529 483.233 -303.218 482.382 -303.218 cv
481.532 -303.218 480.843 -302.529 480.843 -301.679 cv
480.843 -300.829 481.532 -300.139 482.382 -300.139 cv
483.233 -300.139 483.922 -300.829 483.922 -301.679 cv
0 0 0 0 cmyk
f
483.922 -301.679 mo
483.922 -302.529 483.233 -303.218 482.382 -303.218 cv
481.532 -303.218 480.843 -302.529 480.843 -301.679 cv
480.843 -300.829 481.532 -300.139 482.382 -300.139 cv
483.233 -300.139 483.922 -300.829 483.922 -301.679 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
487.593 -291.494 mo
487.593 -292.344 486.904 -293.033 486.054 -293.033 cv
485.204 -293.033 484.514 -292.344 484.514 -291.494 cv
484.514 -290.644 485.204 -289.955 486.054 -289.955 cv
486.904 -289.955 487.593 -290.644 487.593 -291.494 cv
0 0 0 0 cmyk
f
487.593 -291.494 mo
487.593 -292.344 486.904 -293.033 486.054 -293.033 cv
485.204 -293.033 484.514 -292.344 484.514 -291.494 cv
484.514 -290.644 485.204 -289.955 486.054 -289.955 cv
486.904 -289.955 487.593 -290.644 487.593 -291.494 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
491.146 -293.389 mo
491.146 -294.238 490.456 -294.929 489.607 -294.929 cv
488.757 -294.929 488.067 -294.238 488.067 -293.389 cv
488.067 -292.539 488.757 -291.849 489.607 -291.849 cv
490.456 -291.849 491.146 -292.539 491.146 -293.389 cv
0 0 0 0 cmyk
f
491.146 -293.389 mo
491.146 -294.238 490.456 -294.929 489.607 -294.929 cv
488.757 -294.929 488.067 -294.238 488.067 -293.389 cv
488.067 -292.539 488.757 -291.849 489.607 -291.849 cv
490.456 -291.849 491.146 -292.539 491.146 -293.389 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
494.817 -291.494 mo
494.817 -292.344 494.127 -293.033 493.278 -293.033 cv
492.428 -293.033 491.738 -292.344 491.738 -291.494 cv
491.738 -290.644 492.428 -289.955 493.278 -289.955 cv
494.127 -289.955 494.817 -290.644 494.817 -291.494 cv
0 0 0 0 cmyk
f
494.817 -291.494 mo
494.817 -292.344 494.127 -293.033 493.278 -293.033 cv
492.428 -293.033 491.738 -292.344 491.738 -291.494 cv
491.738 -290.644 492.428 -289.955 493.278 -289.955 cv
494.127 -289.955 494.817 -290.644 494.817 -291.494 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
498.488 -291.494 mo
498.488 -292.344 497.798 -293.033 496.948 -293.033 cv
496.099 -293.033 495.409 -292.344 495.409 -291.494 cv
495.409 -290.644 496.099 -289.955 496.948 -289.955 cv
497.798 -289.955 498.488 -290.644 498.488 -291.494 cv
0 0 0 0 cmyk
f
498.488 -291.494 mo
498.488 -292.344 497.798 -293.033 496.948 -293.033 cv
496.099 -293.033 495.409 -292.344 495.409 -291.494 cv
495.409 -290.644 496.099 -289.955 496.948 -289.955 cv
497.798 -289.955 498.488 -290.644 498.488 -291.494 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
502.159 -291.494 mo
502.159 -292.344 501.47 -293.033 500.62 -293.033 cv
499.77 -293.033 499.079 -292.344 499.079 -291.494 cv
499.079 -290.644 499.77 -289.955 500.62 -289.955 cv
501.47 -289.955 502.159 -290.644 502.159 -291.494 cv
0 0 0 0 cmyk
f
502.159 -291.494 mo
502.159 -292.344 501.47 -293.033 500.62 -293.033 cv
499.77 -293.033 499.079 -292.344 499.079 -291.494 cv
499.079 -290.644 499.77 -289.955 500.62 -289.955 cv
501.47 -289.955 502.159 -290.644 502.159 -291.494 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
505.712 -275.744 mo
505.712 -276.594 505.023 -277.283 504.172 -277.283 cv
503.321 -277.283 502.633 -276.594 502.633 -275.744 cv
502.633 -274.894 503.321 -274.205 504.172 -274.205 cv
505.023 -274.205 505.712 -274.894 505.712 -275.744 cv
0 0 0 0 cmyk
f
505.712 -275.744 mo
505.712 -276.594 505.023 -277.283 504.172 -277.283 cv
503.321 -277.283 502.633 -276.594 502.633 -275.744 cv
502.633 -274.894 503.321 -274.205 504.172 -274.205 cv
505.023 -274.205 505.712 -274.894 505.712 -275.744 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
509.383 -289.362 mo
509.383 -290.213 508.693 -290.902 507.843 -290.902 cv
506.993 -290.902 506.304 -290.213 506.304 -289.362 cv
506.304 -288.513 506.993 -287.823 507.843 -287.823 cv
508.693 -287.823 509.383 -288.513 509.383 -289.362 cv
0 0 0 0 cmyk
f
509.383 -289.362 mo
509.383 -290.213 508.693 -290.902 507.843 -290.902 cv
506.993 -290.902 506.304 -290.213 506.304 -289.362 cv
506.304 -288.513 506.993 -287.823 507.843 -287.823 cv
508.693 -287.823 509.383 -288.513 509.383 -289.362 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
.4 lw
370.415 -298.777 mo
373.968 -332.053 li
377.639 -367.343 li
381.31 -399.79 li
384.982 -411.514 li
388.534 -412.935 li
392.205 -408.553 li
395.876 -398.014 li
399.547 -393.514 li
403.1 -389.606 li
406.771 -384.632 li
410.442 -376.816 li
414.113 -370.896 li
417.666 -366.277 li
421.337 -364.264 li
425.008 -362.014 li
428.679 -359.053 li
432.232 -358.698 li
435.903 -357.751 li
439.573 -355.501 li
443.244 -353.132 li
446.797 -349.579 li
450.468 -349.343 li
454.139 -347.211 li
457.81 -344.487 li
461.363 -343.777 li
465.033 -343.066 li
468.705 -339.987 li
472.376 -339.869 li
475.929 -338.211 li
479.6 -336.434 li
483.271 -335.843 li
486.942 -333.593 li
490.494 -335.843 li
494.165 -332.882 li
497.837 -334.184 li
501.507 -328.145 li
505.061 -332.408 li
508.732 -328.145 li
511.218 -327.079 li
508.732 -329.803 mo
508.732 -329.803 li
508.732 -326.25 mo
508.732 -326.25 li
505.061 -333.829 mo
505.061 -333.829 li
505.061 -330.75 mo
505.061 -330.75 li
501.507 -329.803 mo
501.507 -329.803 li
501.507 -326.25 mo
501.507 -326.25 li
497.837 -335.605 mo
497.837 -335.605 li
497.837 -332.527 mo
497.837 -332.527 li
494.165 -334.303 mo
494.165 -334.303 li
494.165 -331.225 mo
494.165 -331.225 li
490.494 -337.264 mo
490.494 -337.264 li
490.494 -334.422 mo
490.494 -334.422 li
486.942 -335.014 mo
486.942 -335.014 li
486.942 -331.935 mo
486.942 -331.935 li
483.271 -337.264 mo
483.271 -337.264 li
483.271 -334.422 mo
483.271 -334.422 li
479.6 -337.855 mo
479.6 -337.855 li
479.6 -335.014 mo
479.6 -335.014 li
475.929 -339.396 mo
475.929 -339.396 li
475.929 -336.79 mo
475.929 -336.79 li
472.376 -341.053 mo
472.376 -341.053 li
472.376 -338.566 mo
472.376 -338.566 li
468.705 -341.172 mo
468.705 -341.172 li
468.705 -338.684 mo
468.705 -338.684 li
465.033 -344.132 mo
465.033 -344.132 li
465.033 -341.882 mo
465.033 -341.882 li
461.363 -344.843 mo
461.363 -344.843 li
461.363 -342.593 mo
461.363 -342.593 li
457.81 -345.553 mo
457.81 -345.553 li
457.81 -343.303 mo
457.81 -343.303 li
454.139 -348.159 mo
454.139 -348.159 li
454.139 -346.146 mo
454.139 -346.146 li
450.468 -350.29 mo
450.468 -350.29 li
450.468 -348.396 mo
450.468 -348.396 li
446.797 -350.527 mo
446.797 -350.527 li
446.797 -348.632 mo
446.797 -348.632 li
443.244 -353.961 mo
443.244 -353.961 li
443.244 -352.303 mo
443.244 -352.303 li
439.573 -356.211 mo
439.573 -356.211 li
439.573 -354.672 mo
439.573 -354.672 li
435.903 -358.461 mo
435.903 -358.461 li
435.903 -357.04 mo
435.903 -357.04 li
432.232 -359.408 mo
432.232 -359.408 li
432.232 -357.987 mo
432.232 -357.987 li
428.679 -359.764 mo
428.679 -359.764 li
428.679 -358.343 mo
428.679 -358.343 li
425.008 -362.606 mo
425.008 -362.606 li
425.008 -361.422 mo
425.008 -361.422 li
421.337 -364.856 mo
421.337 -364.856 li
421.337 -363.672 mo
421.337 -363.672 li
417.666 -366.869 mo
417.666 -366.869 li
417.666 -365.803 mo
417.666 -365.803 li
414.113 -371.369 mo
414.113 -371.369 li
414.113 -370.422 mo
414.113 -370.422 li
410.442 -377.172 mo
410.442 -377.172 li
410.442 -376.461 mo
410.442 -376.461 li
406.771 -384.869 mo
406.771 -384.869 li
406.771 -384.277 mo
406.771 -384.277 li
403.1 -389.843 mo
403.1 -389.843 li
403.1 -389.369 mo
403.1 -389.369 li
399.547 -393.751 mo
399.547 -393.751 li
399.547 -393.277 mo
399.547 -393.277 li
395.876 -398.25 mo
395.876 -398.25 li
395.876 -397.777 mo
395.876 -397.777 li
392.205 -408.672 mo
392.205 -408.672 li
392.205 -408.435 mo
392.205 -408.435 li
388.534 -413.053 mo
388.534 -413.053 li
388.534 -412.816 mo
388.534 -412.816 li
384.982 -411.632 mo
384.982 -411.632 li
384.982 -411.277 mo
384.982 -411.277 li
381.31 -399.908 mo
381.31 -399.908 li
381.31 -399.553 mo
381.31 -399.553 li
377.639 -367.816 mo
377.639 -367.816 li
377.639 -366.75 mo
377.639 -366.75 li
373.968 -333.593 mo
373.968 -333.593 li
373.968 -330.395 mo
373.968 -330.395 li
370.415 -302.804 mo
370.415 -302.804 li
370.415 -293.566 mo
370.415 -293.566 li
508.732 -326.25 mo
508.732 -329.803 li
505.061 -330.75 mo
505.061 -333.829 li
501.507 -326.25 mo
501.507 -329.803 li
497.837 -332.527 mo
497.837 -335.605 li
494.165 -331.225 mo
494.165 -334.303 li
490.494 -334.422 mo
490.494 -337.264 li
486.942 -331.935 mo
486.942 -335.014 li
483.271 -334.422 mo
483.271 -337.264 li
479.6 -335.014 mo
479.6 -337.855 li
475.929 -336.79 mo
475.929 -339.396 li
472.376 -338.566 mo
472.376 -341.053 li
468.705 -338.684 mo
468.705 -341.172 li
465.033 -341.882 mo
465.033 -344.132 li
461.363 -342.593 mo
461.363 -344.843 li
457.81 -343.303 mo
457.81 -345.553 li
454.139 -346.146 mo
454.139 -348.159 li
450.468 -348.396 mo
450.468 -350.29 li
446.797 -348.632 mo
446.797 -350.527 li
443.244 -352.303 mo
443.244 -353.961 li
439.573 -354.672 mo
439.573 -356.211 li
435.903 -357.04 mo
435.903 -358.461 li
432.232 -357.987 mo
432.232 -359.408 li
428.679 -358.343 mo
428.679 -359.764 li
425.008 -361.422 mo
425.008 -362.606 li
421.337 -363.672 mo
421.337 -364.856 li
417.666 -365.803 mo
417.666 -366.869 li
414.113 -370.422 mo
414.113 -371.369 li
410.442 -376.461 mo
410.442 -377.172 li
406.771 -384.277 mo
406.771 -384.869 li
403.1 -389.369 mo
403.1 -389.843 li
399.547 -393.277 mo
399.547 -393.751 li
395.876 -397.777 mo
395.876 -398.25 li
392.205 -408.435 mo
392.205 -408.672 li
388.534 -412.816 mo
388.534 -413.053 li
384.982 -411.277 mo
384.982 -411.632 li
381.31 -399.553 mo
381.31 -399.908 li
377.639 -366.75 mo
377.639 -367.816 li
373.968 -330.395 mo
373.968 -333.593 li
370.415 -293.566 mo
370.415 -302.804 li
.95346 .916228 .0104982 .0011902 cmyk
@
372.014 -298.837 mo
372.014 -299.751 371.272 -300.494 370.356 -300.494 cv
369.441 -300.494 368.698 -299.751 368.698 -298.837 cv
368.698 -297.921 369.441 -297.178 370.356 -297.178 cv
371.272 -297.178 372.014 -297.921 372.014 -298.837 cv
f
372.014 -298.837 mo
372.014 -299.751 371.272 -300.494 370.356 -300.494 cv
369.441 -300.494 368.698 -299.751 368.698 -298.837 cv
368.698 -297.921 369.441 -297.178 370.356 -297.178 cv
371.272 -297.178 372.014 -297.921 372.014 -298.837 cv
@
375.567 -332.112 mo
375.567 -333.027 374.824 -333.77 373.909 -333.77 cv
372.994 -333.77 372.251 -333.027 372.251 -332.112 cv
372.251 -331.197 372.994 -330.455 373.909 -330.455 cv
374.824 -330.455 375.567 -331.197 375.567 -332.112 cv
f
375.567 -332.112 mo
375.567 -333.027 374.824 -333.77 373.909 -333.77 cv
372.994 -333.77 372.251 -333.027 372.251 -332.112 cv
372.251 -331.197 372.994 -330.455 373.909 -330.455 cv
374.824 -330.455 375.567 -331.197 375.567 -332.112 cv
@
379.237 -367.402 mo
379.237 -368.317 378.495 -369.059 377.58 -369.059 cv
376.665 -369.059 375.922 -368.317 375.922 -367.402 cv
375.922 -366.487 376.665 -365.744 377.58 -365.744 cv
378.495 -365.744 379.237 -366.487 379.237 -367.402 cv
f
379.237 -367.402 mo
379.237 -368.317 378.495 -369.059 377.58 -369.059 cv
376.665 -369.059 375.922 -368.317 375.922 -367.402 cv
375.922 -366.487 376.665 -365.744 377.58 -365.744 cv
378.495 -365.744 379.237 -366.487 379.237 -367.402 cv
@
382.909 -399.79 mo
382.909 -400.705 382.166 -401.448 381.251 -401.448 cv
380.336 -401.448 379.593 -400.705 379.593 -399.79 cv
379.593 -398.875 380.336 -398.132 381.251 -398.132 cv
382.166 -398.132 382.909 -398.875 382.909 -399.79 cv
f
382.909 -399.79 mo
382.909 -400.705 382.166 -401.448 381.251 -401.448 cv
380.336 -401.448 379.593 -400.705 379.593 -399.79 cv
379.593 -398.875 380.336 -398.132 381.251 -398.132 cv
382.166 -398.132 382.909 -398.875 382.909 -399.79 cv
@
386.58 -411.514 mo
386.58 -412.429 385.837 -413.172 384.922 -413.172 cv
384.007 -413.172 383.264 -412.429 383.264 -411.514 cv
383.264 -410.599 384.007 -409.855 384.922 -409.855 cv
385.837 -409.855 386.58 -410.599 386.58 -411.514 cv
f
386.58 -411.514 mo
386.58 -412.429 385.837 -413.172 384.922 -413.172 cv
384.007 -413.172 383.264 -412.429 383.264 -411.514 cv
383.264 -410.599 384.007 -409.855 384.922 -409.855 cv
385.837 -409.855 386.58 -410.599 386.58 -411.514 cv
@
390.132 -412.935 mo
390.132 -413.85 389.39 -414.593 388.475 -414.593 cv
387.559 -414.593 386.817 -413.85 386.817 -412.935 cv
386.817 -412.019 387.559 -411.277 388.475 -411.277 cv
389.39 -411.277 390.132 -412.019 390.132 -412.935 cv
f
390.132 -412.935 mo
390.132 -413.85 389.39 -414.593 388.475 -414.593 cv
387.559 -414.593 386.817 -413.85 386.817 -412.935 cv
386.817 -412.019 387.559 -411.277 388.475 -411.277 cv
389.39 -411.277 390.132 -412.019 390.132 -412.935 cv
@
393.804 -408.553 mo
393.804 -409.468 393.061 -410.211 392.146 -410.211 cv
391.231 -410.211 390.488 -409.468 390.488 -408.553 cv
390.488 -407.638 391.231 -406.895 392.146 -406.895 cv
393.061 -406.895 393.804 -407.638 393.804 -408.553 cv
f
393.804 -408.553 mo
393.804 -409.468 393.061 -410.211 392.146 -410.211 cv
391.231 -410.211 390.488 -409.468 390.488 -408.553 cv
390.488 -407.638 391.231 -406.895 392.146 -406.895 cv
393.061 -406.895 393.804 -407.638 393.804 -408.553 cv
@
397.475 -398.014 mo
397.475 -398.929 396.732 -399.672 395.817 -399.672 cv
394.902 -399.672 394.159 -398.929 394.159 -398.014 cv
394.159 -397.099 394.902 -396.356 395.817 -396.356 cv
396.732 -396.356 397.475 -397.099 397.475 -398.014 cv
f
397.475 -398.014 mo
397.475 -398.929 396.732 -399.672 395.817 -399.672 cv
394.902 -399.672 394.159 -398.929 394.159 -398.014 cv
394.159 -397.099 394.902 -396.356 395.817 -396.356 cv
396.732 -396.356 397.475 -397.099 397.475 -398.014 cv
@
401.146 -393.573 mo
401.146 -394.488 400.404 -395.231 399.487 -395.231 cv
398.572 -395.231 397.83 -394.488 397.83 -393.573 cv
397.83 -392.658 398.572 -391.915 399.487 -391.915 cv
400.404 -391.915 401.146 -392.658 401.146 -393.573 cv
f
401.146 -393.573 mo
401.146 -394.488 400.404 -395.231 399.487 -395.231 cv
398.572 -395.231 397.83 -394.488 397.83 -393.573 cv
397.83 -392.658 398.572 -391.915 399.487 -391.915 cv
400.404 -391.915 401.146 -392.658 401.146 -393.573 cv
@
404.698 -389.665 mo
404.698 -390.58 403.955 -391.323 403.04 -391.323 cv
402.125 -391.323 401.383 -390.58 401.383 -389.665 cv
401.383 -388.75 402.125 -388.007 403.04 -388.007 cv
403.955 -388.007 404.698 -388.75 404.698 -389.665 cv
f
404.698 -389.665 mo
404.698 -390.58 403.955 -391.323 403.04 -391.323 cv
402.125 -391.323 401.383 -390.58 401.383 -389.665 cv
401.383 -388.75 402.125 -388.007 403.04 -388.007 cv
403.955 -388.007 404.698 -388.75 404.698 -389.665 cv
@
408.369 -384.691 mo
408.369 -385.606 407.627 -386.35 406.712 -386.35 cv
405.797 -386.35 405.054 -385.606 405.054 -384.691 cv
405.054 -383.776 405.797 -383.033 406.712 -383.033 cv
407.627 -383.033 408.369 -383.776 408.369 -384.691 cv
f
408.369 -384.691 mo
408.369 -385.606 407.627 -386.35 406.712 -386.35 cv
405.797 -386.35 405.054 -385.606 405.054 -384.691 cv
405.054 -383.776 405.797 -383.033 406.712 -383.033 cv
407.627 -383.033 408.369 -383.776 408.369 -384.691 cv
@
412.04 -376.875 mo
412.04 -377.791 411.298 -378.533 410.382 -378.533 cv
409.467 -378.533 408.725 -377.791 408.725 -376.875 cv
408.725 -375.96 409.467 -375.218 410.382 -375.218 cv
411.298 -375.218 412.04 -375.96 412.04 -376.875 cv
f
412.04 -376.875 mo
412.04 -377.791 411.298 -378.533 410.382 -378.533 cv
409.467 -378.533 408.725 -377.791 408.725 -376.875 cv
408.725 -375.96 409.467 -375.218 410.382 -375.218 cv
411.298 -375.218 412.04 -375.96 412.04 -376.875 cv
@
415.711 -370.954 mo
415.711 -371.87 414.969 -372.612 414.054 -372.612 cv
413.139 -372.612 412.396 -371.87 412.396 -370.954 cv
412.396 -370.039 413.139 -369.297 414.054 -369.297 cv
414.969 -369.297 415.711 -370.039 415.711 -370.954 cv
f
415.711 -370.954 mo
415.711 -371.87 414.969 -372.612 414.054 -372.612 cv
413.139 -372.612 412.396 -371.87 412.396 -370.954 cv
412.396 -370.039 413.139 -369.297 414.054 -369.297 cv
414.969 -369.297 415.711 -370.039 415.711 -370.954 cv
@
419.264 -366.336 mo
419.264 -367.251 418.522 -367.994 417.607 -367.994 cv
416.691 -367.994 415.948 -367.251 415.948 -366.336 cv
415.948 -365.421 416.691 -364.679 417.607 -364.679 cv
418.522 -364.679 419.264 -365.421 419.264 -366.336 cv
f
419.264 -366.336 mo
419.264 -367.251 418.522 -367.994 417.607 -367.994 cv
416.691 -367.994 415.948 -367.251 415.948 -366.336 cv
415.948 -365.421 416.691 -364.679 417.607 -364.679 cv
418.522 -364.679 419.264 -365.421 419.264 -366.336 cv
@
422.935 -364.323 mo
422.935 -365.238 422.193 -365.98 421.277 -365.98 cv
420.362 -365.98 419.619 -365.238 419.619 -364.323 cv
419.619 -363.408 420.362 -362.665 421.277 -362.665 cv
422.193 -362.665 422.935 -363.408 422.935 -364.323 cv
f
422.935 -364.323 mo
422.935 -365.238 422.193 -365.98 421.277 -365.98 cv
420.362 -365.98 419.619 -365.238 419.619 -364.323 cv
419.619 -363.408 420.362 -362.665 421.277 -362.665 cv
422.193 -362.665 422.935 -363.408 422.935 -364.323 cv
@
426.607 -362.073 mo
426.607 -362.988 425.863 -363.73 424.948 -363.73 cv
424.033 -363.73 423.29 -362.988 423.29 -362.073 cv
423.29 -361.158 424.033 -360.415 424.948 -360.415 cv
425.863 -360.415 426.607 -361.158 426.607 -362.073 cv
f
426.607 -362.073 mo
426.607 -362.988 425.863 -363.73 424.948 -363.73 cv
424.033 -363.73 423.29 -362.988 423.29 -362.073 cv
423.29 -361.158 424.033 -360.415 424.948 -360.415 cv
425.863 -360.415 426.607 -361.158 426.607 -362.073 cv
@
430.277 -359.112 mo
430.277 -360.028 429.534 -360.771 428.62 -360.771 cv
427.704 -360.771 426.961 -360.028 426.961 -359.112 cv
426.961 -358.197 427.704 -357.454 428.62 -357.454 cv
429.534 -357.454 430.277 -358.197 430.277 -359.112 cv
f
430.277 -359.112 mo
430.277 -360.028 429.534 -360.771 428.62 -360.771 cv
427.704 -360.771 426.961 -360.028 426.961 -359.112 cv
426.961 -358.197 427.704 -357.454 428.62 -357.454 cv
429.534 -357.454 430.277 -358.197 430.277 -359.112 cv
@
433.83 -358.757 mo
433.83 -359.672 433.088 -360.415 432.172 -360.415 cv
431.257 -360.415 430.514 -359.672 430.514 -358.757 cv
430.514 -357.842 431.257 -357.099 432.172 -357.099 cv
433.088 -357.099 433.83 -357.842 433.83 -358.757 cv
f
433.83 -358.757 mo
433.83 -359.672 433.088 -360.415 432.172 -360.415 cv
431.257 -360.415 430.514 -359.672 430.514 -358.757 cv
430.514 -357.842 431.257 -357.099 432.172 -357.099 cv
433.088 -357.099 433.83 -357.842 433.83 -358.757 cv
@
437.501 -357.809 mo
437.501 -358.725 436.758 -359.468 435.843 -359.468 cv
434.928 -359.468 434.185 -358.725 434.185 -357.809 cv
434.185 -356.894 434.928 -356.152 435.843 -356.152 cv
436.758 -356.152 437.501 -356.894 437.501 -357.809 cv
f
437.501 -357.809 mo
437.501 -358.725 436.758 -359.468 435.843 -359.468 cv
434.928 -359.468 434.185 -358.725 434.185 -357.809 cv
434.185 -356.894 434.928 -356.152 435.843 -356.152 cv
436.758 -356.152 437.501 -356.894 437.501 -357.809 cv
@
441.172 -355.56 mo
441.172 -356.475 440.429 -357.218 439.515 -357.218 cv
438.599 -357.218 437.856 -356.475 437.856 -355.56 cv
437.856 -354.644 438.599 -353.902 439.515 -353.902 cv
440.429 -353.902 441.172 -354.644 441.172 -355.56 cv
f
441.172 -355.56 mo
441.172 -356.475 440.429 -357.218 439.515 -357.218 cv
438.599 -357.218 437.856 -356.475 437.856 -355.56 cv
437.856 -354.644 438.599 -353.902 439.515 -353.902 cv
440.429 -353.902 441.172 -354.644 441.172 -355.56 cv
@
444.843 -353.191 mo
444.843 -354.106 444.1 -354.849 443.185 -354.849 cv
442.27 -354.849 441.528 -354.106 441.528 -353.191 cv
441.528 -352.276 442.27 -351.533 443.185 -351.533 cv
444.1 -351.533 444.843 -352.276 444.843 -353.191 cv
f
444.843 -353.191 mo
444.843 -354.106 444.1 -354.849 443.185 -354.849 cv
442.27 -354.849 441.528 -354.106 441.528 -353.191 cv
441.528 -352.276 442.27 -351.533 443.185 -351.533 cv
444.1 -351.533 444.843 -352.276 444.843 -353.191 cv
@
448.396 -349.639 mo
448.396 -350.554 447.653 -351.297 446.738 -351.297 cv
445.823 -351.297 445.08 -350.554 445.08 -349.639 cv
445.08 -348.724 445.823 -347.98 446.738 -347.98 cv
447.653 -347.98 448.396 -348.724 448.396 -349.639 cv
f
448.396 -349.639 mo
448.396 -350.554 447.653 -351.297 446.738 -351.297 cv
445.823 -351.297 445.08 -350.554 445.08 -349.639 cv
445.08 -348.724 445.823 -347.98 446.738 -347.98 cv
447.653 -347.98 448.396 -348.724 448.396 -349.639 cv
@
452.067 -349.402 mo
452.067 -350.317 451.324 -351.059 450.409 -351.059 cv
449.494 -351.059 448.751 -350.317 448.751 -349.402 cv
448.751 -348.487 449.494 -347.744 450.409 -347.744 cv
451.324 -347.744 452.067 -348.487 452.067 -349.402 cv
f
452.067 -349.402 mo
452.067 -350.317 451.324 -351.059 450.409 -351.059 cv
449.494 -351.059 448.751 -350.317 448.751 -349.402 cv
448.751 -348.487 449.494 -347.744 450.409 -347.744 cv
451.324 -347.744 452.067 -348.487 452.067 -349.402 cv
@
455.738 -347.271 mo
455.738 -348.185 454.995 -348.928 454.08 -348.928 cv
453.164 -348.928 452.422 -348.185 452.422 -347.271 cv
452.422 -346.355 453.164 -345.612 454.08 -345.612 cv
454.995 -345.612 455.738 -346.355 455.738 -347.271 cv
f
455.738 -347.271 mo
455.738 -348.185 454.995 -348.928 454.08 -348.928 cv
453.164 -348.928 452.422 -348.185 452.422 -347.271 cv
452.422 -346.355 453.164 -345.612 454.08 -345.612 cv
454.995 -345.612 455.738 -346.355 455.738 -347.271 cv
@
459.409 -344.547 mo
459.409 -345.462 458.666 -346.204 457.751 -346.204 cv
456.836 -346.204 456.093 -345.462 456.093 -344.547 cv
456.093 -343.632 456.836 -342.889 457.751 -342.889 cv
458.666 -342.889 459.409 -343.632 459.409 -344.547 cv
f
459.409 -344.547 mo
459.409 -345.462 458.666 -346.204 457.751 -346.204 cv
456.836 -346.204 456.093 -345.462 456.093 -344.547 cv
456.093 -343.632 456.836 -342.889 457.751 -342.889 cv
458.666 -342.889 459.409 -343.632 459.409 -344.547 cv
@
462.962 -343.836 mo
462.962 -344.751 462.219 -345.494 461.304 -345.494 cv
460.389 -345.494 459.646 -344.751 459.646 -343.836 cv
459.646 -342.921 460.389 -342.178 461.304 -342.178 cv
462.219 -342.178 462.962 -342.921 462.962 -343.836 cv
f
462.962 -343.836 mo
462.962 -344.751 462.219 -345.494 461.304 -345.494 cv
460.389 -345.494 459.646 -344.751 459.646 -343.836 cv
459.646 -342.921 460.389 -342.178 461.304 -342.178 cv
462.219 -342.178 462.962 -342.921 462.962 -343.836 cv
@
466.632 -343.126 mo
466.632 -344.041 465.89 -344.783 464.975 -344.783 cv
464.06 -344.783 463.317 -344.041 463.317 -343.126 cv
463.317 -342.211 464.06 -341.468 464.975 -341.468 cv
465.89 -341.468 466.632 -342.211 466.632 -343.126 cv
f
466.632 -343.126 mo
466.632 -344.041 465.89 -344.783 464.975 -344.783 cv
464.06 -344.783 463.317 -344.041 463.317 -343.126 cv
463.317 -342.211 464.06 -341.468 464.975 -341.468 cv
465.89 -341.468 466.632 -342.211 466.632 -343.126 cv
@
470.304 -340.047 mo
470.304 -340.962 469.562 -341.704 468.646 -341.704 cv
467.731 -341.704 466.988 -340.962 466.988 -340.047 cv
466.988 -339.132 467.731 -338.389 468.646 -338.389 cv
469.562 -338.389 470.304 -339.132 470.304 -340.047 cv
f
470.304 -340.047 mo
470.304 -340.962 469.562 -341.704 468.646 -341.704 cv
467.731 -341.704 466.988 -340.962 466.988 -340.047 cv
466.988 -339.132 467.731 -338.389 468.646 -338.389 cv
469.562 -338.389 470.304 -339.132 470.304 -340.047 cv
@
473.975 -339.928 mo
473.975 -340.843 473.232 -341.586 472.317 -341.586 cv
471.402 -341.586 470.659 -340.843 470.659 -339.928 cv
470.659 -339.013 471.402 -338.271 472.317 -338.271 cv
473.232 -338.271 473.975 -339.013 473.975 -339.928 cv
f
473.975 -339.928 mo
473.975 -340.843 473.232 -341.586 472.317 -341.586 cv
471.402 -341.586 470.659 -340.843 470.659 -339.928 cv
470.659 -339.013 471.402 -338.271 472.317 -338.271 cv
473.232 -338.271 473.975 -339.013 473.975 -339.928 cv
@
477.528 -338.271 mo
477.528 -339.185 476.784 -339.928 475.869 -339.928 cv
474.954 -339.928 474.212 -339.185 474.212 -338.271 cv
474.212 -337.355 474.954 -336.612 475.869 -336.612 cv
476.784 -336.612 477.528 -337.355 477.528 -338.271 cv
f
477.528 -338.271 mo
477.528 -339.185 476.784 -339.928 475.869 -339.928 cv
474.954 -339.928 474.212 -339.185 474.212 -338.271 cv
474.212 -337.355 474.954 -336.612 475.869 -336.612 cv
476.784 -336.612 477.528 -337.355 477.528 -338.271 cv
@
481.198 -336.494 mo
481.198 -337.409 480.456 -338.152 479.54 -338.152 cv
478.625 -338.152 477.883 -337.409 477.883 -336.494 cv
477.883 -335.579 478.625 -334.836 479.54 -334.836 cv
480.456 -334.836 481.198 -335.579 481.198 -336.494 cv
f
481.198 -336.494 mo
481.198 -337.409 480.456 -338.152 479.54 -338.152 cv
478.625 -338.152 477.883 -337.409 477.883 -336.494 cv
477.883 -335.579 478.625 -334.836 479.54 -334.836 cv
480.456 -334.836 481.198 -335.579 481.198 -336.494 cv
@
484.87 -335.902 mo
484.87 -336.817 484.127 -337.559 483.211 -337.559 cv
482.296 -337.559 481.554 -336.817 481.554 -335.902 cv
481.554 -334.987 482.296 -334.244 483.211 -334.244 cv
484.127 -334.244 484.87 -334.987 484.87 -335.902 cv
f
484.87 -335.902 mo
484.87 -336.817 484.127 -337.559 483.211 -337.559 cv
482.296 -337.559 481.554 -336.817 481.554 -335.902 cv
481.554 -334.987 482.296 -334.244 483.211 -334.244 cv
484.127 -334.244 484.87 -334.987 484.87 -335.902 cv
@
488.54 -333.652 mo
488.54 -334.567 487.798 -335.309 486.882 -335.309 cv
485.968 -335.309 485.225 -334.567 485.225 -333.652 cv
485.225 -332.737 485.968 -331.994 486.882 -331.994 cv
487.798 -331.994 488.54 -332.737 488.54 -333.652 cv
f
488.54 -333.652 mo
488.54 -334.567 487.798 -335.309 486.882 -335.309 cv
485.968 -335.309 485.225 -334.567 485.225 -333.652 cv
485.225 -332.737 485.968 -331.994 486.882 -331.994 cv
487.798 -331.994 488.54 -332.737 488.54 -333.652 cv
@
492.093 -335.902 mo
492.093 -336.817 491.351 -337.559 490.435 -337.559 cv
489.521 -337.559 488.778 -336.817 488.778 -335.902 cv
488.778 -334.987 489.521 -334.244 490.435 -334.244 cv
491.351 -334.244 492.093 -334.987 492.093 -335.902 cv
f
492.093 -335.902 mo
492.093 -336.817 491.351 -337.559 490.435 -337.559 cv
489.521 -337.559 488.778 -336.817 488.778 -335.902 cv
488.778 -334.987 489.521 -334.244 490.435 -334.244 cv
491.351 -334.244 492.093 -334.987 492.093 -335.902 cv
@
495.764 -332.941 mo
495.764 -333.856 495.022 -334.599 494.107 -334.599 cv
493.192 -334.599 492.448 -333.856 492.448 -332.941 cv
492.448 -332.026 493.192 -331.283 494.107 -331.283 cv
495.022 -331.283 495.764 -332.026 495.764 -332.941 cv
f
495.764 -332.941 mo
495.764 -333.856 495.022 -334.599 494.107 -334.599 cv
493.192 -334.599 492.448 -333.856 492.448 -332.941 cv
492.448 -332.026 493.192 -331.283 494.107 -331.283 cv
495.022 -331.283 495.764 -332.026 495.764 -332.941 cv
@
499.435 -334.244 mo
499.435 -335.159 498.693 -335.902 497.778 -335.902 cv
496.863 -335.902 496.119 -335.159 496.119 -334.244 cv
496.119 -333.329 496.863 -332.586 497.778 -332.586 cv
498.693 -332.586 499.435 -333.329 499.435 -334.244 cv
f
499.435 -334.244 mo
499.435 -335.159 498.693 -335.902 497.778 -335.902 cv
496.863 -335.902 496.119 -335.159 496.119 -334.244 cv
496.119 -333.329 496.863 -332.586 497.778 -332.586 cv
498.693 -332.586 499.435 -333.329 499.435 -334.244 cv
@
503.107 -328.204 mo
503.107 -329.12 502.363 -329.862 501.448 -329.862 cv
500.532 -329.862 499.79 -329.12 499.79 -328.204 cv
499.79 -327.289 500.532 -326.547 501.448 -326.547 cv
502.363 -326.547 503.107 -327.289 503.107 -328.204 cv
f
503.107 -328.204 mo
503.107 -329.12 502.363 -329.862 501.448 -329.862 cv
500.532 -329.862 499.79 -329.12 499.79 -328.204 cv
499.79 -327.289 500.532 -326.547 501.448 -326.547 cv
502.363 -326.547 503.107 -327.289 503.107 -328.204 cv
@
506.659 -332.468 mo
506.659 -333.383 505.916 -334.125 505.001 -334.125 cv
504.086 -334.125 503.343 -333.383 503.343 -332.468 cv
503.343 -331.553 504.086 -330.809 505.001 -330.809 cv
505.916 -330.809 506.659 -331.553 506.659 -332.468 cv
f
506.659 -332.468 mo
506.659 -333.383 505.916 -334.125 505.001 -334.125 cv
504.086 -334.125 503.343 -333.383 503.343 -332.468 cv
503.343 -331.553 504.086 -330.809 505.001 -330.809 cv
505.916 -330.809 506.659 -331.553 506.659 -332.468 cv
@
510.33 -328.204 mo
510.33 -329.12 509.587 -329.862 508.672 -329.862 cv
507.757 -329.862 507.014 -329.12 507.014 -328.204 cv
507.014 -327.289 507.757 -326.547 508.672 -326.547 cv
509.587 -326.547 510.33 -327.289 510.33 -328.204 cv
f
510.33 -328.204 mo
510.33 -329.12 509.587 -329.862 508.672 -329.862 cv
507.757 -329.862 507.014 -329.12 507.014 -328.204 cv
507.014 -327.289 507.757 -326.547 508.672 -326.547 cv
509.587 -326.547 510.33 -327.289 510.33 -328.204 cv
@
.592 lw
370.415 -296.764 mo
373.968 -342.119 li
377.639 -376.461 li
381.31 -399.79 li
384.982 -411.869 li
388.534 -412.935 li
392.205 -403.579 li
395.876 -389.606 li
399.547 -385.934 li
403.1 -382.856 li
406.771 -370.066 li
410.442 -346.856 li
414.113 -327.79 li
417.666 -338.922 li
421.337 -345.79 li
425.008 -341.764 li
428.679 -326.605 li
432.232 -300.317 li
434.718 -275.211 li
.512627 .963104 .344335 .174105 cmyk
@
[2.3684 2.3684 ] 0 dsh
370.415 -296.291 mo
373.968 -341.764 li
377.639 -376.105 li
381.31 -399.316 li
384.982 -411.395 li
388.534 -412.461 li
392.205 -402.869 li
395.876 -387.829 li
399.547 -382.264 li
403.1 -379.184 li
406.771 -368.053 li
410.442 -351.001 li
414.113 -339.869 li
417.666 -344.369 li
421.337 -349.343 li
425.008 -346.146 li
428.679 -333.593 li
432.232 -313.461 li
435.903 -299.605 li
439.573 -302.804 li
443.244 -302.093 li
446.797 -292.501 li
450.468 -276.514 li
454.139 -280.066 li
457.81 -298.777 li
461.363 -308.251 li
465.033 -306.83 li
468.705 -294.159 li
471.665 -275.211 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
gsave
515.717 -417.494 mo
335.592 -417.494 li
335.592 -250.448 li
515.717 -250.448 li
cp
clp
[4.7368 2.3684 1.421 2.3684 ] 0 dsh
370.415 -296.291 mo
373.968 -341.764 li
377.639 -376.105 li
381.31 -399.316 li
384.982 -411.514 li
388.534 -412.698 li
392.205 -403.698 li
395.876 -390.079 li
399.547 -385.106 li
403.1 -381.553 li
406.771 -370.184 li
410.442 -351.119 li
414.113 -336.672 li
417.666 -342.948 li
421.337 -347.329 li
425.008 -341.882 li
428.679 -326.25 li
432.232 -302.448 li
435.903 -284.684 li
439.573 -287.527 li
443.244 -286.816 li
446.797 -276.04 li
447.034 -275.211 li
.95346 .916228 .0104982 .0011902 cmyk
@
.355 lw
[] 0 dsh
366.389 -275.211 mo
366.389 -417.316 li
511.218 -417.316 li
511.218 -275.211 li
366.389 -275.211 li
.694423 .677272 .637385 .738643 cmyk
@
grestore
.4 lw
[] 0 dsh
429.982 -408.79 mo
446.087 -408.79 li
@
431.462 -408.79 mo
431.462 -409.64 430.772 -410.33 429.922 -410.33 cv
429.073 -410.33 428.383 -409.64 428.383 -408.79 cv
428.383 -407.94 429.073 -407.251 429.922 -407.251 cv
430.772 -407.251 431.462 -407.94 431.462 -408.79 cv
0 0 0 0 cmyk
f
.355 lw
431.462 -408.79 mo
431.462 -409.64 430.772 -410.33 429.922 -410.33 cv
429.073 -410.33 428.383 -409.64 428.383 -408.79 cv
428.383 -407.94 429.073 -407.251 429.922 -407.251 cv
430.772 -407.251 431.462 -407.94 431.462 -408.79 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
447.567 -408.79 mo
447.567 -409.64 446.877 -410.33 446.028 -410.33 cv
445.177 -410.33 444.488 -409.64 444.488 -408.79 cv
444.488 -407.94 445.177 -407.251 446.028 -407.251 cv
446.877 -407.251 447.567 -407.94 447.567 -408.79 cv
0 0 0 0 cmyk
f
447.567 -408.79 mo
447.567 -409.64 446.877 -410.33 446.028 -410.33 cv
445.177 -410.33 444.488 -409.64 444.488 -408.79 cv
444.488 -407.94 445.177 -407.251 446.028 -407.251 cv
446.877 -407.251 447.567 -407.94 447.567 -408.79 cv
.0161135 .957946 .906828 9.15541e-05 cmyk
@
.694423 .677272 .637385 .738643 cmyk
%ADOBeginSubsetFont: SBVPMX+TimesNewRomanPS AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSJ+TimesNewRomanPS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7A73D33855495D9933548CAEBCC99DCF7AB3BB8E9059071857DB9430B23426E6D6123291A4B6E2D5B9EFC1AAEB88E0A133C2BD24EF406FB30624C02344CCF6D3D463EDA7733F28DBAE0ED33CA9D6C96284BA4DA326C2BF04612848D192945EF99F3C915D01AA9016B57B70DE2D2D7D072> |-/Z <1C60D8A8C9B7D8BE6A6C4306EA564EF604D5FBACA04E93B95E64204EB112ACB55BC444A9218C5A1A6CEA19FA64C75F273D9C46A2EA6D00FB944A1FBC3CC397535A9C35D81A889A614B> |-/r <1C60D8A8C9B81F2C46F55B66694B115BD121138C19EA6BB9FDEC19598F770072F51D5A41ABEEF64C2EFB3D34AEC6538C0369C4D60825FCFA8F9BC491AD1E51614DE6C39F278C0428320D60B6B2A4FC28EE9886B8C0DFE33672D30A2E3A95CB1E3069AB76213D54C2F75C7C32E576B43F4E07EA5DCBEC65C3E55A274406F05764> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSJ+TimesNewRomanPS /Encoding getdup 57 /nine putdup 90 /Z putdup 114 /r putpop%ADOEndSubsetFont
/YOSQSJ+TimesNewRomanPS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 9{/.notdef}rp /M 3{/.notdef}rp /Q 4{/.notdef}rp /V 3{/.notdef}rp /Z /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 8{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u 9{/.notdef}rp /minus 128{/.notdef}rp]YOSQSJ+TimesNewRomanPS nfYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf450.114 -410.802 mo(90)[2.1908 0 ]xshYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf454.496 -406.421 mo(Zr)[4.48669 0 ]xsh.4 lw
429.982 -399.553 mo
446.087 -399.553 li
.95346 .916228 .0104982 .0011902 cmyk
@
431.58 -399.553 mo
431.58 -400.469 430.837 -401.211 429.922 -401.211 cv
429.007 -401.211 428.264 -400.469 428.264 -399.553 cv
428.264 -398.638 429.007 -397.895 429.922 -397.895 cv
430.837 -397.895 431.58 -398.638 431.58 -399.553 cv
f
431.58 -399.553 mo
431.58 -400.469 430.837 -401.211 429.922 -401.211 cv
429.007 -401.211 428.264 -400.469 428.264 -399.553 cv
428.264 -398.638 429.007 -397.895 429.922 -397.895 cv
430.837 -397.895 431.58 -398.638 431.58 -399.553 cv
@
447.685 -399.553 mo
447.685 -400.469 446.943 -401.211 446.028 -401.211 cv
445.113 -401.211 444.37 -400.469 444.37 -399.553 cv
444.37 -398.638 445.113 -397.895 446.028 -397.895 cv
446.943 -397.895 447.685 -398.638 447.685 -399.553 cv
f
447.685 -399.553 mo
447.685 -400.469 446.943 -401.211 446.028 -401.211 cv
445.113 -401.211 444.37 -400.469 444.37 -399.553 cv
444.37 -398.638 445.113 -397.895 446.028 -397.895 cv
446.943 -397.895 447.685 -398.638 447.685 -399.553 cv
@
.694423 .677272 .637385 .738643 cmyk
YOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf450.114 -401.566 mo(92)[2.1908 0 ]xshYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf454.496 -397.184 mo(Zr)[4.48669 0 ]xsh.592 lw
429.982 -390.316 mo
446.087 -390.316 li
.512627 .963104 .344335 .174105 cmyk
@
.694423 .677272 .637385 .738643 cmyk
%ADOBeginSubsetFont: SBVPMX+TimesNewRomanPS AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSJ+TimesNewRomanPS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B81F2C46F55B675DEF4FEF8ADE520CF08579DFA34CECB03B463E5222CEBCCF7773FAB0DDECF679E85A200813B543B76FAEDFBB0D9E4D7C99AA72> |-/a <1C60D8A8C9B77FE24414BFDEF4E80C4D790B946AE076B4646C6C07F81B63278106ED9FB404501811C1433BB554E5AF6B151556DC4888DE61E0E453C2D867FF5FA12CB2514FA57D4B2D64E56AC0AA25BEB67F6A8B72896256DD560EDD238056F1D454F3C5692E86E47B5E20E9285262829D061BA455239B9A260858B02489FEE0CDAE3B3615E7DEF515A3A31ACC4D34C45CBF8EF3D4BEFE8929ABF7E29056B502C7AD2297ABAD0E2B16AFCA275D51DC4912316BEE36D646955956EC70DA4CEFF7F44C20> |-/g <1C60D8A8C9B7A73DB58070C767E00CC48E28515C3534D68C511D4E2634498773C500C5E15E67C2DF5619450EDCDA209CEF5F0D32D1D7271E74F3B535AE5E48DF940BEE5E32CF5D1108142AA277AA23719E25EC4CEE1B9CC6403A3F1FC226E3D191A3C26BE83F5D69F46844F9765819AC263177543523569C8FD833083ECD41498E0B34D4CC69FCD1B8B590A8012B42B3860E49CC8B61E952C1D89A14AF7C3D3838B78B8CD293E8A70ED879D6E22F2E8C54F57C81114BA56383E03E097C653E5B90FC257383704EE28AF7F69A77C29DA6378CF09FEAD16AA5A2B539D456366C59B746586F352CBAD262154A1286C8DEED3A89E9D1A325E45FBCE7DA0AE5FC5B871AF6E7531AF1A5B9E6092D9552FD37DB5238A3914E1D767F27F8229FBA57A6185C0044FEE29F6C8F32F1F3C033768F589DA73D4660D8212296E659D9FBEA7C607B755C0F83E28FB78E8BB59487B8F7E2641C51AA663B7C62373FA4C94BA19AF707A702C2515D5F9AB0ED94FF323FCE6947F26AFE3AD66687B242BD54396D4A13F78618AF9A0D4A58A0A47D87C6270232986EE72FA9BDE6D04D43E7761149CC787D583069937FE9EC6673A86568F63116EF369B4B6D551598> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSJ+TimesNewRomanPS /Encoding getdup 73 /I putdup 97 /a putdup 103 /g putpop%ADOEndSubsetFont
/YOSQSJ+TimesNewRomanPS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 5{/.notdef}rp /I 3{/.notdef}rp /M 3{/.notdef}rp /Q 4{/.notdef}rp /V 3{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 6{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u 9{/.notdef}rp /minus 128{/.notdef}rp]YOSQSJ+TimesNewRomanPS nfYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf450.114 -387.948 mo(Inert target )[2.44485 3.67105 3.25989 2.44489 2.04111 1.83624 2.04111 3.25989 2.44489 3.67105 3.25989 2.04111 0 ]xsh[2.3684 2.3684 ] 0 dsh
429.982 -381.079 mo
446.087 -381.079 li
.0161135 .957946 .906828 9.15541e-05 cmyk
@
.694423 .677272 .637385 .738643 cmyk
%ADOBeginSubsetFont: SBVPMX+TimesNewRomanPS AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSJ+TimesNewRomanPS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B7E7C1AF2D8FDCE9D340212A1593AF3894EEEE1D3BC6FD21DB82D7516964E1610DA2EAC9958A8B8351729C3C1AEB> |-/d <1C60D8A8C9B7A73D33D910C0ACF53AD6F42F01284C649BDAE51976E56022F2B4FF67866F5FFAAE991D2FE95B6A3269750D6D28FEA3386AF5F1BC91895FF64FAF866D9F578633EC86294552548FB9F2149F1A58E9460FE5F18391C90B8CD3D2E4DA7CFBE445A6D12B12BB75D90E7A342C2D2697650AAA0DFE9D43073FC7096E7B571F5D9544F410220D> |-/h <1C60D8A8C9B7A73DC54E0D6D91C3E93CDFF2BC7A6090CA1AFC8FDDB4AAF1ABF332006EBF2179850BE212FF452D8F34D04CAFBF02AF2781D3A40E922C0FC4106376319FB63C136C5975C20CB8C4BBC583957E1CA0AC4EE54E4C7F68BC2B129F991D204B58FEBB07CDAC87F0817C48DE76B39686CE7ACDA013E64D8F81B6CC34C60810DF62> |-/i <1C60D8A8C9B854D0888002323AC88DE1D732A0B438F52A36AC4C8235B50195661EE4F4F056C00FB5169E51E2DC2CFF59762708862D2CF2C9EE7C48914B2654119B06323F8628EDED75E67065F91DA9A509BD0525258AACECE39D658FE1D17161E00965A567F64B9D149E83A8E009> |-/w <1C60D8A8C9B6079F073CF9E6A5EB72BE71990D3469D504022ADF505AECA549EFAEDD915B813E63D8D5CAC64363E9510077DF9E70707E3E76EBAF6A25D58C93A900FDD1FAFF0E4E6EE3620005074FCBBF72EEA32ABD214DF92DDDA93FD1F5C33A1FE87E3C20BDB71CE4923F0FDB0871DE3CBDF88D2446F225A59BA9669A8F9D70E8D91F3C0A04235AABD56A298EB56A896B7C3B1F86A84E0323A14AADC4> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSJ+TimesNewRomanPS /Encoding getdup 43 /plus putdup 100 /d putdup 104 /h putdup 105 /i putdup 119 /w putpop%ADOEndSubsetFont
/YOSQSJ+TimesNewRomanPS*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four /five 3{/.notdef}rp /nine 9{/.notdef}rp /C 5{/.notdef}rp /I 3{/.notdef}rp /M 3{/.notdef}rp /Q 4{/.notdef}rp /V 3{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /h /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u /.notdef /w 7{/.notdef}rp /minus 128{/.notdef}rp]YOSQSJ+TimesNewRomanPS nfYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf450.114 -383.092 mo(90)[2.1908 0 ]xshYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf454.496 -378.71 mo(Zr  with 2)[4.48596 2.44489 1.83478 1.83478 5.30099 2.04111 2.04111 3.67105 1.83481 0 ]xshYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf483.656 -383.092 mo(+)shYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf486.129 -378.71 mo( and 3)[1.83551 3.25992 3.67105 3.67105 1.83551 0 ]xshYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf504.071 -383.092 mo(\177)sh[4.7368 2.3684 1.421 2.3684 ] 0 dsh
429.982 -371.843 mo
446.087 -371.843 li
.95346 .916228 .0104982 .0011902 cmyk
@
.694423 .677272 .637385 .738643 cmyk
YOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf450.114 -373.855 mo(92)[2.1908 0 ]xshYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf454.496 -369.474 mo(Zr  with 2)[4.48596 2.44489 1.83478 1.83478 5.30099 2.04111 2.04111 3.67105 1.83481 0 ]xshYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf483.656 -373.855 mo(+)shYOSQSJ+TimesNewRomanPS*1 [7.3421 0 0 -7.3421 0 0 ]msf486.129 -369.474 mo( and 3)[1.83551 3.25992 3.67105 3.67105 1.83551 0 ]xshYOSQSJ+TimesNewRomanPS*1 [4.3816 0 0 -4.3816 0 0 ]msf504.071 -373.855 mo(\177)sh.355 lw
[] 0 dsh
402.271 -358.579 mo
401.087 -360.948 li
399.902 -358.579 li
401.087 -360.948 mo
401.087 -320.684 li
422.758 -319.264 mo
421.573 -321.632 li
420.389 -319.264 li
421.573 -321.632 mo
421.573 -294.396 li
@
YOSQSJ+TimesNewRomanPS*1 [8.5263 0 0 -8.5263 0 0 ]msf393.035 -307.539 mo(2)shYOSQSJ+TimesNewRomanPS*1 [5.0921 0 0 -5.0921 0 0 ]msf397.298 -312.632 mo(+)shYOSQSJ+TimesNewRomanPS*1 [8.5263 0 0 -8.5263 0 0 ]msf416.008 -285.513 mo(4)shYOSQSJ+TimesNewRomanPS*1 [5.0921 0 0 -5.0921 0 0 ]msf420.272 -290.605 mo(+)sh1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LWYAAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginYOSQSD+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/semicolon <1C60D8A8C9B854D09D7AD97383C8388D4CD6615DF9607347FFFDEAB0E7479FDC37D8D2BA7CE7A7E10202379107368A0370C61822048DB2CEB190B444AC36D82DCB4D58EC11FE55E48CC97CF38F7FCAC86DE803E25C3A630623B78B93D91235D86534524222C8ED158E98604639FFBE02473907B87A9E22291E8041B73C2CEBB5F6401B737226D9084EEDDDA9E9> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSD+Times-Roman /Encoding getdup 59 /semicolon putpop%ADOEndSubsetFont
/YOSQSD+Times-Roman*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon /semicolon 5{/.notdef}rp /A /.notdef /C /D /E /F /G /H /I /.notdef /K /L /M /N /.notdef /P /.notdef /R /S /T /.notdef /V /W /.notdef /Y /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z 51{/.notdef}rp /fi 2{/.notdef}rp /endash 78{/.notdef}rp]YOSQSD+Times-Roman nfYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf315.504 -232.52 mo(FIG.5.\(Coloronline\)Inelastic\(nontransfer\))[4.98532 2.98575 6.47372 5.2023 4.48322 6.02991 2.98575 5.98065 4.48318 2.49268 4.48318 4.86868 4.48322 4.48318 2.49268 2.49265 4.48322 3.98108 4.88663 2.98572 4.48322 3.98108 2.49268 3.98108 3.48798 2.49268 2.49265 5.86853 2.98575 4.48318 4.48318 4.48322 2.49268 2.98572 3.98108 4.48322 3.48801 2.98575 3.98108 2.98575 0 ]xsh%ADOBeginSubsetFont: CMKQMX+MTMI AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSH+MTMI dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B859EB4CC3B80A0EF1567264FFADB77611645EA6395F9BB3FD093035B70BC8D098F94C1AE3> |-/beta <1C60D8A8C9B7E7C1A36F97462FBEBAAC9BCDBC589FE74C0946A760D7AA84525B80666BE83328AAF58EEBBB4480D6523F39D3B1893378748CE77FE2DEC567B989353BE37BE63EC83F10AE175AAD2BB4F306610E4A5B2B67C45B6316399C29B35CBA14A7008F11A6809CB1C0D4509D7040815296F278E219159FE234F7413F80DD1EECE8064F687375D7639E6C723953FF84D0E06C5319AC837016C666E51AD9DA6A96EAFA21F601494DF3ED93098BFE688CC553C5E620DA11D64170395076ED620A5C383FA25CAAFA10C4BEB42070C372C2C98F9DC42BCB14C7C1B704409885CF42985BF1857235> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSH+MTMI /Encoding getdup 58 /period putdup 175 /beta putpop%ADOEndSubsetFont
/YOSQSH+MTMI*1 [49{/.notdef}rp /Delta1 8{/.notdef}rp /period /comma /.notdef /slash 3{/.notdef}rp /A 3{/.notdef}rp /E 11{/.notdef}rp /Q 93{/.notdef}rp /beta 80{/.notdef}rp]YOSQSH+MTMI nfYOSQSH+MTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf479.229 -232.52 mo(Q)shYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf486.834 -232.52 mo(-valuespectrafor)[2.98575 4.25723 3.98108 2.49268 4.48318 5.86853 3.48801 4.48322 3.98108 3.98108 2.49261 2.98578 5.87744 2.98578 4.48322 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf303.552 -224.816 mo(20)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf310.032 -221.558 mo(Ne)[6.47104 0 ]xsh%ADOBeginSubsetFont: KVXQMX+MTSY AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginYOSQSI+MTSY dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B6C18031E531D62CCFFB4F07592A446F7E1EF35039F4AC88C2> |-systemdict /gcheck known {setglobal} if end {end} ifendYOSQSI+MTSY /Encoding getdup 161 /minus putpop%ADOEndSubsetFont
/YOSQSI+MTSY*1 [67{/.notdef}rp /plus /equal 92{/.notdef}rp /minus 15{/.notdef}rp /openbullet 78{/.notdef}rp]YOSQSI+MTSY nfYOSQSI+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf323.973 -221.558 mo(C)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf334.449 -224.816 mo(90)[2.98819 0 ]xshYOSQSH+MTMI*1 [5.9776 0 0 -5.9776 0 0 ]msf340.426 -224.816 mo(;)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf342.406 -224.816 mo(92)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf348.885 -221.558 mo(Zr\(openand\256lledcircles,respectively\),takenfrom)[5.47839 7.11926 2.98575 4.48318 4.48322 3.98108 8.61313 3.97839 4.48318 8.61313 4.98532 2.49268 2.49265 3.98108 8.61313 3.97839 2.49265 2.98575 3.98108 2.49268 3.98108 3.48798 6.36346 2.98843 3.98108 3.48801 4.48322 3.98108 3.98108 2.49268 2.26849 4.34689 3.98111 2.49265 4.48318 2.98578 6.37241 2.49265 3.98108 4.39178 3.98108 8.62207 2.98578 2.98572 4.48315 0 ]xsh303.552 -210.596 mo(scatteringofthe)[3.48801 3.98108 3.98108 2.49265 2.49268 3.98108 2.98575 2.49265 4.48322 9.32416 4.48318 7.82135 2.49265 4.48318 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf371.34 -213.854 mo(20)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf377.82 -210.596 mo(Neprojectileat156)[6.47284 8.81128 4.4823 2.98486 4.4823 2.49176 3.98019 3.98019 2.49176 2.49176 2.49176 8.82025 3.98016 7.33542 4.48233 4.4823 0 ]xshYOSQSI+MTSY*1 [5.9776 0 0 -5.9776 0 0 ]msf456.561 -213.854 mo(\261)shYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf460.053 -210.596 mo(.Thecirclesshowthe)[7.07449 5.48108 4.4823 8.81131 3.98016 2.49176 2.98486 3.98019 2.49176 3.98016 8.33435 3.49249 4.4823 4.25726 11.3039 2.49268 4.4823 0 ]xsh303.552 -199.643 mo(numberofcountsina0.44-MeV)[4.4823 4.4823 6.97498 4.4823 3.98019 6.04776 4.4823 6.03882 3.97839 4.4823 4.4823 4.4823 2.49176 6.54285 2.49265 7.53357 7.03864 4.4823 2.24072 4.4823 4.4823 2.98483 7.97031 3.98019 0 ]xshYOSQSH+MTMI*1 [8.9664 0 0 -8.9664 0 0 ]msf428.196 -199.643 mo(Q)shYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf435.802 -199.643 mo(-valuebin.LinesrepresentCC)[2.98575 4.25723 3.98108 2.49268 4.48318 7.03775 4.48318 2.49268 4.48318 5.29196 5.47842 2.49265 4.48322 3.98108 6.54285 2.98843 3.98108 4.48322 2.98572 3.98108 3.48804 3.98108 4.48322 5.54388 5.98065 0 ]xsh303.552 -188.68 mo(calculationsafterfoldingwiththeexperimentalresolution\(seetext\).)[3.98019 3.98019 2.49176 3.98016 4.4823 2.49179 3.98016 2.49176 2.49179 4.4823 4.4823 5.68835 3.98016 2.98486 2.49176 3.98019 5.17532 2.98843 4.4823 2.49179 4.4823 2.49176 4.4823 6.67816 6.47284 2.49176 2.49176 6.66922 2.49176 4.4823 6.16528 3.84302 4.4823 4.4823 3.98019 2.98483 2.49179 6.97495 3.98019 4.4823 2.49179 3.98019 4.69839 2.98483 3.98022 3.48709 4.48233 2.49176 4.4823 2.49176 2.49176 4.48233 6.66922 2.9884 3.48712 3.98016 6.16534 2.49261 3.84302 4.4823 2.49182 2.98486 0 ]xsh303.552 -177.718 mo(Thesolidlinetreatsthezirconiumtargetsasinert\(i.e.,itignorestheir)[5.47751 4.4823 5.80484 3.49249 4.4823 2.49176 2.49176 6.2998 2.49176 2.49176 4.4823 5.80484 2.49268 2.98483 3.98019 3.98019 2.49176 5.30997 2.49265 4.4823 5.80484 3.98019 2.49176 2.98486 3.98016 4.4823 4.4823 2.49176 4.4823 8.80234 2.49176 3.98019 2.82611 4.4823 3.98022 2.49176 5.31891 3.97839 5.31 2.49265 4.48233 3.98016 2.98486 4.32001 2.98486 2.49176 2.24072 3.98019 2.24069 4.05908 2.49179 4.32001 2.49179 4.4823 4.4823 4.4823 2.98486 3.98022 5.30994 2.49176 4.4823 3.98022 2.49176 0 ]xsh303.552 -166.765 mo(excitations\),whereasthedashedlinefor)[3.84299 4.48233 3.98016 2.49176 2.49176 3.98019 2.49176 2.49176 4.48233 4.4823 3.48709 2.98483 6.00302 6.47284 4.4823 3.98019 2.98483 3.98019 3.98019 7.25388 2.49176 4.4823 7.73981 4.4823 3.98019 3.48709 4.4823 3.98019 8.23563 2.49176 2.49176 4.4823 7.73981 2.98843 4.48233 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf459.162 -170.015 mo(90)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf465.633 -166.766 mo(Zrandthedot-dashed)[5.47839 6.75882 3.98108 4.48318 8.24463 2.49265 4.48322 7.73978 4.48322 4.48322 2.49261 2.98578 4.48322 3.98108 3.48798 4.48322 3.98108 0 ]xsh303.552 -155.804 mo(curvefor)[3.98108 4.48322 2.98575 4.34689 6.41727 2.98843 4.48318 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf338.661 -159.062 mo(92)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf345.132 -155.804 mo(Zrtakeintoaccountthesingleandmutualexcitationsof)[5.47751 5.43625 2.49176 3.98019 4.39175 6.41724 2.49179 4.4823 2.49176 6.92114 3.98019 3.98019 3.98019 4.4823 4.4823 4.4823 4.94138 2.49176 4.4823 6.41727 3.49246 2.49176 4.4823 4.4823 2.49176 6.41727 3.97839 4.4823 6.92117 6.97498 4.4823 2.49176 4.4823 3.98016 4.93243 3.84302 4.4823 3.98016 2.49182 2.49176 3.98016 2.49176 2.49176 4.48236 4.4823 5.93134 4.4823 0 ]xsh303.552 -144.842 mo(thetargetquadrupole-andoctupole-phononstates.Alldistributions)[2.49176 4.4823 6.63336 2.49265 3.98019 2.82614 4.4823 3.98019 5.1485 4.4823 4.4823 3.98019 4.4823 2.98483 4.48233 4.4823 4.4823 2.49176 3.98016 5.6434 3.98019 4.4823 7.13724 4.4823 3.98019 2.49176 4.4823 4.4823 4.4823 2.49176 3.98019 2.98483 4.4823 4.4823 4.4823 4.48233 4.48233 7.14621 3.48709 2.49176 3.98022 2.49176 3.98019 3.48709 4.88672 6.47104 2.49179 5.1485 4.4823 2.49176 3.48712 2.49176 2.98486 2.49176 4.30206 4.4823 2.49182 2.49176 4.4823 4.4823 0 ]xsh303.552 -133.888 mo(arenormalizedtohavethesamevalueasthe)[3.98019 2.98483 6.06577 4.48233 4.4823 2.98483 6.97498 3.98016 2.49176 2.49176 3.98019 3.98019 6.56967 2.49176 6.56161 4.4823 3.79819 4.34689 6.07477 2.49176 4.4823 6.05679 3.49246 3.98019 6.97498 6.06577 4.25726 3.98016 2.49176 4.4823 6.0658 3.98016 5.57092 2.49176 4.4823 0 ]xshYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf464.166 -137.138 mo(20)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf470.637 -133.889 mo(Ne)[6.47104 0 ]xshYOSQSI+MTSY*1 [8.9664 0 0 -8.9664 0 0 ]msf484.588 -133.889 mo(C)shYOSQSD+Times-Roman*1 [5.9776 0 0 -5.9776 0 0 ]msf495.063 -137.138 mo(90)[2.98819 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf501.543 -133.889 mo(Zrdataatthe)[5.47839 5.07584 4.48322 3.98108 2.49261 6.0658 3.98108 4.58093 2.49268 4.48315 0 ]xsh303.551 -122.927 mo(elasticpeak.)[3.98019 2.49176 3.98019 3.48709 2.49176 2.49176 6.22806 4.4823 3.98019 3.98019 4.4823 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf303.552 -94.7931 mo(20)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.022 -91.175 mo(Neionsfrombothtargets.TheCMdetectorangleis156)[7.19101 7.7489 2.76761 4.97931 4.97931 7.20004 3.31549 3.31546 4.97934 11.0704 4.97931 4.97931 2.76761 8.30679 2.77161 4.42139 3.14114 4.97931 4.42142 2.76758 3.87354 5.81418 6.08508 4.97931 7.74893 6.64212 12.1773 4.97931 4.42142 2.76761 4.42139 4.42142 2.76761 4.97931 6.65094 4.42142 4.97931 4.97928 2.76764 7.75787 2.77161 7.19104 4.97931 4.97931 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf544.635 -94.7931 mo(\261)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf303.552 -79.718 mo(inbothcasesandtheCMenergyis51.85MeV.Thesolid)[2.76761 8.98227 4.97931 4.97931 2.76761 8.9823 4.42139 4.42142 3.87354 4.42139 7.88449 4.42142 4.97931 8.99124 2.76761 4.97931 8.42438 6.64212 12.8608 4.42139 4.97931 4.42142 3.14114 4.97931 9.00018 2.76764 7.86652 4.97931 4.97931 2.48865 4.97931 8.99127 8.8548 4.42142 5.90384 6.49762 6.08508 4.97931 8.43329 3.87952 4.97937 2.76758 2.76758 0 ]xsh303.552 -68.261 mo(curveshowstheresultofaCCcalculationignoringtarget)[4.42142 4.97928 3.31549 4.82388 8.67645 3.87354 4.97931 4.72525 7.19101 8.11859 2.77161 4.97931 8.66745 3.31549 4.42139 3.87354 4.97931 2.76761 7.00171 4.97931 7.55954 8.66748 6.64212 10.8813 4.42139 4.42139 2.76764 4.42139 4.97931 2.76758 4.42142 2.76761 2.76761 4.97928 9.23438 2.77161 4.97928 4.97931 4.97931 3.31546 2.76764 4.97925 9.23438 2.77161 4.42139 3.14111 4.97931 4.42145 0 ]xsh303.552 -56.804 mo(excitationsbutincludingthe2)[4.26599 4.97931 4.42139 2.76761 2.76761 4.42142 2.76761 2.76761 4.97931 4.97931 7.21799 4.77905 4.97729 6.10211 2.77158 4.97931 4.42142 2.76761 4.97931 4.97931 2.76761 4.97931 8.31577 2.76761 4.97931 7.73993 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf427.176 -60.4221 mo(C)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf436.446 -56.804 mo(and4)[4.4194 4.97733 8.30682 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf459.126 -60.4221 mo(C)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf468.396 -56.804 mo(statesin)[3.87552 2.76962 4.42337 2.76962 4.4234 7.19107 2.76959 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf504.918 -60.4221 mo(20)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf512.397 -56.804 mo(Ne.[The)[7.19 4.42041 5.81415 3.32147 6.08411 4.97833 0 ]xsh303.553 -45.347 mo(inclusionofthe6)[2.76862 4.98029 4.42242 2.76859 4.98032 3.87451 2.76862 4.98032 7.00171 4.97733 5.32791 2.77158 4.98032 6.43484 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf371.565 -48.9651 mo(C)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf379.512 -45.347 mo(stategivesnodiscernibledifferenceonthis)[3.87454 2.76859 4.42239 2.76862 6.43484 4.97733 2.51953 4.82388 4.42242 5.9039 4.98029 6.99277 4.98029 2.76862 3.87454 4.42239 4.42239 3.31647 4.98032 2.76859 4.98032 2.76862 6.43484 4.97729 2.76862 3.0694 3.31647 4.42242 3.31647 4.42239 4.98032 4.42236 6.44385 4.98029 7.00171 2.76862 4.98029 2.76862 0 ]xsh303.552 -33.89 mo(scale,andthesmalltarget-radiusdifference\(fromthe)[3.87454 4.42239 4.42239 2.76862 4.42239 6.4169 4.42242 4.98029 8.90955 2.76862 4.98029 8.34271 3.87952 7.74988 4.42242 2.76859 6.68689 2.76862 4.42239 3.14114 4.98029 4.42239 2.76862 3.31647 3.31647 4.42242 4.98029 2.76862 4.98029 7.8028 4.98029 2.76862 3.0694 3.32147 4.42239 3.3165 4.42239 4.98032 4.42239 8.35165 3.31647 3.3165 3.3165 4.98029 11.6642 2.76855 4.98035 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf530.615 -33.89 mo(A)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf537.885 -37.5081 mo(1)shYOSQSH+MTMI*1 [6.9738 0 0 -6.9738 0 0 ]msf541.368 -37.5081 mo(=)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf544.645 -37.5081 mo(3)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf303.552 -22.433 mo(factor\)alsomakesanegligibledifferencetothecurve.]To)[3.22183 4.42239 4.42239 2.76862 4.98032 3.31647 7.20886 4.4194 2.76862 3.87454 8.86472 7.7489 4.42239 4.87769 4.42239 7.77591 8.31577 4.97733 4.26599 4.97733 2.76859 2.76862 4.98029 2.76862 4.98032 2.76859 8.32477 4.98029 2.76862 3.0694 3.32144 4.42239 3.31647 4.42242 4.98029 4.42242 8.32474 2.76862 8.86472 2.76862 4.98029 8.3158 4.42242 4.98029 3.31647 4.82391 4.41937 2.48969 7.21783 5.28308 0 ]xsh303.552 -10.976 mo(makeameaningfulcomparisonwiththeexperimentaldata,)[7.7489 4.42142 4.87769 8.21716 8.19922 7.7489 4.42142 4.42139 4.97931 2.76764 4.97931 4.97931 3.31546 4.97931 6.57932 4.42139 4.97931 7.7489 4.97931 4.42142 3.31546 2.76761 3.87354 4.97931 8.77505 7.19101 2.76761 2.76758 8.75714 2.76761 4.97931 8.20816 4.26599 4.97931 4.97931 4.42139 3.31549 2.76761 7.74893 4.42139 4.97931 2.76758 4.42145 6.57928 4.97931 4.42139 2.76758 4.42145 0 ]xsh303.552 .480988 mo(thistheoreticalcurveandsubsequentcalculationshavebeen)[2.76761 4.97931 2.76761 7.18213 2.76758 4.97931 4.42142 4.97931 3.31546 4.42142 2.76761 2.76761 4.42142 4.42142 6.08414 4.42142 4.97931 3.31546 4.82391 7.7489 4.42142 4.97928 8.28891 3.8735 4.97931 4.97931 3.87354 4.42139 4.97931 4.97931 4.42142 4.97928 6.10211 4.42139 4.42145 2.76758 4.42142 4.97928 2.76764 4.42139 2.76761 2.76761 4.97931 4.97931 7.20004 4.97928 4.22119 4.82385 7.73999 4.97931 4.42139 4.42139 0 ]xsh303.552 11.938 mo(foldedwithaGaussianexp\()[3.31848 4.98227 2.7706 4.9823 4.42441 6.81342 7.194 2.7706 2.7706 6.79547 6.24557 7.19101 4.42438 4.9823 3.87653 3.87653 2.7706 4.42438 6.81345 4.26599 4.97729 4.9823 0 ]xshYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf412.516 11.938 mo(\241)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf420.283 11.938 mo(Q)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf428.733 8.31992 mo(2)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf432.711 11.938 mo(=1)[4.68045 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf445.401 8.31992 mo(2)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf449.397 11.938 mo(\),with)[3.31946 4.30185 7.19501 2.77158 2.77161 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf476.559 11.938 mo(1)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf487.342 11.938 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf497.872 11.938 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf502.849 11.938 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf505.585 11.938 mo(75MeV,to)[4.97931 6.82236 8.85486 4.42139 5.90387 4.31976 2.76764 0 ]xsh303.553 23.395 mo(simulatethedetectorresolution;thisisseentoworkwellinthe)[3.87552 2.76962 7.75089 4.98129 2.76962 4.4234 2.76959 6.28241 2.76959 4.98132 6.29138 4.98129 4.4234 2.76959 4.4234 4.4234 2.76959 4.98129 5.19342 3.3175 4.42337 3.87552 4.98132 2.76959 4.98132 2.76959 2.76959 4.98129 4.98129 4.64359 2.76959 4.98129 2.76959 5.73358 2.76959 5.74249 3.87555 4.4234 4.4234 6.84927 2.76962 6.8403 7.09238 4.97729 3.3175 6.8403 7.19296 4.42346 2.76959 4.63458 2.76959 6.8493 2.76959 4.98132 0 ]xsh303.553 34.852 mo(regionoftheelasticpeak,whereallofthecurvesdisplayedare)[3.31647 4.26599 4.98032 2.76859 4.98032 6.95688 4.98032 5.28308 2.76862 4.98029 6.38104 4.41943 2.76859 4.42239 3.87454 2.76862 2.76859 6.38104 4.98032 4.42239 4.42242 4.98029 4.47321 7.19202 4.98029 4.42239 3.3165 6.39001 4.4194 2.76859 4.73425 4.98029 5.28308 2.76862 4.98029 6.38107 4.42239 4.98032 3.3165 4.82388 4.4194 5.85907 4.97733 2.76862 3.87454 4.98029 2.76862 4.42242 4.98029 4.42242 6.95685 4.42242 3.31647 0 ]xsh303.553 46.309 mo(normalizedtohavethesamevalueasthe)[4.97931 4.97931 3.31546 7.74893 4.42139 2.76761 2.76761 4.42142 4.42139 7.48792 2.76761 7.46994 4.97931 4.22116 4.82388 6.92999 2.76761 4.97931 6.91205 3.87952 4.42142 7.7489 6.92102 4.72525 4.42142 2.76758 4.97931 6.92999 4.42139 6.36322 2.76758 4.97931 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf468.963 42.6909 mo(20)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf476.433 46.309 mo(Ne)[7.19101 0 ]xshYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf491.922 46.309 mo(C)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf503.568 42.6909 mo(90)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf511.038 46.309 mo(Zrdata.)[6.08408 5.83203 4.97833 4.42041 2.7666 4.42041 0 ]xsh315.505 57.766 mo(Wenotethatalthoughthecalculation\256tsthe)[8.6037 8.80197 4.97931 4.97931 2.76761 8.81091 2.77161 4.97931 4.42139 7.15515 4.42139 2.76764 2.76758 4.97931 4.97931 4.97934 4.97928 9.36884 2.76761 4.97931 8.80197 4.42139 4.42139 2.76764 4.42139 4.97931 2.76761 4.42142 2.76758 2.76761 4.97931 9.37778 5.53522 2.76761 8.25308 2.76764 4.97928 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf510.759 54.148 mo(90)[3.48343 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf518.238 57.7659 mo(Zrdata)[6.08508 7.71295 4.97931 4.42145 2.76758 0 ]xsh303.553 69.2229 mo(extremelywelluptoaround5MeV,itconsiderablyunder-)[4.26599 4.97733 2.76761 3.31546 4.42142 7.7489 4.42142 2.76761 8.76608 7.19101 4.42139 2.76764 6.54343 4.97733 8.75711 2.77161 8.75711 4.41943 3.31546 4.97931 4.97931 4.97928 8.76611 8.74817 8.85583 4.42139 5.90384 6.27344 2.77161 6.54343 4.42139 4.97931 4.97931 3.87354 2.76761 4.97931 4.42142 3.31546 4.42142 4.97931 2.76758 8.76611 4.97931 4.97931 4.97925 4.42145 3.12317 0 ]xsh303.553 80.6799 mo(estimatesthecrosssectionfor)[4.42239 3.87454 2.76862 2.76859 7.74991 4.42239 2.76862 4.42239 8.73032 2.76859 4.98032 9.2702 4.4194 3.31647 4.98032 3.87454 8.72131 3.87454 4.42239 4.42239 2.76862 2.76859 4.98032 9.83707 3.32047 4.98032 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf437.355 77.0619 mo(92)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf444.825 80.6799 mo(Zr.Theinclusionofthe)[6.08707 3.31747 7.33548 6.08408 4.98129 9.27917 2.76959 4.98129 4.4234 2.76962 4.98129 3.87552 2.76959 4.98129 9.8371 4.97729 8.17224 2.77161 4.98132 0 ]xsh303.552 92.1369 mo(quadrupole-andoctupole-phononstatesinthetargetsdoes)[4.97931 4.97931 4.42139 4.97931 3.31549 4.97931 4.97931 4.97931 2.76761 4.42142 7.39813 4.42142 4.97931 9.03607 4.97931 4.42142 2.76758 4.97931 4.97931 4.97931 2.76761 4.42142 3.31546 4.97931 4.97931 4.97928 4.97931 4.97931 9.06299 3.87354 2.76761 4.42142 2.76758 4.42139 7.92932 2.76764 9.0271 2.76758 4.97931 8.46921 2.77161 4.42142 3.14111 4.97931 4.42139 2.76758 7.92932 4.97931 4.97931 4.42139 0 ]xsh303.552 103.594 mo(notresolvethisdiscrepancy.Thedashedcurvefor)[4.97931 4.97931 4.67145 3.31549 4.42139 3.87354 4.97931 2.76761 4.82391 6.31827 2.77161 4.97931 2.76761 5.76941 4.97733 2.76761 3.87354 4.42142 3.31546 4.42142 4.97931 4.42139 4.97931 4.26599 4.32874 4.41046 6.08505 4.97931 6.31827 4.97931 4.42142 3.87354 4.97928 4.42142 6.88516 4.42139 4.97931 3.31549 4.82385 6.32727 3.31546 4.97931 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf500.445 99.9759 mo(90)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf507.924 103.594 mo(Zr\()[6.08411 5.22925 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf522.558 103.594 mo(E)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.731 105.088 mo(2)shYOSQSI+MTSY*1 [4.9813 0 0 -4.9813 0 0 ]msf533.214 103.072 mo(C)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf540.864 103.594 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf303.553 115.051 mo(2)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf308.53 115.051 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.266 115.051 mo(18MeV)[4.9783 6.63312 8.85382 4.42041 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf343.369 115.051 mo(;\257)[4.95035 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf353.934 116.545 mo(2)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf360.702 115.051 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf371.241 115.051 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf376.219 115.051 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf378.954 115.051 mo(10;)[4.97733 4.97729 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf393.336 115.051 mo(E)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf400.509 116.545 mo(3)shYOSQSI+MTSY*1 [4.9813 0 0 -4.9813 0 0 ]msf403.992 114.529 mo(\241)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf411.66 115.051 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf422.199 115.051 mo(2)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf427.177 115.051 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf429.912 115.051 mo(75MeV)[4.9783 6.63312 8.85382 4.42041 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf462.016 115.051 mo(;\257)[4.95035 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf472.581 116.545 mo(3)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf479.349 115.051 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf489.879 115.051 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf494.857 115.051 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf497.592 115.051 mo(17\)showsan)[4.97931 4.97931 5.18344 3.87354 4.97931 4.72528 7.19098 5.72461 4.41943 0 ]xsh303.553 126.508 mo(improvementofthe\256t,anditmayevenexplainsome)[2.76761 7.7489 4.97931 3.31549 4.82388 4.82388 4.4194 7.74893 4.42142 4.97931 8.94641 4.97931 9.45941 2.76761 4.97928 10.5663 5.53522 2.76761 8.63956 4.42142 4.97931 11.1242 2.76761 8.90955 7.7489 4.42142 11.1332 4.16736 4.82391 4.4194 11.1422 4.26599 4.97931 4.97928 2.76761 4.42139 2.76764 11.1332 3.87952 4.97931 7.7489 0 ]xsh303.553 137.965 mo(ofthehigherenergystructureinthedata,butthedot-)[4.97931 9.08084 2.76761 4.97931 10.1877 4.97733 2.76761 4.97931 4.97931 4.42139 9.08981 4.42142 4.97931 4.42139 3.14114 4.97931 10.7546 3.87354 2.76761 3.31549 4.97931 4.42139 2.76761 4.97931 3.31549 10.1788 2.77161 10.7367 2.77158 4.97931 10.1877 4.97931 4.42142 2.76758 4.42142 8.26199 4.77905 4.97729 8.53198 2.77161 4.97931 10.1877 4.97931 4.97931 2.76758 0 ]xsh303.553 149.422 mo(dashedcurvefor)[4.97931 4.42139 3.87354 4.97931 4.42142 9.72052 4.42139 4.97931 3.31549 4.82388 9.15265 3.31549 4.97931 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf378.972 145.804 mo(92)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf386.442 149.422 mo(Zr\()[6.08408 8.06366 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf403.911 149.422 mo(E)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf411.084 150.916 mo(2)shYOSQSI+MTSY*1 [4.9813 0 0 -4.9813 0 0 ]msf414.567 148.9 mo(C)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf422.217 149.422 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf432.756 149.422 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf437.734 149.422 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf440.469 149.422 mo(93MeV)[4.9783 6.63312 8.85382 4.42041 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf472.573 149.422 mo(;\257)[4.95035 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf483.138 150.916 mo(2)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf489.897 149.422 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf500.436 149.422 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf505.414 149.422 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf508.149 149.422 mo(10;)[4.97729 4.97736 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf522.531 149.422 mo(E)shYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf529.704 150.916 mo(3)shYOSQSI+MTSY*1 [4.9813 0 0 -4.9813 0 0 ]msf533.187 148.9 mo(\241)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf540.864 149.422 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf303.553 160.879 mo(2)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf308.53 160.879 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf311.266 160.879 mo(34MeV)[4.9783 6.63312 8.85382 4.42041 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf343.369 160.879 mo(;\257)[4.95035 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf353.934 162.373 mo(3)shYOSQSI+MTSY*1 [9.9626 0 0 -9.9626 0 0 ]msf360.702 160.879 mo(D)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf371.241 160.879 mo(0)shYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf376.219 160.879 mo(:)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf378.954 160.879 mo(17\)doesnothingtoimprovethelarge)[4.97931 4.97931 9.17947 4.97931 4.97928 4.42142 9.74747 4.97931 4.97931 2.76764 4.97931 2.76761 4.97931 10.8453 2.76761 10.8363 2.76764 7.7489 4.97931 3.31546 4.82388 4.82391 10.2874 2.76764 4.97931 10.2784 2.77161 4.42139 3.14117 4.97925 0 ]xsh303.553 172.336 mo(underestimateoftheexperimentaldatawiththattarget.)[4.97931 4.97931 4.97931 4.42139 3.31549 4.42142 3.87354 2.76761 2.76761 7.7489 4.42139 2.76764 6.92999 4.97729 5.81409 2.77161 4.97931 6.91205 4.26599 4.97931 4.97931 4.42139 3.31549 2.76761 7.7489 4.42139 4.97931 2.76761 4.42139 5.29214 4.97931 4.42142 2.76758 6.92102 7.19104 2.76758 2.76761 7.46994 2.76764 4.97931 4.42139 5.26523 2.76761 4.42139 3.14114 4.97928 4.42145 2.76758 0 ]xsh315.505 183.793 mo(InFig.)[3.31747 8.86472 5.53922 2.76959 4.98129 0 ]xsh.883635 .769161 0 0 cmyk
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf347.365 183.793 mo(6)sh1 /0 /CSD get_res sepcs
1 sep
YOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf352.342 183.793 mo(,weshowthedifference\(squares\)betweenthe)[6.38104 7.19101 8.3158 3.87949 4.97931 4.72528 11.0884 2.77158 4.97931 8.30682 4.97931 2.76761 3.0694 3.32147 4.42139 3.31549 4.42139 4.97931 4.42142 8.32474 3.31549 3.87354 4.97931 4.97928 4.42142 3.31546 4.42142 3.87354 7.20886 4.97931 4.42139 2.76761 7.19101 4.42139 4.42139 8.89166 2.76758 4.97931 0 ]xsh303.553 195.25 mo(experimentaldataforthetwosystems,andwenotethatit)[4.26599 4.97931 4.97931 4.42139 3.31549 2.76761 7.7489 4.42142 4.97931 2.76761 4.42139 6.83136 4.97931 4.42142 2.76761 8.46024 3.32147 4.97928 7.34436 2.76761 4.97931 8.46024 2.77161 7.09238 9.00919 3.87354 4.97928 3.87354 2.76761 4.42139 7.7489 3.87354 6.51556 4.42139 4.97931 9.01813 7.19101 8.46024 4.97931 4.97931 2.76758 8.46027 2.77161 4.97925 4.42145 6.80444 2.76764 0 ]xsh303.553 206.707 mo(possessesnooscillatorystructureintheregionoftheenergies)[4.98032 4.98029 3.87454 3.87451 4.42242 3.87451 3.87454 4.42239 6.24564 4.97733 7.35339 4.97729 3.87454 4.42239 2.76862 2.76859 2.76862 4.42239 2.76862 4.98029 3.3165 7.34442 3.87451 2.76862 3.31647 4.98029 4.42242 2.76862 4.98029 3.31647 6.78552 2.77161 7.34442 2.77161 4.98029 6.7955 3.3165 4.26599 4.98029 2.76862 4.98032 7.35339 4.98032 5.68756 2.76862 4.98032 6.7955 4.42242 4.98029 4.42242 3.14111 4.98035 2.76855 4.42242 0 ]xsh303.553 218.164 mo(ofthe2)[4.9783 6.01236 2.76663 4.9783 7.11032 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf334.377 214.546 mo(C)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf342.999 218.164 mo(and4)[4.4194 4.97733 7.67719 0 ]xshYOSQSI+MTSY*1 [6.9738 0 0 -6.9738 0 0 ]msf365.049 214.546 mo(C)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf373.68 218.164 mo(statesin)[3.87552 2.76962 4.42337 2.76962 4.4234 6.56143 2.76959 0 ]xshYOSQSD+Times-Roman*1 [6.9738 0 0 -6.9738 0 0 ]msf408.942 214.546 mo(20)[3.4834 0 ]xshYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf416.412 218.164 mo(Ne.Weconclude,therefore,that,)[7.19101 4.42139 5.17459 8.6037 7.11032 4.42139 4.97931 4.97931 4.42142 2.76761 4.97931 4.97931 4.42142 5.21143 2.76761 4.97931 4.42142 3.31546 4.42142 3.31549 4.97925 3.31549 4.42145 5.18451 2.76758 4.97931 4.42139 2.76764 0 ]xsh303.553 229.621 mo(aspredictedbythetheoreticalcalculations,thecontribution)[4.42142 7.41623 4.97931 3.31546 4.42142 4.97931 2.76761 4.42139 2.76761 4.42142 8.53198 4.97931 8.52298 2.76764 4.97931 7.96509 2.77161 4.97931 4.42139 4.97931 3.31546 4.42142 2.76761 2.76761 4.42139 4.42142 6.31827 4.42139 4.42142 2.76761 4.42139 4.97931 2.76761 4.42142 2.76758 2.76764 4.97931 4.97931 3.87354 6.04828 2.77161 4.97931 7.95612 4.42139 4.97931 4.97931 2.76764 3.31543 2.76758 4.77911 4.97729 2.76764 2.76758 4.97931 0 ]xsh303.553 241.078 mo(tothe)[2.7706 10.6022 2.7706 4.9823 0 ]xshYOSQSH+MTMI*1 [9.9626 0 0 -9.9626 0 0 ]msf334.729 241.078 mo(Q)shYOSQSD+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf343.18 241.078 mo(-valuespectrafromprojectileexcitationsisthe)[3.31747 4.72525 4.4234 2.76959 4.98132 10.0622 3.87552 4.98129 4.4234 4.4234 2.76959 3.31747 10.0533 3.3175 3.31744 4.98132 13.3738 4.98129 3.31747 4.98129 2.76962 4.4234 4.42337 2.76962 2.76959 2.76959 10.0533 4.26596 4.98129 4.4234 2.76959 2.76962 4.42337 2.76962 2.76962 4.98126 4.98132 9.52234 2.76959 9.50439 2.76959 4.98132 0 ]xsh303.553 252.535 mo(sameinbothreactions,andthedifferencemustbeduetoa)[3.87454 4.42239 7.74991 7.9382 2.76859 8.49612 4.98029 4.98032 2.76859 8.5051 3.32047 4.42239 4.42239 4.42239 2.76862 2.76859 4.98032 4.98032 3.87451 6.01242 4.42239 4.98032 8.50507 2.76862 4.98029 7.9382 4.97733 2.76862 3.0694 3.31647 4.42239 3.31647 4.42242 4.98029 4.42242 7.94717 7.74991 4.98032 3.87454 6.29138 4.98032 7.9382 4.98035 4.98029 7.94714 2.76862 8.49609 0 ]xshYOSQSD+Times-Roman*1 [8.9664 0 0 -8.9664 0 0 ]msf277.398 276.448 mo(054613-4)[4.48322 4.48318 4.48318 4.48322 4.48322 4.48318 2.98575 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/YOSQSD+Times-Roman*1 uf/YOSQSD+Times-Roman uf/LWYAAA+Times-Roman uf/YOSQSJ+TimesNewRomanPS*1 uf/YOSQSJ+TimesNewRomanPS uf/SBVPMX+TimesNewRomanPS uf/YOSQSI+MTSY*1 uf/YOSQSI+MTSY uf/KVXQMX+MTSY uf/YOSQSH+MTMI*1 uf/YOSQSH+MTMI uf/CMKQMX+MTMI uf/YOSQSG+Helvetica*1 uf/YOSQSG+Helvetica uf/UPEAAA+Helvetica uf/YOSQSF+Times-Bold*1 uf/YOSQSF+Times-Bold uf/DLGQMX+Times-Bold uf/YOSQSE+Times-Italic*1 uf/YOSQSE+Times-Italic uf/JIWAAA+Times-Italic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
